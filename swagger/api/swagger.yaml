openapi: 3.0.3
info:
  title: Unleash API
  version: 5.2.0-main
servers:
- url: https://us.app.unleash-hosted.com/ushosted
security:
- apiKey: []
tags:
- name: Addons
  description: Create, update, and delete [Unleash addons](https://docs.getunleash.io/addons).
- name: Admin UI
  description: Configuration for the Unleash Admin UI. These endpoints should not
    be relied upon and can change at any point without prior notice.
- name: API tokens
  description: Create, update, and delete [Unleash API tokens](https://docs.getunleash.io/reference/api-tokens-and-client-keys).
- name: Archive
  description: Revive or permanently delete [archived feature toggles](https://docs.getunleash.io/advanced/archived_toggles).
- name: Auth
  description: Manage logins, passwords, etc.
- name: Client
  description: Endpoints for [Unleash server-side clients](https://docs.getunleash.io/reference/sdks).
- name: Context
  description: Create, update, and delete [context fields](https://docs.getunleash.io/reference/unleash-context)
    that Unleash is aware of.
- name: Edge
  description: Endpoints related to Unleash on the Edge.
- name: Environments
  description: Create, update, delete, enable or disable [environments](https://docs.getunleash.io/reference/environments)
    for this Unleash instance.
- name: Events
  description: Read events from this Unleash instance.
- name: Features
  description: Create, update, and delete [features toggles](https://docs.getunleash.io/reference/feature-toggles).
- name: Frontend API
  description: API for connecting client-side (frontend) applications to Unleash.
- name: Import/Export
  description: '[Import and export](https://docs.getunleash.io/deploy/import_export)
    the state of your Unleash instance.'
- name: Instance Admin
  description: Instance admin endpoints used to manage the Unleash instance itself.
- name: Maintenance
  description: Enable/disable the maintenance mode of Unleash.
- name: Metrics
  description: Register, read, or delete metrics recorded by Unleash.
- name: Notifications
  description: API for managing [notifications](https://docs.getunleash.io/reference/notifications).
- name: Operational
  description: Endpoints related to the operational status of this Unleash instance.
- name: Personal access tokens
  description: Create, update, and delete [Personal access tokens](https://docs.getunleash.io/reference/api-tokens-and-client-keys#personal-access-tokens).
- name: Playground
  description: Evaluate an Unleash context against your feature toggles.
- name: Projects
  description: Create, update, and delete [Unleash projects](https://docs.getunleash.io/reference/projects).
- name: Public signup tokens
  description: Create, update, and delete [Unleash Public Signup tokens](https://docs.getunleash.io/reference/public-signup-tokens).
- name: Segments
  description: Create, update, delete, and manage [segments](https://docs.getunleash.io/reference/segments).
- name: Service Accounts
  description: Endpoints for managing [Service Accounts](https://docs.getunleash.io/reference/service-accounts),
    which enable programmatic access to the Unleash API.
- name: Strategies
  description: Create, update, delete, manage [custom strategies](https://docs.getunleash.io/reference/custom-activation-strategies).
- name: Tags
  description: Create, update, and delete [tags and tag types](https://docs.getunleash.io/reference/tags).
- name: Telemetry
  description: API for information about telemetry collection
- name: Unstable
  description: Experimental endpoints that may change or disappear at any time.
- name: Users
  description: Manage users and passwords.
paths:
  /auth/simple/login:
    post:
      tags:
      - Auth
      summary: Log in
      description: Logs in the user and creates an active session
      operationId: login
      requestBody:
        description: loginSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginSchema'
        required: true
      responses:
        "200":
          description: userSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/auth/google/settings:
    get:
      tags:
      - Auth
      summary: Get Google auth settings
      description: Returns the current settings for Google Authentication (deprecated,
        please use OpenID instead)
      operationId: getGoogleSettings
      responses:
        "200":
          description: googleSettingsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googleSettingsSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
      deprecated: true
    post:
      tags:
      - Auth
      summary: Set Google auth options
      description: Updates the settings for Google Authentication (deprecated, please
        use OpenID instead)
      operationId: setGoogleSettings
      requestBody:
        description: googleSettingsSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/googleSettingsSchema'
        required: true
      responses:
        "200":
          description: googleSettingsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googleSettingsSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
      deprecated: true
  /api/admin/auth/saml/settings:
    get:
      tags:
      - Auth
      summary: Get SAML auth settings
      description: Returns the current settings for SAML authentication
      operationId: getSamlSettings
      responses:
        "200":
          description: samlSettingsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/samlSettingsSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
    post:
      tags:
      - Auth
      summary: Update SAML auth settings
      description: Updates the settings for SAML Authentication
      operationId: setSamlSettings
      requestBody:
        description: samlSettingsSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/samlSettingsSchema'
        required: true
      responses:
        "200":
          description: samlSettingsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/samlSettingsSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/auth/oidc/settings:
    get:
      tags:
      - Auth
      summary: Get OIDC auth settings
      description: Returns the current settings for OIDC Authentication
      operationId: getOidcSettings
      responses:
        "200":
          description: oidcSettingsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oidcSettingsSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
    post:
      tags:
      - Auth
      operationId: setOidcSettings
      requestBody:
        description: oidcSettingsSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oidcSettingsSchema'
        required: true
      responses:
        "200":
          description: oidcSettingsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oidcSettingsSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/auth/simple/settings:
    get:
      tags:
      - Auth
      summary: Get Simple auth settings
      description: Is simple authentication (username/password) enabled for this server
      operationId: getSimpleSettings
      responses:
        "200":
          description: passwordAuthSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/passwordAuthSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
    post:
      tags:
      - Auth
      summary: Update Simple auth settings
      description: Enable or disable simple authentication (username/password)
      operationId: setSimpleSettings
      requestBody:
        description: passwordAuthSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passwordAuthSchema'
        required: true
      responses:
        "200":
          description: passwordAuthSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/passwordAuthSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/groups:
    get:
      tags:
      - Users
      operationId: getGroups
      responses:
        "200":
          description: groupsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsSchema'
    post:
      tags:
      - Users
      operationId: createGroup
      requestBody:
        description: groupSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groupSchema'
        required: true
      responses:
        "200":
          description: groupSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupSchema'
  /api/admin/groups/{groupId}:
    get:
      tags:
      - Users
      operationId: getGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: groupSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupSchema'
    put:
      tags:
      - Users
      operationId: updateGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: groupSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groupSchema'
        required: true
      responses:
        "200":
          description: groupSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupSchema'
    delete:
      tags:
      - Users
      operationId: deleteGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
  /api/admin/roles:
    get:
      tags:
      - Users
      operationId: getRoles
      responses:
        "200":
          description: rolesWithVersionSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rolesWithVersionSchema'
    post:
      tags:
      - Users
      operationId: createRole
      requestBody:
        description: createRoleWithPermissionsSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRoleWithPermissionsSchema'
        required: true
      responses:
        "200":
          description: roleWithVersionSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/roleWithVersionSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /api/admin/roles/{roleId}:
    get:
      tags:
      - Users
      operationId: getRoleById
      parameters:
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: roleWithPermissionsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/roleWithPermissionsSchema'
    put:
      tags:
      - Users
      operationId: updateRole
      parameters:
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: createRoleWithPermissionsSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRoleWithPermissionsSchema'
        required: true
      responses:
        "200":
          description: roleWithVersionSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/roleWithVersionSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    delete:
      tags:
      - Users
      operationId: deleteRole
      parameters:
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "409":
          description: The provided resource can not be created or updated because
            it would conflict with the current state of the resource or with an already
            existing resource, respectively.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
  /api/admin/roles/validate:
    post:
      tags:
      - Users
      operationId: validateRole
      requestBody:
        description: createRoleWithPermissionsSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRoleWithPermissionsSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /api/admin/environments:
    get:
      tags:
      - Environments
      summary: Get all environments
      description: Retrieves all environments that exist in this Unleash instance.
      operationId: getAllEnvironments
      responses:
        "200":
          description: environmentsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/environmentsSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
    post:
      tags:
      - Environments
      summary: Creates a new environment
      description: Uses the details provided in the payload to create a new environment
      operationId: createEnvironment
      requestBody:
        description: createEnvironmentSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEnvironmentSchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/environmentSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/environments/validate:
    post:
      tags:
      - Environments
      summary: Validates if an environment name exists
      description: Uses the name provided in the body of the request to validate if
        the given name exists or not
      operationId: validateEnvironmentName
      requestBody:
        description: nameSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nameSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/environments/update/{name}:
    put:
      tags:
      - Environments
      summary: Updates an environment by name
      description: Given an environment by name updates the environment with the given
        payload. Note that `name`, `enabled` and `protected` cannot be changed by
        this API
      operationId: updateEnvironment
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: updateEnvironmentSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateEnvironmentSchema'
        required: true
      responses:
        "200":
          description: environmentSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/environmentSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/environments/{name}:
    get:
      tags:
      - Environments
      summary: Get the environment with `name`
      description: Retrieves the environment with `name` if it exists in this Unleash
        instance
      operationId: getEnvironment
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: environmentSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/environmentSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    delete:
      tags:
      - Environments
      summary: Deletes an environment by name
      description: Given an existing environment by name, this endpoint will attempt
        to delete it
      operationId: removeEnvironment
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/environments/{name}/clone:
    post:
      tags:
      - Environments
      summary: Clones an environment
      description: Given an existing environment name and a set of options, this will
        create a copy of that environment
      operationId: cloneEnvironment
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/service-account:
    get:
      tags:
      - Service Accounts
      summary: List service accounts.
      description: Returns the list of all service accounts.
      operationId: getServiceAccounts
      responses:
        "200":
          description: serviceAccountsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceAccountsSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
    post:
      tags:
      - Service Accounts
      summary: Create a service account.
      description: Creates a new service account.
      operationId: createServiceAccount
      requestBody:
        description: createServiceAccountSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createServiceAccountSchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceAccountSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "409":
          description: The provided resource can not be created or updated because
            it would conflict with the current state of the resource or with an already
            existing resource, respectively.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/service-account/{id}:
    put:
      tags:
      - Service Accounts
      summary: Update a service account.
      description: Updates an existing service account identified by its id.
      operationId: updateServiceAccount
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: updateServiceAccountSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateServiceAccountSchema'
        required: true
      responses:
        "200":
          description: serviceAccountSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceAccountSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
    delete:
      tags:
      - Service Accounts
      summary: Delete a service account.
      description: Deletes an existing service account identified by its id.
      operationId: deleteServiceAccount
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/service-account/{id}/token:
    get:
      tags:
      - Service Accounts
      summary: List all tokens for a service account.
      description: Returns the list of all tokens for a service account identified
        by the id.
      operationId: getServiceAccountTokens
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: patsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patsSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    post:
      tags:
      - Service Accounts
      summary: Create a token for a service account.
      description: Creates a new token for the service account identified by the id.
      operationId: createServiceAccountToken
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: patSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patSchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "409":
          description: The provided resource can not be created or updated because
            it would conflict with the current state of the resource or with an already
            existing resource, respectively.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/service-account/{id}/token/{tokenId}:
    delete:
      tags:
      - Service Accounts
      summary: Delete a token for a service account.
      description: Deletes a token for the service account identified both by the
        service account's id and the token's id.
      operationId: deleteServiceAccountToken
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tokenId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/features-batch/export:
    post:
      tags:
      - Import/Export
      summary: Export feature toggles from an environment
      description: Exports all features listed in the `features` property from the
        environment specified in the request body. If set to `true`, the `downloadFile`
        property will let you download a file with the exported data. Otherwise, the
        export data is returned directly as JSON. Refer to the documentation for more
        information about [Unleash's export functionality](https://docs.getunleash.io/reference/deploy/environment-import-export#export).
      operationId: exportFeatures
      requestBody:
        description: exportQuerySchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportQuerySchema'
        required: true
      responses:
        "200":
          description: exportResultSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportResultSchema'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/features-batch/validate:
    post:
      tags:
      - Import/Export
      summary: Validate feature import data
      description: Validates a feature toggle data set. Checks whether the data can
        be imported into the specified project and environment. The returned value
        is an object that contains errors, warnings, and permissions required to perform
        the import, as described in the [import documentation](https://docs.getunleash.io/reference/deploy/environment-import-export#import).
      operationId: validateImport
      requestBody:
        description: importTogglesSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/importTogglesSchema'
        required: true
      responses:
        "200":
          description: importTogglesValidateSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importTogglesValidateSchema'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/features-batch/import:
    post:
      tags:
      - Import/Export
      summary: Import feature toggles
      description: '[Import feature toggles](https://docs.getunleash.io/reference/deploy/environment-import-export#import)
        into a specific project and environment.'
      operationId: importToggles
      requestBody:
        description: importTogglesSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/importTogglesSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/logins:
    get:
      tags:
      - Unstable
      summary: Get all login events.
      description: Returns **all** login events in the Unleash system. You can optionally
        get them in CSV format by specifying the `Accept` header as `text/csv`.
      operationId: getLoginHistory
      responses:
        "200":
          description: loginHistorySchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginHistorySchema'
            text/csv:
              schema:
                type: string
        "204":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/projects:
    get:
      tags:
      - Projects
      summary: Get a list of all projects.
      description: This endpoint returns an list of all the projects in the Unleash
        instance.
      operationId: getProjects
      responses:
        "200":
          description: projectsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectsSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
    post:
      tags:
      - Projects
      operationId: createProject
      requestBody:
        description: createProjectSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createProjectSchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectCreatedSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/projects/validate:
    post:
      tags:
      - Projects
      operationId: validateProject
      requestBody:
        description: validateProjectSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/validateProjectSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
  /api/admin/projects/{projectId}:
    get:
      tags:
      - Projects
      summary: Get an overview of a project.
      description: This endpoint returns an overview of the specified projects stats,
        project health, number of members, which environments are configured, and
        the features in the project.
      operationId: getProjectOverview
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: projectOverviewSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectOverviewSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    put:
      tags:
      - Projects
      operationId: updateProject
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: updateProjectSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateProjectSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
    delete:
      tags:
      - Projects
      operationId: deleteProject
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
  /api/admin/projects/{projectId}/users:
    get:
      tags:
      - Projects
      operationId: getProjectUsers
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: projectUsersSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectUsersSchema'
      deprecated: true
  /api/admin/projects/{projectId}/access:
    get:
      tags:
      - Projects
      operationId: getProjectAccess
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: projectAccessSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectAccessSchema'
  /api/admin/projects/{projectId}/users/{userId}/roles/{roleId}:
    put:
      tags:
      - Projects
      operationId: changeRoleForUser
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
    post:
      tags:
      - Projects
      operationId: addRoleToUser
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
    delete:
      tags:
      - Projects
      operationId: removeRoleForUser
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
  /api/admin/projects/{projectId}/groups/{groupId}/roles/{roleId}:
    put:
      tags:
      - Projects
      operationId: changeRoleForGroup
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
    delete:
      tags:
      - Projects
      operationId: removeRoleFromGroup
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
  /api/admin/projects/{projectId}/role/{roleId}/access:
    post:
      tags:
      - Projects
      operationId: addAccessToProject
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
  /api/admin/projects/{projectId}/features/{featureName}/changeProject:
    post:
      tags:
      - Features
      summary: Move feature to project
      description: Moves the specified feature to the new project in the request schema.
        Requires you to have permissions to move the feature toggle in both projects.
        Features that are included in any active change requests can not be moved.
      operationId: changeProject
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: changeProjectSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeProjectSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/projects/{projectId}/settings:
    get:
      tags:
      - Projects
      operationId: getProjectSettings
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: projectSettingsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectSettingsSchema'
        "404":
          description: This response has no body.
  /api/admin/permissions:
    get:
      tags:
      - Auth
      summary: Gets available permissions
      description: Returns a list of available permissions
      operationId: getPermissions
      responses:
        "200":
          description: adminPermissionsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/adminPermissionsSchema'
  /api/admin/segments/validate:
    post:
      tags:
      - Segments
      summary: Validates if a segment name exists
      description: Uses the name provided in the body of the request to validate if
        the given name exists or not
      operationId: validateSegment
      requestBody:
        description: nameSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nameSchema'
        required: true
      responses:
        "204":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "409":
          description: The provided resource can not be created or updated because
            it would conflict with the current state of the resource or with an already
            existing resource, respectively.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/segments/strategies/{strategyId}:
    get:
      tags:
      - Segments
      summary: Get strategy segments
      description: Retrieve all segments that are referenced by the specified strategy.
        Returns an empty list of segments if the strategy ID doesn't exist.
      operationId: getSegmentsByStrategyId
      parameters:
      - name: strategyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: segmentsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/segmentsSchema'
  /api/admin/segments/strategies:
    post:
      tags:
      - Strategies
      summary: Update strategy segments
      description: Sets the segments of the strategy specified to be exactly the ones
        passed in the payload. Any segments that were used by the strategy before
        will be removed if they are not in the provided list of segments.
      operationId: updateFeatureStrategySegments
      requestBody:
        description: updateFeatureStrategySegmentsSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateFeatureStrategySegmentsSchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateFeatureStrategySegmentsSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/segments/{id}/strategies:
    get:
      tags:
      - Segments
      summary: Get strategies that reference segment
      description: Retrieve all strategies that reference the specified segment.
      operationId: getStrategiesBySegmentId
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: adminStrategiesSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/adminStrategiesSchema'
  /api/admin/segments/{id}:
    get:
      tags:
      - Segments
      summary: Get a segment
      description: Retrieves a segment based on its ID.
      operationId: getSegment
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: adminSegmentSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/adminSegmentSchema'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    put:
      tags:
      - Segments
      summary: Update segment by id
      description: Updates the content of the segment with the provided payload. Any
        fields not specified will be left untouched.
      operationId: updateSegment
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "409":
          description: The provided resource can not be created or updated because
            it would conflict with the current state of the resource or with an already
            existing resource, respectively.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
    delete:
      tags:
      - Segments
      summary: Deletes a segment by id
      description: Deletes a segment by its id, if not found returns a 409 error
      operationId: removeSegment
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "409":
          description: The provided resource can not be created or updated because
            it would conflict with the current state of the resource or with an already
            existing resource, respectively.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
  /api/admin/segments:
    get:
      tags:
      - Segments
      summary: Get all segments
      description: Retrieves all segments that exist in this Unleash instance.
      operationId: getSegments
      responses:
        "200":
          description: segmentsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/segmentsSchema'
    post:
      tags:
      - Segments
      summary: Create a new segment
      description: Creates a new segment using the payload provided
      operationId: createSegment
      requestBody:
        description: upsertSegmentSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/upsertSegmentSchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/adminSegmentSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "409":
          description: The provided resource can not be created or updated because
            it would conflict with the current state of the resource or with an already
            existing resource, respectively.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/metrics/rps:
    get:
      tags:
      - Metrics
      summary: Gets usage data
      description: Gets usage data per app/endpoint from a prometheus compatible metrics
        endpoint
      operationId: getRequestsPerSecond
      responses:
        "200":
          description: requestsPerSecondSegmentedSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/requestsPerSecondSegmentedSchema'
  /api/admin/notifications:
    get:
      tags:
      - Unstable
      summary: Retrieves a list of notifications
      description: A user may get relevant notifications from the projects they are
        a member of
      operationId: getNotifications
      responses:
        "200":
          description: notificationsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notificationsSchema'
  /api/admin/notifications/read:
    post:
      tags:
      - Unstable
      summary: Mark notifications as read
      description: Allow to select which notifications were read and saving a read
        date
      operationId: markNotificationsAsRead
      requestBody:
        description: markNotificationsAsReadSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/markNotificationsAsReadSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
  /health:
    get:
      tags:
      - Operational
      summary: Get instance operational status
      description: This operation returns information about whether this Unleash instance
        is healthy and ready to serve requests or not. Typically used by your deployment
        orchestrator (e.g. Kubernetes, Docker Swarm, Mesos, et al.).
      operationId: getHealth
      responses:
        "200":
          description: healthCheckSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckSchema'
        "500":
          description: healthCheckSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckSchema'
  /invite/{token}/validate:
    get:
      tags:
      - Public signup tokens
      summary: Check whether a public sign-up token exists, has not expired and is
        enabled
      operationId: validatePublicSignupToken
      parameters:
      - name: token
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /invite/{token}/signup:
    post:
      tags:
      - Public signup tokens
      summary: Add a user via a signup token
      description: Create a user with the viewer root role and link them to the provided
        signup token
      operationId: addPublicSignupTokenUser
      parameters:
      - name: token
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: createInvitedUserSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createInvitedUserSchema'
        required: true
      responses:
        "200":
          description: userSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: The provided resource can not be created or updated because
            it would conflict with the current state of the resource or with an already
            existing resource, respectively.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
  /auth/reset/validate:
    get:
      tags:
      - Auth
      summary: Validates a token
      description: If the token is valid returns the user that owns the token
      operationId: validateToken
      responses:
        "200":
          description: tokenUserSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tokenUserSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /auth/reset/password:
    post:
      tags:
      - Auth
      summary: Changes a user password
      description: Allows users with a valid reset token to reset their password without
        remembering their old password
      operationId: changePassword
      requestBody:
        description: changePasswordSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changePasswordSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /auth/reset/validate-password:
    post:
      tags:
      - Auth
      summary: Validates password
      description: Verifies that the password adheres to the [Unleash password guidelines](https://docs.getunleash.io/reference/deploy/securing-unleash#password-requirements)
      operationId: validatePassword
      requestBody:
        description: validatePasswordSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/validatePasswordSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /auth/reset/password-email:
    post:
      tags:
      - Auth
      summary: Reset password
      description: Requests a password reset email for the user. This email can be
        used to reset the password for a user that has forgotten their password
      operationId: sendResetPasswordEmail
      requestBody:
        description: emailSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/features:
    get:
      tags:
      - Features
      summary: Get all features (deprecated)
      description: Gets all feature toggles with their full configuration. This endpoint
        is **deprecated**. You should  use the project-based endpoint instead (`/api/admin/projects/<project-id>/features`).
      operationId: getAllToggles
      responses:
        "200":
          description: featuresSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featuresSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
      deprecated: true
  /api/admin/features/validate:
    post:
      tags:
      - Features
      summary: Validate feature name
      description: 'Validates a feature toggle name: checks whether the name is URL-friendly
        and whether a feature with the given name already exists. Returns 200 if the
        feature name is compliant and unused.'
      operationId: validateFeature
      requestBody:
        description: validateFeatureSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/validateFeatureSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "409":
          description: The provided resource can not be created or updated because
            it would conflict with the current state of the resource or with an already
            existing resource, respectively.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/features/{featureName}/tags:
    get:
      tags:
      - Features
      summary: Get all tags for a feature.
      description: Retrieves all the tags for a feature name. If the feature does
        not exist it returns an empty list.
      operationId: listTags
      parameters:
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: tagsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tagsSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    put:
      tags:
      - Features
      summary: Updates multiple tags for a feature.
      description: Receives a list of tags to add and a list of tags to remove that
        are mandatory but can be empty. All tags under addedTags are first added to
        the feature and then all tags under removedTags are removed from the feature.
      operationId: updateTags
      parameters:
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: updateTagsSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateTagsSchema'
        required: true
      responses:
        "200":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tagsSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    post:
      tags:
      - Features
      summary: Adds a tag to a feature.
      description: Adds a tag to a feature if the feature and tag type exist in the
        system. The operation is idempotent, so adding an existing tag will result
        in a successful response.
      operationId: addTag
      parameters:
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: tagSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tagSchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tagSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/features/{featureName}/tags/{type}/{value}:
    delete:
      tags:
      - Features
      summary: Removes a tag from a feature.
      description: Removes a tag from a feature. If the feature exists but the tag
        does not, it returns a successful response.
      operationId: removeTag
      parameters:
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: value
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/feature-types:
    get:
      tags:
      - Features
      summary: Get all feature types
      description: Retrieves all feature types that exist in this Unleash instance,
        along with their descriptions and lifetimes.
      operationId: getAllFeatureTypes
      responses:
        "200":
          description: featureTypesSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureTypesSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/archive/features:
    get:
      tags:
      - Archive
      operationId: getArchivedFeatures
      responses:
        "200":
          description: featuresSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featuresSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
      deprecated: true
  /api/admin/archive/features/{projectId}:
    get:
      tags:
      - Archive
      operationId: getArchivedFeaturesByProjectId
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: featuresSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featuresSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
      deprecated: true
  /api/admin/archive/{featureName}:
    delete:
      tags:
      - Archive
      summary: Archives a feature
      description: This endpoint archives the specified feature.
      operationId: deleteFeature
      parameters:
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/archive/revive/{featureName}:
    post:
      tags:
      - Archive
      summary: Revives a feature
      description: This endpoint revives the specified feature from archive.
      operationId: reviveFeature
      parameters:
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/strategies:
    get:
      tags:
      - Strategies
      summary: Get all strategies
      description: Retrieves all strategy types ([predefined](https://docs.getunleash.io/reference/activation-strategies
        "predefined strategies") and [custom strategies](https://docs.getunleash.io/reference/custom-activation-strategies))
        that are defined on this Unleash instance.
      operationId: getAllStrategies
      responses:
        "200":
          description: strategiesSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/strategiesSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
    post:
      tags:
      - Strategies
      summary: Create a strategy
      description: Creates a strategy type based on the supplied data.
      operationId: createStrategy
      requestBody:
        description: createStrategySchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createStrategySchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/strategySchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "409":
          description: The provided resource can not be created or updated because
            it would conflict with the current state of the resource or with an already
            existing resource, respectively.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/strategies/{name}:
    get:
      tags:
      - Strategies
      summary: Get a strategy definition
      description: Retrieves the definition of the strategy specified in the URL
      operationId: getStrategy
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: strategySchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/strategySchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    delete:
      tags:
      - Strategies
      summary: Delete a strategy
      description: Deletes the specified strategy definition
      operationId: removeStrategy
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/strategies/{strategyName}:
    put:
      tags:
      - Strategies
      summary: Update a strategy type
      description: Updates the specified strategy type. Any properties not specified
        in the request body are left untouched.
      operationId: updateStrategy
      parameters:
      - name: strategyName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: updateStrategySchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateStrategySchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/strategies/{strategyName}/deprecate:
    post:
      tags:
      - Strategies
      summary: Deprecate a strategy
      description: Marks the specified strategy as deprecated.
      operationId: deprecateStrategy
      parameters:
      - name: strategyName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/strategies/{strategyName}/reactivate:
    post:
      tags:
      - Strategies
      summary: Reactivate a strategy
      description: Marks the specified strategy as not deprecated. If the strategy
        wasn't already deprecated, nothing changes.
      operationId: reactivateStrategy
      parameters:
      - name: strategyName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/events:
    get:
      tags:
      - Events
      summary: Get the most recent events from the Unleash instance or all events
        related to a project.
      description: |-
        Returns **the last 100** events from the Unleash instance when called without a query parameter. When called with a `project` parameter, returns **all events** for the specified project.

        If the provided project does not exist, the list of events will be empty.
      operationId: getEvents
      parameters:
      - name: project
        in: query
        description: The name of the project whose events you want to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: eventsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventsSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/events/{featureName}:
    get:
      tags:
      - Events
      summary: Get all events related to a specific feature toggle.
      description: Returns all events related to the specified feature toggle. If
        the feature toggle does not exist, the list of events will be empty.
      operationId: getEventsForToggle
      parameters:
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: featureEventsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureEventsSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/events/search:
    post:
      tags:
      - Events
      summary: Search for events
      description: Allows searching for events matching the search criteria in the
        request body
      operationId: searchEvents
      requestBody:
        description: searchEventsSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchEventsSchema'
        required: true
      responses:
        "200":
          description: eventsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventsSchema'
  /api/admin/playground:
    post:
      tags:
      - Playground
      summary: Evaluate an Unleash context against a set of environments and projects.
      description: Use the provided `context`, `environment`, and `projects` to evaluate
        toggles on this Unleash instance. Returns a list of all toggles that match
        the parameters and what they evaluate to. The response also contains the input
        parameters that were provided.
      operationId: getPlayground
      requestBody:
        description: playgroundRequestSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/playgroundRequestSchema'
        required: true
      responses:
        "200":
          description: playgroundResponseSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playgroundResponseSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/playground/advanced:
    post:
      tags:
      - Unstable
      summary: Batch evaluate an Unleash context against a set of environments and
        projects.
      description: Use the provided `context`, `environments`, and `projects` to evaluate
        toggles on this Unleash instance. You can use comma-separated values to provide
        multiple values to each context field. Returns a combinatorial list of all
        toggles that match the parameters and what they evaluate to. The response
        also contains the input parameters that were provided.
      operationId: getAdvancedPlayground
      requestBody:
        description: advancedPlaygroundRequestSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/advancedPlaygroundRequestSchema'
        required: true
      responses:
        "200":
          description: advancedPlaygroundResponseSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/advancedPlaygroundResponseSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/metrics/applications/{appName}:
    get:
      tags:
      - Metrics
      summary: Get application data
      description: Returns data about the specified application (`appName`). The data
        contains information on the name of the application, sdkVersion (which sdk
        reported these metrics, typically `unleash-client-node:3.4.1` or `unleash-client-java:7.1.0`),
        as well as data about how to display this application in a list.
      operationId: getApplication
      parameters:
      - name: appName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: applicationSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicationSchema'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    post:
      tags:
      - Metrics
      summary: Create an application to connect reported metrics
      description: Is used to report usage as well which sdk the application uses
      operationId: createApplication
      parameters:
      - name: appName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: createApplicationSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createApplicationSchema'
        required: true
      responses:
        "202":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
    delete:
      tags:
      - Metrics
      summary: Delete an application
      description: Delete the application specified in the request URL. Returns 200
        OK if the application was successfully deleted or if it didn't exist
      operationId: deleteApplication
      parameters:
      - name: appName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/metrics/applications:
    get:
      tags:
      - Metrics
      summary: Get all applications
      description: Returns all applications registered with Unleash. Applications
        can be created via metrics reporting or manual creation
      operationId: getApplications
      responses:
        "200":
          description: applicationsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicationsSchema'
  /api/admin/client-metrics/features/{name}/raw:
    get:
      tags:
      - Metrics
      summary: Feature usage metrics for the last 48 hours, grouped by hour
      operationId: getRawFeatureMetrics
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: featureMetricsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureMetricsSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/client-metrics/features/{name}:
    get:
      tags:
      - Metrics
      summary: Last hour of usage and a list of applications that have reported seeing
        this feature toggle
      description: Separate counts for yes (enabled), no (disabled), as well as how
        many times each variant was selected during the last hour
      operationId: getFeatureUsageSummary
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: featureUsageSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureUsageSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/user:
    get:
      tags:
      - Users
      summary: Get your own user details
      description: Detailed information about the current user, user permissions and
        user feedback
      operationId: getMe
      responses:
        "200":
          description: meSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/meSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/user/profile:
    get:
      tags:
      - Users
      summary: Get your own user profile
      description: Detailed information about the current user root role and project
        membership
      operationId: getProfile
      responses:
        "200":
          description: profileSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profileSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/user/change-password:
    post:
      tags:
      - Users
      summary: Change your own password
      description: Requires specifying old password and confirming new password
      operationId: changeMyPassword
      requestBody:
        description: passwordSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passwordSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          description: Old and new password do not match
        "401":
          description: Old password is incorrect or user is not authenticated
  /api/admin/user/tokens:
    get:
      tags:
      - Personal access tokens
      summary: Get all Personal Access Tokens for the current user.
      description: Returns all of the [Personal Access Tokens](https://docs.getunleash.io/how-to/how-to-create-personal-access-tokens)
        belonging to the current user.
      operationId: getPats
      responses:
        "200":
          description: patsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patsSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    post:
      tags:
      - Personal access tokens
      summary: Create a new Personal Access Token.
      description: Creates a new [Personal Access Token](https://docs.getunleash.io/how-to/how-to-create-personal-access-tokens)
        for the current user.
      operationId: createPat
      requestBody:
        description: patSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patSchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/user/tokens/{id}:
    delete:
      tags:
      - Personal access tokens
      summary: Delete a Personal Access Token.
      description: This endpoint allows for deleting a [Personal Access Token](https://docs.getunleash.io/how-to/how-to-create-personal-access-tokens)
        belonging to the current user.
      operationId: deletePat
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/ui-config:
    get:
      tags:
      - Admin UI
      operationId: getUiConfig
      responses:
        "200":
          description: uiConfigSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uiConfigSchema'
    post:
      tags:
      - Admin UI
      operationId: setUiConfig
      requestBody:
        description: setUiConfigSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setUiConfigSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
  /api/admin/context:
    get:
      tags:
      - Context
      summary: Gets configured context fields
      description: Returns all configured [Context fields](https://docs.getunleash.io/how-to/how-to-define-custom-context-fields)
        that have been created.
      operationId: getContextFields
      responses:
        "200":
          description: contextFieldsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contextFieldsSchema'
    post:
      tags:
      - Context
      summary: Create a context field
      description: Endpoint that allows creation of [custom context fields](https://docs.getunleash.io/reference/unleash-context#custom-context-fields)
      operationId: createContextField
      requestBody:
        description: upsertContextFieldSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/upsertContextFieldSchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contextFieldSchema'
  /api/admin/context/{contextField}:
    get:
      tags:
      - Context
      summary: Gets context field
      description: Returns specific [context field](https://docs.getunleash.io/reference/unleash-context)
        identified by the name in the path
      operationId: getContextField
      parameters:
      - name: contextField
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: contextFieldSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contextFieldSchema'
    put:
      tags:
      - Context
      summary: Update an existing context field
      description: Endpoint that allows updating a custom context field. Used to toggle
        stickiness and add/remove legal values for this context field
      operationId: updateContextField
      parameters:
      - name: contextField
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: upsertContextFieldSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/upsertContextFieldSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
    delete:
      tags:
      - Context
      summary: Delete an existing context field
      description: Endpoint that allows deletion of a custom context field. Does not
        validate that context field is not in use, but since context field configuration
        is stored in a json blob for the strategy, existing strategies are safe.
      operationId: deleteContextField
      parameters:
      - name: contextField
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
  /api/admin/context/{contextField}/strategies:
    get:
      tags:
      - Strategies
      summary: Get strategies that use a context field
      description: Retrieves a list of all strategies that use the specified context
        field. If the context field doesn't exist, returns an empty list of strategies
      operationId: getStrategiesByContextField
      parameters:
      - name: contextField
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: contextFieldStrategiesSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contextFieldStrategiesSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/context/validate:
    post:
      tags:
      - Context
      summary: Validate a context field
      description: Check whether the provided data can be used to create a context
        field. If the data is not valid, ...?
      operationId: validate
      requestBody:
        description: nameSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nameSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
  /api/admin/state/import:
    post:
      tags:
      - Import/Export
      summary: Import state (deprecated)
      description: Imports state into the system. Deprecated in favor of /api/admin/features-batch/import
      operationId: import
      requestBody:
        description: stateSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stateSchema'
        required: true
      responses:
        "202":
          description: This response has no body.
      deprecated: true
  /api/admin/state/export:
    get:
      tags:
      - Import/Export
      summary: Export state (deprecated)
      description: Exports the current state of the system. Deprecated in favor of
        /api/admin/features-batch/export
      operationId: export
      parameters:
      - name: format
        in: query
        description: Desired export format. Must be either `json` or `yaml`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: json
          enum:
          - json
          - yaml
      - name: download
        in: query
        description: Whether exported data should be downloaded as a file.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/download'
      - name: strategies
        in: query
        description: Whether strategies should be included in the exported data.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/strategies'
      - name: featureToggles
        in: query
        description: Whether feature toggles should be included in the exported data.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/featureToggles'
      - name: projects
        in: query
        description: Whether projects should be included in the exported data.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/projects'
      - name: tags
        in: query
        description: Whether tag types, tags, and feature_tags should be included
          in the exported data.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/tags'
      - name: environments
        in: query
        description: Whether environments should be included in the exported data.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/environments'
      responses:
        "200":
          description: stateSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stateSchema'
      deprecated: true
  /api/admin/tags:
    get:
      tags:
      - Tags
      summary: List all tags.
      description: List all tags available in Unleash.
      operationId: getTags
      responses:
        "200":
          description: tagsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tagsSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
    post:
      tags:
      - Tags
      summary: Create a new tag.
      description: Create a new tag with the specified data.
      operationId: createTag
      requestBody:
        description: tagSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tagSchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tagWithVersionSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "409":
          description: The provided resource can not be created or updated because
            it would conflict with the current state of the resource or with an already
            existing resource, respectively.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/tags/{type}:
    get:
      tags:
      - Tags
      summary: List all tags of a given type.
      description: List all tags of a given type. If the tag type does not exist it
        returns an empty list.
      operationId: getTagsByType
      parameters:
      - name: type
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: tagsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tagsSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/tags/{type}/{value}:
    get:
      tags:
      - Tags
      summary: Get a tag by type and value.
      description: Get a tag by type and value. Can be used to check whether a given
        tag already exists in Unleash or not.
      operationId: getTag
      parameters:
      - name: type
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: value
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: tagWithVersionSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tagWithVersionSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    delete:
      tags:
      - Tags
      summary: Delete a tag.
      description: Delete a tag by type and value. When a tag is deleted all references
        to the tag are removed.
      operationId: deleteTag
      parameters:
      - name: type
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: value
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
  /api/admin/tag-types:
    get:
      tags:
      - Tags
      summary: Get all tag types
      description: Get a list of all available tag types.
      operationId: getTagTypes
      responses:
        "200":
          description: tagTypesSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tagTypesSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
    post:
      tags:
      - Tags
      summary: Create a tag type
      description: Create a new tag type.
      operationId: createTagType
      requestBody:
        description: tagTypeSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tagTypeSchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tagTypeSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "409":
          description: The provided resource can not be created or updated because
            it would conflict with the current state of the resource or with an already
            existing resource, respectively.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/tag-types/validate:
    post:
      tags:
      - Tags
      summary: Validate a tag type
      description: Validates whether if the body of the request is a valid tag and
        whether the a tag type with that name already exists or not. If a tag type
        with the same name exists, this operation will return a 409 status code.
      operationId: validateTagType
      requestBody:
        description: tagTypeSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tagTypeSchema'
        required: true
      responses:
        "200":
          description: validateTagTypeSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateTagTypeSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "409":
          description: The provided resource can not be created or updated because
            it would conflict with the current state of the resource or with an already
            existing resource, respectively.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/tag-types/{name}:
    get:
      tags:
      - Tags
      summary: Get a tag type
      description: Get a tag type by name.
      operationId: getTagType
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: tagTypeSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tagTypeSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
    put:
      tags:
      - Tags
      summary: Update a tag type
      description: Update the configuration for the specified tag type.
      operationId: updateTagType
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: updateTagTypeSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateTagTypeSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
    delete:
      tags:
      - Tags
      summary: Delete a tag type
      description: Deletes a tag type. If any features have tags of this type, those
        tags will be deleted.
      operationId: deleteTagType
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/addons:
    get:
      tags:
      - Addons
      summary: Get all addons and providers
      description: Retrieve all addons and providers that are defined on this Unleash
        instance.
      operationId: getAddons
      responses:
        "200":
          description: addonsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addonsSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
    post:
      tags:
      - Addons
      summary: Create a new addon
      description: Create an addon instance. The addon must use one of the providers
        available on this Unleash instance.
      operationId: createAddon
      requestBody:
        description: addonCreateUpdateSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addonCreateUpdateSchema'
        required: true
      responses:
        "200":
          description: addonSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addonSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "413":
          description: The request body is larger than what we accept. By default
            we only accept bodies of 100kB or less
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_413'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/addons/{id}:
    get:
      tags:
      - Addons
      summary: Get a specific addon
      description: Retrieve information about the addon whose ID matches the ID in
        the request URL.
      operationId: getAddon
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: addonSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addonSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
    put:
      tags:
      - Addons
      summary: Update an addon
      description: |-
        Update the addon with a specific ID. Any fields in the update object will be updated. Properties that are not included in the update object will not be affected. To empty a property, pass `null` as that property's value.

        Note: passing `null` as a value for the description property will set it to an empty string.
      operationId: updateAddon
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: addonCreateUpdateSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addonCreateUpdateSchema'
        required: true
      responses:
        "200":
          description: addonSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addonSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "413":
          description: The request body is larger than what we accept. By default
            we only accept bodies of 100kB or less
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_413'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
    delete:
      tags:
      - Addons
      summary: Delete an addon
      description: Delete the addon specified by the ID in the request path.
      operationId: deleteAddon
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/api-tokens:
    get:
      tags:
      - API tokens
      summary: Get API tokens
      description: Retrieves all API tokens that exist in the Unleash instance.
      operationId: getAllApiTokens
      responses:
        "200":
          description: apiTokensSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiTokensSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
    post:
      tags:
      - API tokens
      summary: Create API token
      description: 'Create an API token of a specific type: one of client, admin,
        frontend.'
      operationId: createApiToken
      requestBody:
        description: createApiTokenSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createApiTokenSchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiTokenSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/api-tokens/{token}:
    put:
      tags:
      - API tokens
      summary: Update API token
      description: Updates an existing API token with a new expiry date. The `token`
        path parameter is the token's `secret`. If the token does not exist, this
        endpoint returns a 200 OK, but does nothing.
      operationId: updateApiToken
      parameters:
      - name: token
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: updateApiTokenSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateApiTokenSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
    delete:
      tags:
      - API tokens
      summary: Delete API token
      description: Deletes an existing API token. The `token` path parameter is the
        token's `secret`. If the token does not exist, this endpoint returns a 200
        OK, but does nothing.
      operationId: deleteApiToken
      parameters:
      - name: token
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/user-admin/validate-password:
    post:
      tags:
      - Users
      summary: Validate password for a user
      description: Validate the password strength. Minimum 10 characters, uppercase
        letter, number, special character.
      operationId: validateUserPassword
      requestBody:
        description: passwordSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passwordSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/user-admin/{id}/change-password:
    post:
      tags:
      - Users
      summary: Change password for a user
      description: Change password for a user as an admin
      operationId: changeUserPassword
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: passwordSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passwordSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/user-admin/reset-password:
    post:
      tags:
      - Users
      summary: Reset user password
      description: Reset user password as an admin
      operationId: resetUserPassword
      requestBody:
        description: idSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/idSchema'
        required: true
      responses:
        "200":
          description: resetPasswordSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resetPasswordSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/user-admin:
    get:
      tags:
      - Users
      summary: Get all users and [root roles](https://docs.getunleash.io/reference/rbac#standard-roles)
      description: Will return all users and all available root roles for the Unleash
        instance.
      operationId: getUsers
      responses:
        "200":
          description: usersSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usersSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
    post:
      tags:
      - Users
      summary: Create a new user
      description: Creates a new user with the given root role.
      operationId: createUser
      requestBody:
        description: createUserSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUserSchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUserResponseSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/user-admin/search:
    get:
      tags:
      - Users
      summary: Search users
      description: ' It will preform a simple search based on name and email matching
        the given query. Requires minimum 2 characters'
      operationId: searchUsers
      parameters:
      - name: q
        in: query
        description: The pattern to search in the username or email
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: usersSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usersSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/user-admin/access:
    get:
      tags:
      - Users
      summary: Get basic user and group information
      description: Get a subset of user and group information eligible even for non-admin
        users
      operationId: getBaseUsersAndGroups
      responses:
        "200":
          description: usersGroupsBaseSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usersGroupsBaseSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
  /api/admin/user-admin/admin-count:
    get:
      tags:
      - Users
      summary: Get total count of admin accounts
      description: Get a total count of admins with password, without password and
        admin service accounts
      operationId: getAdminCount
      responses:
        "200":
          description: adminCountSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/adminCountSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/user-admin/{id}:
    get:
      tags:
      - Users
      summary: Get user
      description: Will return a single user by id
      operationId: getUser
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: userSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    put:
      tags:
      - Users
      summary: Update a user
      description: Only the explicitly specified fields get updated.
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: updateUserSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateUserSchema'
        required: true
      responses:
        "200":
          description: createUserResponseSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUserResponseSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    delete:
      tags:
      - Users
      summary: Delete a user
      description: Deletes the user with the given userId
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/feedback:
    post:
      tags:
      - Admin UI
      operationId: createFeedback
      requestBody:
        description: feedbackSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/feedbackSchema'
        required: true
      responses:
        "200":
          description: feedbackSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/feedbackSchema'
  /api/admin/feedback/{id}:
    put:
      tags:
      - Admin UI
      operationId: updateFeedback
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: feedbackSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/feedbackSchema'
        required: true
      responses:
        "200":
          description: feedbackSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/feedbackSchema'
  /api/admin/projects/{projectId}/features/{featureName}/environments/{environment}:
    get:
      tags:
      - Features
      summary: Get a feature environment.
      description: Information about the enablement status and strategies for a feature
        toggle in specified environment.
      operationId: getFeatureEnvironment
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: featureEnvironmentSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureEnvironmentSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/projects/{projectId}/features/{featureName}/environments/{environment}/off:
    post:
      tags:
      - Features
      summary: Disable a feature toggle.
      description: Disable a feature toggle in the specified environment.
      operationId: toggleFeatureEnvironmentOff
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: featureSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/projects/{projectId}/features/{featureName}/environments/{environment}/on:
    post:
      tags:
      - Features
      summary: Enable a feature toggle.
      description: Enable a feature toggle in the specified environment.
      operationId: toggleFeatureEnvironmentOn
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: featureSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/projects/{projectId}/bulk_features/environments/{environment}/on:
    post:
      tags:
      - Features
      summary: Bulk enable a list of features.
      description: This endpoint enables multiple feature toggles.
      operationId: bulkToggleFeaturesEnvironmentOn
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: bulkToggleFeaturesSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulkToggleFeaturesSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "413":
          description: The request body is larger than what we accept. By default
            we only accept bodies of 100kB or less
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_413'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/projects/{projectId}/bulk_features/environments/{environment}/off:
    post:
      tags:
      - Features
      summary: Bulk disabled a list of features.
      description: This endpoint disables multiple feature toggles.
      operationId: bulkToggleFeaturesEnvironmentOff
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: bulkToggleFeaturesSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulkToggleFeaturesSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "413":
          description: The request body is larger than what we accept. By default
            we only accept bodies of 100kB or less
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_413'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/projects/{projectId}/features/{featureName}/environments/{environment}/strategies:
    get:
      tags:
      - Features
      summary: Get feature toggle strategies.
      description: Get strategies defined for a feature toggle in the specified environment.
      operationId: getFeatureStrategies
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: featureStrategySchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureStrategySchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    post:
      tags:
      - Features
      summary: Add a strategy to a feature toggle.
      description: Add a strategy to a feature toggle in the specified environment.
      operationId: addFeatureStrategy
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: createFeatureStrategySchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createFeatureStrategySchema'
        required: true
      responses:
        "200":
          description: featureStrategySchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureStrategySchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/projects/{projectId}/features/{featureName}/environments/{environment}/strategies/{strategyId}:
    get:
      tags:
      - Features
      summary: Get a strategy configuration.
      description: Get a strategy configuration for an environment in a feature toggle.
      operationId: getFeatureStrategy
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: strategyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: featureStrategySchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureStrategySchema'
    put:
      tags:
      - Features
      summary: Update a strategy.
      description: Replace strategy configuration for a feature toggle in the specified
        environment.
      operationId: updateFeatureStrategy
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: strategyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: updateFeatureStrategySchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateFeatureStrategySchema'
        required: true
      responses:
        "200":
          description: featureStrategySchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureStrategySchema'
    delete:
      tags:
      - Features
      summary: Delete a strategy from a feature toggle.
      description: Delete a strategy configuration from a feature toggle in the specified
        environment.
      operationId: deleteFeatureStrategy
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: strategyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    patch:
      tags:
      - Features
      summary: Change specific properties of a strategy.
      description: Change specific properties of a strategy configuration in a feature
        toggle.
      operationId: patchFeatureStrategy
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: strategyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: patchesSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchesSchema'
        required: true
      responses:
        "200":
          description: featureStrategySchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureStrategySchema'
  /api/admin/projects/{projectId}/features/{featureName}/environments/{environment}/strategies/set-sort-order:
    post:
      tags:
      - Features
      summary: Set the order of strategies on the list.
      operationId: setStrategySortOrder
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: setStrategySortOrderSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setStrategySortOrderSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/projects/{projectId}/features:
    get:
      tags:
      - Features
      operationId: getFeatures
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: featuresSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featuresSchema'
    post:
      tags:
      - Features
      operationId: createFeature
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: createFeatureSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createFeatureSchema'
        required: true
      responses:
        "200":
          description: featureSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureSchema'
  /api/admin/projects/{projectId}/features/{featureName}/clone:
    post:
      tags:
      - Features
      operationId: cloneFeature
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: cloneFeatureSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloneFeatureSchema'
        required: true
      responses:
        "200":
          description: featureSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureSchema'
  /api/admin/projects/{projectId}/features/{featureName}:
    get:
      tags:
      - Features
      summary: Get a feature.
      description: This endpoint returns the information about the requested feature
        if the feature belongs to the specified project.
      operationId: getFeature
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: featureSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: You either do not have the required permissions or used an
            invalid URL.
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    put:
      tags:
      - Features
      operationId: updateFeature
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: updateFeatureSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateFeatureSchema'
        required: true
      responses:
        "200":
          description: featureSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureSchema'
    delete:
      tags:
      - Features
      summary: Archive a feature.
      description: This endpoint archives the specified feature if the feature belongs
        to the specified project.
      operationId: archiveFeature
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "202":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: You either do not have the required permissions or used an
            invalid URL.
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    patch:
      tags:
      - Features
      operationId: patchFeature
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: patchesSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchesSchema'
        required: true
      responses:
        "200":
          description: featureSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureSchema'
  /api/admin/projects/{projectId}/stale:
    post:
      tags:
      - Features
      summary: Mark features as stale / not stale
      description: This endpoint marks the provided list of features as either [stale](https://docs.getunleash.io/reference/technical-debt#stale-and-potentially-stale-toggles)
        or not stale depending on the request body you send. Any provided features
        that don't exist are ignored.
      operationId: staleFeatures
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: batchStaleSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/batchStaleSchema'
        required: true
      responses:
        "202":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/projects/{projectId}/tags:
    put:
      tags:
      - Tags
      operationId: addTagToFeatures
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: tagsBulkAddSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tagsBulkAddSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
  /api/admin/projects/{projectId}/environments:
    post:
      tags:
      - Projects
      summary: Add an environment to a project.
      description: This endpoint adds the provided environment to the specified project,
        with optional support for enabling and disabling change requests for the environment
        and project.
      operationId: addEnvironmentToProject
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: projectEnvironmentSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projectEnvironmentSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "409":
          description: The provided resource can not be created or updated because
            it would conflict with the current state of the resource or with an already
            existing resource, respectively.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
  /api/admin/projects/{projectId}/environments/{environment}:
    delete:
      tags:
      - Projects
      summary: Remove an environment from a project.
      description: This endpoint removes the specified environment from the project.
      operationId: removeEnvironmentFromProject
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/projects/{projectId}/environments/{environment}/default-strategy:
    post:
      tags:
      - Projects
      description: 'Adds a default strategy for this environment. Unleash will use
        this strategy by default when enabling a toggle. Use the wild card "*" for
        `:environment` to add to all environments. '
      operationId: addDefaultStrategyToProjectEnvironment
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: createFeatureStrategySchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createFeatureStrategySchema'
        required: true
      responses:
        "200":
          description: createFeatureStrategySchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createFeatureStrategySchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /api/admin/projects/{projectId}/health-report:
    get:
      tags:
      - Projects
      summary: Get a health report for a project.
      description: This endpoint returns a health report for the specified project.
        This data is used for [the technical debt dashboard](https://docs.getunleash.io/reference/technical-debt#the-technical-debt-dashboard)
      operationId: getProjectHealthReport
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: healthReportSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthReportSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/projects/{projectId}/features/{featureName}/variants:
    get:
      tags:
      - Features
      summary: 'Retrieve variants for a feature (deprecated) '
      description: (deprecated from 4.21) Retrieve the variants for the specified
        feature. From Unleash 4.21 onwards, this endpoint will attempt to choose a
        [production-type environment](https://docs.getunleash.io/reference/environments)
        as the source of truth. If more than one production environment is found,
        the first one will be used.
      operationId: getFeatureVariants
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: featureVariantsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureVariantsSchema'
      deprecated: true
    put:
      tags:
      - Features
      summary: Create (overwrite) variants for a feature toggle in all environments
      description: |-
        This overwrites the current variants for the feature specified in the :featureName parameter in all environments.

                            The backend will validate the input for the following invariants

                            * If there are variants, there needs to be at least one variant with `weightType: variable`
                            * The sum of the weights of variants with `weightType: fix` must be strictly less than 1000 (< 1000)

                            The backend will also distribute remaining weight up to 1000 after adding the variants with `weightType: fix` together amongst the variants of `weightType: variable`
      operationId: overwriteFeatureVariants
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: variantsSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variantsSchema'
        required: true
      responses:
        "200":
          description: featureVariantsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureVariantsSchema'
    patch:
      tags:
      - Features
      summary: Apply a patch to a feature's variants (in all environments).
      description: "Apply a list of patches patch to the specified feature's variants.\
        \ The patch objects should conform to the [JSON-patch format (RFC 6902)](https://www.rfc-editor.org/rfc/rfc6902).\n\
        \                        \n                        ⚠️ **Warning**: This method\
        \ is not atomic. If something fails in the middle of applying the patch, you\
        \ can be left with a half-applied patch. We recommend that you instead [patch\
        \ variants on a per-environment basis](/docs/reference/api/unleash/patch-environments-feature-variants.api.mdx),\
        \ which **is** an atomic operation."
      operationId: patchFeatureVariants
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: patchesSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchesSchema'
        required: true
      responses:
        "200":
          description: featureVariantsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureVariantsSchema'
  /api/admin/projects/{projectId}/features/{featureName}/environments/{environment}/variants:
    get:
      tags:
      - Features
      summary: Get variants for a feature in an environment
      description: Returns the variants for a feature in a specific environment. If
        the feature has no variants it will return an empty array of variants
      operationId: getEnvironmentFeatureVariants
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: featureVariantsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureVariantsSchema'
    put:
      tags:
      - Features
      summary: Create (overwrite) variants for a feature in an environment
      description: "This overwrites the current variants for the feature toggle in\
        \ the :featureName parameter for the :environment parameter.\n           \
        \             \n                        The backend will validate the input\
        \ for the following invariants:\n                        \n              \
        \      * If there are variants, there needs to be at least one variant with\
        \ `weightType: variable`\n                    * The sum of the weights of\
        \ variants with `weightType: fix` must be strictly less than 1000 (< 1000)\n\
        \n                    The backend will also distribute remaining weight up\
        \ to 1000 after adding the variants with `weightType: fix` together amongst\
        \ the variants of `weightType: variable`"
      operationId: overwriteEnvironmentFeatureVariants
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: variantsSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variantsSchema'
        required: true
      responses:
        "200":
          description: featureVariantsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureVariantsSchema'
    patch:
      tags:
      - Features
      summary: Patch a feature's variants in an environment
      description: Apply a list of patches to the features environments in the specified
        environment. The patch objects should conform to the [JSON-patch format (RFC
        6902)](https://www.rfc-editor.org/rfc/rfc6902).
      operationId: patchEnvironmentsFeatureVariants
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: patchesSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchesSchema'
        required: true
      responses:
        "200":
          description: featureVariantsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureVariantsSchema'
  /api/admin/projects/{projectId}/features/{featureName}/variants-batch:
    put:
      tags:
      - Features
      operationId: overwriteFeatureVariantsOnEnvironments
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: pushVariantsSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pushVariantsSchema'
        required: true
      responses:
        "200":
          description: featureVariantsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featureVariantsSchema'
  /api/admin/projects/{projectId}/api-tokens:
    get:
      tags:
      - Projects
      summary: Get api tokens for project.
      description: Returns the [project API tokens](https://docs.getunleash.io/how-to/how-to-create-project-api-tokens)
        that have been created for this project.
      operationId: getProjectApiTokens
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: apiTokensSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiTokensSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    post:
      tags:
      - Projects
      summary: Create a project API token.
      description: Endpoint that allows creation of [project API tokens](https://docs.getunleash.io/reference/api-tokens-and-client-keys#api-token-visibility)
        for the specified project.
      operationId: createProjectApiToken
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: createApiTokenSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createApiTokenSchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiTokenSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/projects/{projectId}/api-tokens/{token}:
    delete:
      tags:
      - Projects
      summary: Delete a project API token.
      description: This operation deletes the API token specified in the request URL.
        If the token doesn't exist, returns an OK response (status code 200).
      operationId: deleteProjectApiToken
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: token
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/projects/{projectId}/delete:
    post:
      tags:
      - Archive
      summary: Deletes a list of features
      description: This endpoint deletes the specified features, that are in archive.
      operationId: deleteFeatures
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: batchFeaturesSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/batchFeaturesSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/projects/{projectId}/revive:
    post:
      tags:
      - Archive
      summary: Revives a list of features
      description: This endpoint revives the specified features.
      operationId: reviveFeatures
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: batchFeaturesSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/batchFeaturesSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/projects/{projectId}/archive:
    post:
      tags:
      - Features
      summary: Archives a list of features
      description: This endpoint archives the specified features. Any features that
        are already archived or that don't exist are ignored. All existing features
        (whether already archived or not) that are provided must belong to the specified
        project.
      operationId: archiveFeatures
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: batchFeaturesSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/batchFeaturesSchema'
        required: true
      responses:
        "202":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/environments/project/{projectId}:
    get:
      tags:
      - Environments
      summary: Get the environments available to a project
      description: Gets the environments that are available for this project. An environment
        is available for a project if enabled in the [project configuration](https://docs.getunleash.io/reference/environments#step-1-enable-new-environments-for-your-project)
      operationId: getProjectEnvironments
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: environmentsProjectSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/environmentsProjectSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/environments/sort-order:
    put:
      tags:
      - Environments
      summary: Update environment sort orders
      description: Updates sort orders for the named environments. Environments not
        specified are unaffected.
      operationId: updateSortOrder
      requestBody:
        description: sortOrderSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sortOrderSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/environments/{name}/on:
    post:
      tags:
      - Environments
      summary: Toggle the environment with `name` on
      description: Makes it possible to enable this environment for a project. An
        environment must first be globally enabled using this endpoint before it can
        be enabled for a project
      operationId: toggleEnvironmentOn
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/environments/{name}/off:
    post:
      tags:
      - Environments
      summary: Toggle the environment with `name` off
      description: Removes this environment from the list of available environments
        for projects to use
      operationId: toggleEnvironmentOff
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/splash/{id}:
    post:
      tags:
      - Admin UI
      operationId: updateSplashSettings
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: splashSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/splashSchema'
  /api/admin/constraints/validate:
    post:
      tags:
      - Features
      summary: Validate constraint
      description: Validates a constraint definition. Checks whether the context field
        exists and whether the applied configuration is valid. Additional properties
        are not allowed on data objects that you send to this endpoint.
      operationId: validateConstraint
      requestBody:
        description: constraintSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/constraintSchema'
        required: true
      responses:
        "204":
          description: The constraint is valid
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /api/admin/invite-link/tokens:
    get:
      tags:
      - Public signup tokens
      summary: Retrieve all existing public signup tokens
      operationId: getAllPublicSignupTokens
      responses:
        "200":
          description: publicSignupTokensSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publicSignupTokensSchema'
    post:
      tags:
      - Public signup tokens
      summary: Create a public signup token
      description: Lets administrators create a invite link to share with colleagues.  People
        that join using the public invite are assigned the `Viewer` role
      operationId: createPublicSignupToken
      requestBody:
        description: publicSignupTokenCreateSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/publicSignupTokenCreateSchema'
        required: true
      responses:
        "201":
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publicSignupTokenSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/invite-link/tokens/{token}:
    get:
      tags:
      - Public signup tokens
      summary: Retrieve a token
      description: Get information about a specific token. The `:token` part of the
        URL should be the token's secret.
      operationId: getPublicSignupToken
      parameters:
      - name: token
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: publicSignupTokenSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publicSignupTokenSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
    put:
      tags:
      - Public signup tokens
      summary: Update a public signup token
      description: Update information about a specific token. The `:token` part of
        the URL should be the token's secret.
      operationId: updatePublicSignupToken
      parameters:
      - name: token
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: publicSignupTokenUpdateSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/publicSignupTokenUpdateSchema'
        required: true
      responses:
        "200":
          description: publicSignupTokenSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publicSignupTokenSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/instance-admin/statistics/csv:
    get:
      tags:
      - Instance Admin
      summary: Instance usage statistics
      description: Provides statistics about various features of Unleash to allow
        for reporting of usage for self-hosted customers. The response contains data
        such as the number of users, groups, features, strategies, versions, etc.
      operationId: getInstanceAdminStatsCsv
      responses:
        "200":
          description: instanceAdminStatsSchemaCsv
          content:
            text/csv:
              schema:
                type: string
                x-content-type: text/csv
              example: |-
                "OIDCenabled","SAMLenabled","clientApps","contextFields","environments","featureExports","featureImports","featureToggles","groups","instanceId","projects","roles","segments","strategies","sum","timestamp","users","versionEnterprise","versionOSS"
                true,false,"[{""range"":""allTime"",""count"":15},{""range"":""30d"",""count"":9},{""range"":""7d"",""count"":5}]",6,2,0,0,29,3,"ed3861ae-78f9-4e8c-8e57-b57efc15f82b",1,5,2,8,"some-sha256-hash","2023-07-12T10:00:00.000Z",10,"5.1.7","5.1.7"
  /api/admin/instance-admin/statistics:
    get:
      tags:
      - Instance Admin
      summary: Instance usage statistics
      description: Provides statistics about various features of Unleash to allow
        for reporting of usage for self-hosted customers. The response contains data
        such as the number of users, groups, features, strategies, versions, etc.
      operationId: getInstanceAdminStats
      responses:
        "200":
          description: instanceAdminStatsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/instanceAdminStatsSchema'
      deprecated: true
  /api/admin/projects/{projectId}/features/{featureName}/favorites:
    post:
      tags:
      - Features
      summary: Add feature to favorites
      description: This endpoint marks the feature in the url as favorite
      operationId: addFavoriteFeature
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    delete:
      tags:
      - Features
      summary: Remove feature from favorites
      description: This endpoint removes the feature in the url from favorites
      operationId: removeFavoriteFeature
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/projects/{projectId}/favorites:
    post:
      tags:
      - Features
      summary: Add project to favorites
      description: This endpoint marks the project in the url as favorite
      operationId: addFavoriteProject
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    delete:
      tags:
      - Features
      summary: Remove project from favorites
      description: This endpoint removes the project in the url from favorites
      operationId: removeFavoriteProject
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response has no body.
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/admin/maintenance:
    get:
      tags:
      - Maintenance
      summary: Get maintenance mode status
      description: Tells you whether maintenance mode is enabled or disabled
      operationId: getMaintenance
      responses:
        "200":
          description: maintenanceSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenanceSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
    post:
      tags:
      - Maintenance
      summary: Enabled/disabled maintenance mode
      description: Lets administrators put Unleash into a mostly read-only mode. While
        Unleash is in maintenance mode, users can not change any configuration settings
      operationId: toggleMaintenance
      requestBody:
        description: toggleMaintenanceSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/toggleMaintenanceSchema'
        required: true
      responses:
        "204":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: The provided user credentials are valid, but the user does
            not have the necessary permissions to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
  /api/admin/telemetry/settings:
    get:
      tags:
      - Telemetry
      summary: Get telemetry settings
      description: Provides the configured settings for [telemetry information collection](https://docs.getunleash.io/topics/data-collection)
      operationId: getTelemetrySettings
      responses:
        "200":
          description: telemetrySettingsSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/telemetrySettingsSchema'
  /api/client/features/{featureName}:
    get:
      tags:
      - Client
      summary: Get a single feature toggle
      description: Gets all the client data for a single toggle. Contains the exact
        same information about a toggle as the `/api/client/features` endpoint does,
        but only contains data about the specified toggle. All SDKs should use `/api/client/features`
      operationId: getClientFeature
      parameters:
      - name: featureName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: clientFeatureSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clientFeatureSchema'
  /api/client/features:
    get:
      tags:
      - Client
      summary: Get all toggles (SDK)
      description: Returns the SDK configuration for all feature toggles that are
        available to the provided API key. Used by SDKs to configure local evaluation
      operationId: getAllClientFeatures
      responses:
        "200":
          description: clientFeaturesSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clientFeaturesSchema'
  /api/client/metrics:
    post:
      tags:
      - Client
      summary: Register client usage metrics
      description: Registers usage metrics. Stores information about how many times
        each toggle was evaluated to enabled and disabled within a time frame. If
        provided, this operation will also store data on how many times each feature
        toggle's variants were displayed to the end user.
      operationId: registerClientMetrics
      requestBody:
        description: clientMetricsSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clientMetricsSchema'
        required: true
      responses:
        "202":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /api/client/register:
    post:
      tags:
      - Client
      summary: Register a client SDK
      description: Register a client SDK with Unleash. SDKs call this endpoint on
        startup to tell Unleash about their existence. Used to track custom strategies
        in use as well as SDK versions.
      operationId: registerClientApplication
      requestBody:
        description: clientApplicationSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clientApplicationSchema'
        required: true
      responses:
        "202":
          description: This response has no body.
  /api/frontend:
    get:
      tags:
      - Frontend API
      summary: Retrieve enabled feature toggles for the provided context.
      description: This endpoint returns the list of feature toggles that the proxy
        evaluates to enabled for the given context. Context values are provided as
        query parameters. If the Frontend API is disabled 404 is returned.
      operationId: getFrontendFeatures
      responses:
        "200":
          description: proxyFeaturesSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proxyFeaturesSchema'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/frontend/client/metrics:
    post:
      tags:
      - Frontend API
      summary: Register client usage metrics
      description: Registers usage metrics. Stores information about how many times
        each toggle was evaluated to enabled and disabled within a time frame. If
        provided, this operation will also store data on how many times each feature
        toggle's variants were displayed to the end user. If the Frontend API is disabled
        404 is returned.
      operationId: registerFrontendMetrics
      requestBody:
        description: clientMetricsSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clientMetricsSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /api/frontend/client/register:
    post:
      tags:
      - Frontend API
      summary: Register a client SDK
      description: This is for future use. Currently Frontend client registration
        is not supported. Returning 200 for clients that expect this status code.
        If the Frontend API is disabled 404 is returned.
      operationId: registerFrontendClient
      requestBody:
        description: proxyClientSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/proxyClientSchema'
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid. Provide a
            valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /edge/validate:
    post:
      tags:
      - Edge
      summary: Check which tokens are valid
      description: This operation accepts a list of tokens to validate. Unleash will
        validate each token you provide. For each valid token you provide, Unleash
        will return the token along with its type and which projects it has access
        to.
      operationId: getValidTokens
      requestBody:
        description: tokenStringListSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tokenStringListSchema'
        required: true
      responses:
        "200":
          description: validatedEdgeTokensSchema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatedEdgeTokensSchema'
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "413":
          description: The request body is larger than what we accept. By default
            we only accept bodies of 100kB or less
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_413'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
  /edge/metrics:
    post:
      tags:
      - Edge
      summary: Send metrics from Edge
      description: This operation accepts batched metrics from Edge. Metrics will
        be inserted into Unleash's metrics storage
      operationId: bulkMetrics
      requestBody:
        description: bulkMetricsSchema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulkMetricsSchema'
        required: true
      responses:
        "202":
          description: This response has no body.
        "400":
          description: The request data does not match what we expect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "413":
          description: The request body is larger than what we accept. By default
            we only accept bodies of 100kB or less
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_413'
        "415":
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
components:
  schemas:
    adminCountSchema:
      required:
      - noPassword
      - password
      - service
      type: object
      properties:
        password:
          type: number
          description: Total number of admins thatº have a password set.
        noPassword:
          type: number
          description: Total number of admins that do not have a password set. May
            be SSO, but may also be users that did not set a password yet.
        service:
          type: number
          description: Total number of service accounts that have the admin root role.
      additionalProperties: false
      description: Contains total admin counts for an Unleash instance.
      example:
        password: 0.8008281904610115
        noPassword: 6.027456183070403
        service: 1.4658129805029452
    adminFeaturesQuerySchema:
      type: object
      properties:
        tag:
          type: array
          description: Used to filter by tags. For each entry, a TAGTYPE:TAGVALUE
            is expected
          example:
          - simple:mytag
          items:
            pattern: \w+:\w+
            type: string
        namePrefix:
          type: string
          description: A case-insensitive prefix filter for the names of feature toggles
          example: demo.part1
      additionalProperties: false
    addonParameterSchema:
      required:
      - displayName
      - name
      - required
      - sensitive
      - type
      type: object
      properties:
        name:
          type: string
          description: The name of the parameter as it is used in code. References
            to this parameter should use this value.
          example: emojiIcon
        displayName:
          type: string
          description: The name of the parameter as it is shown to the end user in
            the Admin UI.
          example: Emoji Icon
        type:
          type: string
          description: The type of the parameter. Corresponds roughly to [HTML `input`
            field types](https://developer.mozilla.org/docs/Web/HTML/Element/Input#input_types).
            Multi-line inut fields are indicated as `textfield` (equivalent to the
            HTML `textarea` tag).
          example: text
        description:
          type: string
          description: A description of the parameter. This should explain to the
            end user what the parameter is used for.
          example: The emoji_icon to use when posting messages to slack. Defaults
            to ":unleash:".
        placeholder:
          type: string
          description: The default value for this parameter. This value is used if
            no other value is provided.
          example: ':unleash:'
        required:
          type: boolean
          description: Whether this parameter is required or not. If a parameter is
            required, you must give it a value when you create the addon. If it is
            not required it can be left out. It may receive a default value in those
            cases.
          example: false
        sensitive:
          type: boolean
          description: Indicates whether this parameter is **sensitive** or not. Unleash
            will not return sensitive parameters to API requests. It will instead
            use a number of asterisks to indicate that a value is set, e.g. "******".
            The number of asterisks does not correlate to the parameter's value.
          example: false
      additionalProperties: false
      description: An addon parameter definition.
    addonSchema:
      required:
      - description
      - enabled
      - events
      - id
      - parameters
      - provider
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The addon's unique identifier.
          example: 27
        provider:
          type: string
          description: The addon provider, such as "webhook" or "slack".
          example: webhook
        description:
          type: string
          description: A description of the addon. `null` if no description exists.
          nullable: true
          example: This addon posts updates to our internal feature tracking system
            whenever a feature is created or updated.
        enabled:
          type: boolean
          description: Whether the addon is enabled or not.
        parameters:
          type: object
          additionalProperties: {}
          description: Parameters for the addon provider. This object has different
            required and optional properties depending on the provider you choose.
          example:
            url: http://localhost:4242/webhook
        events:
          type: array
          description: The event types that trigger this specific addon.
          example:
          - feature-created
          - feature-updated
          items:
            type: string
        projects:
          type: array
          description: The projects that this addon listens to events from. An empty
            list means it listens to events from **all** projects.
          example:
          - new-landing-project
          - signups-v2
          items:
            type: string
        environments:
          type: array
          description: The list of environments that this addon listens to events
            from. An empty list means it listens to events from **all** environments.
          example:
          - development
          - production
          items:
            type: string
      description: An [addon](https://docs.getunleash.io/reference/addons) instance
        description. Contains data about what kind of provider it uses, whether it's
        enabled or not, what events it listens for, and more.
      example:
        projects:
        - new-landing-project
        - signups-v2
        provider: webhook
        environments:
        - development
        - production
        description: This addon posts updates to our internal feature tracking system
          whenever a feature is created or updated.
        id: 27
        parameters:
          url: http://localhost:4242/webhook
        enabled: true
        events:
        - feature-created
        - feature-updated
    addonCreateUpdateSchema:
      required:
      - enabled
      - events
      - parameters
      - provider
      type: object
      properties:
        provider:
          type: string
          description: |
            The addon provider, such as "webhook" or "slack". This string is **case sensitive** and maps to the provider's `name` property.

            The list of all supported providers and their parameters for a specific Unleash instance can be found by making a GET request to the `api/admin/addons` endpoint: the `providers` property of that response will contain all available providers.

            The default set of providers can be found in the [addons reference documentation](https://docs.getunleash.io/reference/addons). The default supported options are:
            - `datadog` for [Datadog](https://docs.getunleash.io/reference/addons/datadog)
            - `slack` for [Slack](https://docs.getunleash.io/reference/addons/slack)
            - `teams` for [Microsoft Teams](https://docs.getunleash.io/reference/addons/teams)
            - `webhook` for [webhooks](https://docs.getunleash.io/reference/addons/webhook)

            The provider you choose for your addon dictates what properties the `parameters` object needs. Refer to the documentation for each provider for more information.
          example: webhook
        description:
          type: string
          description: A description of the addon.
          example: This addon posts updates to our internal feature tracking system
            whenever a feature is created or updated.
        enabled:
          type: boolean
          description: Whether the addon should be enabled or not.
        parameters:
          type: object
          additionalProperties: {}
          description: Parameters for the addon provider. This object has different
            required and optional properties depending on the provider you choose.
            Consult the documentation for details.
          example:
            url: http://localhost:4242/webhook
        events:
          type: array
          description: The event types that will trigger this specific addon.
          example:
          - feature-created
          - feature-updated
          items:
            type: string
        projects:
          type: array
          description: The projects that this addon will listen to events from. An
            empty list means it will listen to events from **all** projects.
          example:
          - new-landing-project
          - signups-v2
          items:
            type: string
        environments:
          type: array
          description: The list of environments that this addon will listen to events
            from. An empty list means it will listen to events from **all** environments.
          example:
          - development
          - production
          items:
            type: string
      description: Data required to create or update an [Unleash addon](https://docs.getunleash.io/reference/addons)
        instance.
    addonsSchema:
      required:
      - addons
      - providers
      type: object
      properties:
        addons:
          type: array
          description: All the addons that exist on this instance of Unleash.
          items:
            $ref: '#/components/schemas/addonSchema'
        providers:
          type: array
          description: A list of  all available addon providers, along with their
            parameters and descriptions.
          example:
          - name: webhook
            displayName: Webhook
            description: A Webhook is a generic way to post messages from Unleash
              to third party services.
            documentationUrl: https://docs.getunleash.io/docs/addons/webhook
            parameters:
            - name: url
              displayName: Webhook URL
              description: (Required) Unleash will perform a HTTP Post to the specified
                URL (one retry if first attempt fails)
              type: url
              required: true
              sensitive: true
            - name: contentType
              displayName: Content-Type
              placeholder: application/json
              description: (Optional) The Content-Type header to use. Defaults to
                "application/json".
              type: text
              required: false
              sensitive: false
            - name: authorization
              displayName: Authorization
              placeholder: ""
              description: (Optional) The Authorization header to use. Not used if
                left blank.
              type: text
              required: false
              sensitive: true
            - name: bodyTemplate
              displayName: Body template
              placeholder: |-
                {
                  "event": "{{event.type}}",
                  "createdBy": "{{event.createdBy}}",
                  "featureToggle": "{{event.data.name}}",
                  "timestamp": "{{event.data.createdAt}}"
                }
              description: (Optional) You may format the body using a mustache template.
                If you don't specify anything, the format will similar to the events
                format (https://docs.getunleash.io/reference/api/legacy/unleash/admin/events)
              type: textfield
              required: false
              sensitive: false
            events:
            - feature-created
            - feature-updated
            - feature-archived
            - feature-revived
            - feature-stale-on
            - feature-stale-off
            - feature-environment-enabled
            - feature-environment-disabled
            - feature-strategy-remove
            - feature-strategy-update
            - feature-strategy-add
            - feature-metadata-updated
            - feature-variants-updated
            - feature-project-change
            - feature-tagged
            - feature-untagged
            - change-added
            - change-discarded
          - name: slack
            displayName: Slack
            description: Allows Unleash to post updates to Slack.
            documentationUrl: https://docs.getunleash.io/docs/addons/slack
            parameters:
            - name: url
              displayName: Slack webhook URL
              description: (Required)
              type: url
              required: true
              sensitive: true
            - name: username
              displayName: Username
              placeholder: Unleash
              description: The username to use when posting messages to slack. Defaults
                to "Unleash".
              type: text
              required: false
              sensitive: false
            - name: emojiIcon
              displayName: Emoji Icon
              placeholder: ':unleash:'
              description: The emoji_icon to use when posting messages to slack. Defaults
                to ":unleash:".
              type: text
              required: false
              sensitive: false
            - name: defaultChannel
              displayName: Default channel
              description: (Required) Default channel to post updates to if not specified
                in the slack-tag
              type: text
              required: true
              sensitive: false
            events:
            - feature-created
            - feature-updated
            - feature-archived
            - feature-revived
            - feature-stale-on
            - feature-stale-off
            - feature-environment-enabled
            - feature-environment-disabled
            - feature-strategy-remove
            - feature-strategy-update
            - feature-strategy-add
            - feature-metadata-updated
            - feature-variants-updated
            - feature-project-change
            tagTypes:
            - name: slack
              description: Slack tag used by the slack-addon to specify the slack
                channel.
              icon: S
          - name: teams
            displayName: Microsoft Teams
            description: Allows Unleash to post updates to Microsoft Teams.
            documentationUrl: https://docs.getunleash.io/docs/addons/teams
            parameters:
            - name: url
              displayName: Microsoft Teams webhook URL
              description: (Required)
              type: url
              required: true
              sensitive: true
            events:
            - feature-created
            - feature-updated
            - feature-archived
            - feature-revived
            - feature-stale-on
            - feature-stale-off
            - feature-environment-enabled
            - feature-environment-disabled
            - feature-strategy-remove
            - feature-strategy-update
            - feature-strategy-add
            - feature-metadata-updated
            - feature-variants-updated
            - feature-project-change
          - name: datadog
            displayName: Datadog
            description: Allows Unleash to post updates to Datadog.
            documentationUrl: https://docs.getunleash.io/docs/addons/datadog
            parameters:
            - name: url
              displayName: Datadog Events URL
              description: 'Default url: https://api.datadoghq.com/api/v1/events.
                Needs to be changed if your not using the US1 site.'
              type: url
              required: false
              sensitive: false
            - name: apiKey
              displayName: Datadog API key
              placeholder: j96c23b0f12a6b3434a8d710110bd862
              description: (Required) API key from Datadog
              type: text
              required: true
              sensitive: true
            events:
            - feature-created
            - feature-updated
            - feature-archived
            - feature-revived
            - feature-stale-on
            - feature-stale-off
            - feature-environment-enabled
            - feature-environment-disabled
            - feature-strategy-remove
            - feature-strategy-update
            - feature-strategy-add
            - feature-metadata-updated
            - feature-project-change
            - feature-variants-updated
            tagTypes:
            - name: datadog
              description: All Datadog tags added to a specific feature are sent to
                datadog event stream.
              icon: D
          items:
            $ref: '#/components/schemas/addonTypeSchema'
      description: |-
        An object containing two things:
        1. A list of all [addons](https://docs.getunleash.io/reference/addons) defined on this Unleash instance
        2. A list of all addon providers defined on this instance
      example:
        addons:
        - projects:
          - new-landing-project
          - signups-v2
          provider: webhook
          environments:
          - development
          - production
          description: This addon posts updates to our internal feature tracking system
            whenever a feature is created or updated.
          id: 27
          parameters:
            url: http://localhost:4242/webhook
          enabled: true
          events:
          - feature-created
          - feature-updated
        - projects:
          - new-landing-project
          - signups-v2
          provider: webhook
          environments:
          - development
          - production
          description: This addon posts updates to our internal feature tracking system
            whenever a feature is created or updated.
          id: 27
          parameters:
            url: http://localhost:4242/webhook
          enabled: true
          events:
          - feature-created
          - feature-updated
        providers:
        - name: webhook
          displayName: Webhook
          description: A Webhook is a generic way to post messages from Unleash to
            third party services.
          documentationUrl: https://docs.getunleash.io/docs/addons/webhook
          parameters:
          - name: url
            displayName: Webhook URL
            description: (Required) Unleash will perform a HTTP Post to the specified
              URL (one retry if first attempt fails)
            type: url
            required: true
            sensitive: true
          - name: contentType
            displayName: Content-Type
            placeholder: application/json
            description: (Optional) The Content-Type header to use. Defaults to "application/json".
            type: text
            required: false
            sensitive: false
          - name: authorization
            displayName: Authorization
            placeholder: ""
            description: (Optional) The Authorization header to use. Not used if left
              blank.
            type: text
            required: false
            sensitive: true
          - name: bodyTemplate
            displayName: Body template
            placeholder: |-
              {
                "event": "{{event.type}}",
                "createdBy": "{{event.createdBy}}",
                "featureToggle": "{{event.data.name}}",
                "timestamp": "{{event.data.createdAt}}"
              }
            description: (Optional) You may format the body using a mustache template.
              If you don't specify anything, the format will similar to the events
              format (https://docs.getunleash.io/reference/api/legacy/unleash/admin/events)
            type: textfield
            required: false
            sensitive: false
          events:
          - feature-created
          - feature-updated
          - feature-archived
          - feature-revived
          - feature-stale-on
          - feature-stale-off
          - feature-environment-enabled
          - feature-environment-disabled
          - feature-strategy-remove
          - feature-strategy-update
          - feature-strategy-add
          - feature-metadata-updated
          - feature-variants-updated
          - feature-project-change
          - feature-tagged
          - feature-untagged
          - change-added
          - change-discarded
        - name: slack
          displayName: Slack
          description: Allows Unleash to post updates to Slack.
          documentationUrl: https://docs.getunleash.io/docs/addons/slack
          parameters:
          - name: url
            displayName: Slack webhook URL
            description: (Required)
            type: url
            required: true
            sensitive: true
          - name: username
            displayName: Username
            placeholder: Unleash
            description: The username to use when posting messages to slack. Defaults
              to "Unleash".
            type: text
            required: false
            sensitive: false
          - name: emojiIcon
            displayName: Emoji Icon
            placeholder: ':unleash:'
            description: The emoji_icon to use when posting messages to slack. Defaults
              to ":unleash:".
            type: text
            required: false
            sensitive: false
          - name: defaultChannel
            displayName: Default channel
            description: (Required) Default channel to post updates to if not specified
              in the slack-tag
            type: text
            required: true
            sensitive: false
          events:
          - feature-created
          - feature-updated
          - feature-archived
          - feature-revived
          - feature-stale-on
          - feature-stale-off
          - feature-environment-enabled
          - feature-environment-disabled
          - feature-strategy-remove
          - feature-strategy-update
          - feature-strategy-add
          - feature-metadata-updated
          - feature-variants-updated
          - feature-project-change
          tagTypes:
          - name: slack
            description: Slack tag used by the slack-addon to specify the slack channel.
            icon: S
        - name: teams
          displayName: Microsoft Teams
          description: Allows Unleash to post updates to Microsoft Teams.
          documentationUrl: https://docs.getunleash.io/docs/addons/teams
          parameters:
          - name: url
            displayName: Microsoft Teams webhook URL
            description: (Required)
            type: url
            required: true
            sensitive: true
          events:
          - feature-created
          - feature-updated
          - feature-archived
          - feature-revived
          - feature-stale-on
          - feature-stale-off
          - feature-environment-enabled
          - feature-environment-disabled
          - feature-strategy-remove
          - feature-strategy-update
          - feature-strategy-add
          - feature-metadata-updated
          - feature-variants-updated
          - feature-project-change
        - name: datadog
          displayName: Datadog
          description: Allows Unleash to post updates to Datadog.
          documentationUrl: https://docs.getunleash.io/docs/addons/datadog
          parameters:
          - name: url
            displayName: Datadog Events URL
            description: 'Default url: https://api.datadoghq.com/api/v1/events. Needs
              to be changed if your not using the US1 site.'
            type: url
            required: false
            sensitive: false
          - name: apiKey
            displayName: Datadog API key
            placeholder: j96c23b0f12a6b3434a8d710110bd862
            description: (Required) API key from Datadog
            type: text
            required: true
            sensitive: true
          events:
          - feature-created
          - feature-updated
          - feature-archived
          - feature-revived
          - feature-stale-on
          - feature-stale-off
          - feature-environment-enabled
          - feature-environment-disabled
          - feature-strategy-remove
          - feature-strategy-update
          - feature-strategy-add
          - feature-metadata-updated
          - feature-project-change
          - feature-variants-updated
          tagTypes:
          - name: datadog
            description: All Datadog tags added to a specific feature are sent to
              datadog event stream.
            icon: D
    addonTypeSchema:
      required:
      - description
      - displayName
      - documentationUrl
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the addon type. When creating new addons, this
            goes in the payload's `type` field.
          example: slack
        displayName:
          type: string
          description: The addon type's name as it should be displayed in the admin
            UI.
          example: Slack
        documentationUrl:
          type: string
          description: A URL to where you can find more information about using this
            addon type.
          example: https://docs.getunleash.io/docs/addons/slack
        description:
          type: string
          description: A description of the addon type.
          example: Allows Unleash to post updates to Slack.
        tagTypes:
          type: array
          description: A list of [Unleash tag types](https://docs.getunleash.io/reference/tags#tag-types)
            that this addon uses. These tags will be added to the Unleash instance
            when an addon of this type is created.
          example:
          - name: slack
            description: Slack tag used by the slack-addon to specify the slack channel.
            icon: S
          items:
            $ref: '#/components/schemas/tagTypeSchema'
        parameters:
          type: array
          description: 'The addon provider''s parameters. Use these to configure an
            addon of this provider type. Items with `required: true` must be provided.'
          example:
          - name: url
            displayName: Slack webhook URL
            description: (Required)
            type: url
            required: true
            sensitive: true
          - name: username
            displayName: Username
            placeholder: Unleash
            description: The username to use when posting messages to slack. Defaults
              to "Unleash".
            type: text
            required: false
            sensitive: false
          - name: emojiIcon
            displayName: Emoji Icon
            placeholder: ':unleash:'
            description: The emoji_icon to use when posting messages to slack. Defaults
              to ":unleash:".
            type: text
            required: false
            sensitive: false
          - name: defaultChannel
            displayName: Default channel
            description: (Required) Default channel to post updates to if not specified
              in the slack-tag
            type: text
            required: true
            sensitive: false
          items:
            $ref: '#/components/schemas/addonParameterSchema'
        events:
          type: array
          description: All the [event types](https://docs.getunleash.io/reference/api/legacy/unleash/admin/events#feature-toggle-events)
            that are available for this addon provider.
          example:
          - feature-created
          - feature-updated
          - feature-archived
          - feature-revived
          - feature-stale-on
          - feature-stale-off
          - feature-environment-enabled
          - feature-environment-disabled
          - feature-strategy-remove
          - feature-strategy-update
          - feature-strategy-add
          - feature-metadata-updated
          - feature-variants-updated
          - feature-project-change
          items:
            type: string
      additionalProperties: false
      description: An addon provider. Defines a specific addon type and what the end
        user must configure when creating a new addon of that type.
    advancedPlaygroundEnvironmentFeatureSchema:
      required:
      - context
      - environment
      - isEnabled
      - isEnabledInCurrentEnvironment
      - name
      - projectId
      - strategies
      - variant
      - variants
      type: object
      properties:
        name:
          type: string
          description: The feature's name.
          example: my-feature
        environment:
          type: string
          description: The feature's environment.
          example: development
        context:
          $ref: '#/components/schemas/sdkContextSchema'
        projectId:
          type: string
          description: The ID of the project that contains this feature.
          example: my-project
        strategies:
          $ref: '#/components/schemas/advancedPlaygroundEnvironmentFeatureSchema_strategies'
        isEnabledInCurrentEnvironment:
          type: boolean
          description: Whether the feature is active and would be evaluated in the
            provided environment in a normal SDK context.
        isEnabled:
          type: boolean
          description: |-
            Whether this feature is enabled or not in the current environment.
                                      If a feature can't be fully evaluated (that is, `strategies.result` is `unknown`),
                                      this will be `false` to align with how client SDKs treat unresolved feature states.
          example: true
        variant:
          $ref: '#/components/schemas/advancedPlaygroundEnvironmentFeatureSchema_variant'
        variants:
          type: array
          description: The feature variants.
          items:
            $ref: '#/components/schemas/variantSchema'
      additionalProperties: false
      description: A simplified feature toggle model intended for the Unleash playground.
      example:
        environment: development
        strategies:
          result: ""
          data:
          - result: ""
            name: name
            disabled: false
            links:
              edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                3AECCF7E-FF82-4174-8287-8EBE06079A50
            id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
            title: Beta rollout
            constraints:
            - null
            - null
            parameters:
              key: parameters
            segments:
            - result: true
              name: segment A
              id: 0
              constraints:
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
            - result: true
              name: segment A
              id: 0
              constraints:
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
          - result: ""
            name: name
            disabled: false
            links:
              edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                3AECCF7E-FF82-4174-8287-8EBE06079A50
            id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
            title: Beta rollout
            constraints:
            - null
            - null
            parameters:
              key: parameters
            segments:
            - result: true
              name: segment A
              id: 0
              constraints:
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
            - result: true
              name: segment A
              id: 0
              constraints:
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
        isEnabled: true
        name: my-feature
        variant: '{"name":"green","enabled":true}'
        variants:
        - weightType: fix
          payload: '{"type":"json","value":"{color: red}"}'
          stickiness: custom.context.field
          name: blue_group
          weight: 602.7456183070403
          overrides:
          - contextName: userId
            values:
            - red
            - blue
          - contextName: userId
            values:
            - red
            - blue
        - weightType: fix
          payload: '{"type":"json","value":"{color: red}"}'
          stickiness: custom.context.field
          name: blue_group
          weight: 602.7456183070403
          overrides:
          - contextName: userId
            values:
            - red
            - blue
          - contextName: userId
            values:
            - red
            - blue
        projectId: my-project
        isEnabledInCurrentEnvironment: true
    advancedPlaygroundFeatureSchema:
      required:
      - environments
      - name
      - projectId
      type: object
      properties:
        name:
          type: string
          description: The feature's name.
          example: my-feature
        projectId:
          type: string
          description: The ID of the project that contains this feature.
          example: my-project
        environments:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/advancedPlaygroundEnvironmentFeatureSchema'
          description: The lists of features that have been evaluated grouped by environment.
      additionalProperties: false
      description: A simplified feature toggle model intended for the Unleash playground.
      example:
        environments:
          key:
          - environment: development
            strategies:
              result: ""
              data:
              - result: ""
                name: name
                disabled: false
                links:
                  edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                    3AECCF7E-FF82-4174-8287-8EBE06079A50
                id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
                title: Beta rollout
                constraints:
                - null
                - null
                parameters:
                  key: parameters
                segments:
                - result: true
                  name: segment A
                  id: 0
                  constraints:
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
                - result: true
                  name: segment A
                  id: 0
                  constraints:
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
              - result: ""
                name: name
                disabled: false
                links:
                  edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                    3AECCF7E-FF82-4174-8287-8EBE06079A50
                id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
                title: Beta rollout
                constraints:
                - null
                - null
                parameters:
                  key: parameters
                segments:
                - result: true
                  name: segment A
                  id: 0
                  constraints:
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
                - result: true
                  name: segment A
                  id: 0
                  constraints:
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
            isEnabled: true
            name: my-feature
            variant: '{"name":"green","enabled":true}'
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            projectId: my-project
            isEnabledInCurrentEnvironment: true
          - environment: development
            strategies:
              result: ""
              data:
              - result: ""
                name: name
                disabled: false
                links:
                  edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                    3AECCF7E-FF82-4174-8287-8EBE06079A50
                id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
                title: Beta rollout
                constraints:
                - null
                - null
                parameters:
                  key: parameters
                segments:
                - result: true
                  name: segment A
                  id: 0
                  constraints:
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
                - result: true
                  name: segment A
                  id: 0
                  constraints:
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
              - result: ""
                name: name
                disabled: false
                links:
                  edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                    3AECCF7E-FF82-4174-8287-8EBE06079A50
                id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
                title: Beta rollout
                constraints:
                - null
                - null
                parameters:
                  key: parameters
                segments:
                - result: true
                  name: segment A
                  id: 0
                  constraints:
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
                - result: true
                  name: segment A
                  id: 0
                  constraints:
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
                  - result: true
                    contextName: appName
                    values:
                    - my-app
                    - my-other-app
                    caseInsensitive: false
                    inverted: false
                    value: my-app
                    operator: IN
            isEnabled: true
            name: my-feature
            variant: '{"name":"green","enabled":true}'
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            projectId: my-project
            isEnabledInCurrentEnvironment: true
        name: my-feature
        projectId: my-project
    advancedPlaygroundRequestSchema:
      required:
      - context
      - environments
      type: object
      properties:
        environments:
          minItems: 1
          type: array
          description: The environments to evaluate toggles in.
          example:
          - development
          - production
          items:
            minLength: 1
            pattern: ^[a-zA-Z0-9~_.-]+$
            type: string
        projects:
          description: A list of projects to check for toggles in.
          oneOf:
          - type: array
            description: A list of projects to check for toggles in.
            example:
            - my-project
            items:
              type: string
          - type: string
            description: Check toggles in all projects.
            enum:
            - '*'
        context:
          $ref: '#/components/schemas/sdkContextSchema'
      description: Data for the playground API to evaluate toggles in advanced mode
        with environment and context multi selection
      example:
        projects: ""
        environments:
        - development
        - production
        context:
          currentTime: 2022-07-05T12:56:41+02:00
          environment: environment
          appName: My cool application.
          sessionId: b65e7b23-fec0-4814-a129-0e9861ef18fc
          userId: username@provider.com
          properties:
            customContextField: this is one!
            otherCustomField: "3"
          remoteAddress: 192.168.1.1
    advancedPlaygroundResponseSchema:
      required:
      - features
      - input
      type: object
      properties:
        input:
          $ref: '#/components/schemas/advancedPlaygroundRequestSchema'
        features:
          type: array
          description: The list of features that have been evaluated.
          items:
            $ref: '#/components/schemas/advancedPlaygroundFeatureSchema'
      additionalProperties: false
      description: The state of all features given the provided input.
      example:
        input:
          projects: ""
          environments:
          - development
          - production
          context:
            currentTime: 2022-07-05T12:56:41+02:00
            environment: environment
            appName: My cool application.
            sessionId: b65e7b23-fec0-4814-a129-0e9861ef18fc
            userId: username@provider.com
            properties:
              customContextField: this is one!
              otherCustomField: "3"
            remoteAddress: 192.168.1.1
        features:
        - environments:
            key:
            - environment: development
              strategies:
                result: ""
                data:
                - result: ""
                  name: name
                  disabled: false
                  links:
                    edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                      3AECCF7E-FF82-4174-8287-8EBE06079A50
                  id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
                  title: Beta rollout
                  constraints:
                  - null
                  - null
                  parameters:
                    key: parameters
                  segments:
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                - result: ""
                  name: name
                  disabled: false
                  links:
                    edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                      3AECCF7E-FF82-4174-8287-8EBE06079A50
                  id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
                  title: Beta rollout
                  constraints:
                  - null
                  - null
                  parameters:
                    key: parameters
                  segments:
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
              isEnabled: true
              name: my-feature
              variant: '{"name":"green","enabled":true}'
              variants:
              - weightType: fix
                payload: '{"type":"json","value":"{color: red}"}'
                stickiness: custom.context.field
                name: blue_group
                weight: 602.7456183070403
                overrides:
                - contextName: userId
                  values:
                  - red
                  - blue
                - contextName: userId
                  values:
                  - red
                  - blue
              - weightType: fix
                payload: '{"type":"json","value":"{color: red}"}'
                stickiness: custom.context.field
                name: blue_group
                weight: 602.7456183070403
                overrides:
                - contextName: userId
                  values:
                  - red
                  - blue
                - contextName: userId
                  values:
                  - red
                  - blue
              projectId: my-project
              isEnabledInCurrentEnvironment: true
            - environment: development
              strategies:
                result: ""
                data:
                - result: ""
                  name: name
                  disabled: false
                  links:
                    edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                      3AECCF7E-FF82-4174-8287-8EBE06079A50
                  id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
                  title: Beta rollout
                  constraints:
                  - null
                  - null
                  parameters:
                    key: parameters
                  segments:
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                - result: ""
                  name: name
                  disabled: false
                  links:
                    edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                      3AECCF7E-FF82-4174-8287-8EBE06079A50
                  id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
                  title: Beta rollout
                  constraints:
                  - null
                  - null
                  parameters:
                    key: parameters
                  segments:
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
              isEnabled: true
              name: my-feature
              variant: '{"name":"green","enabled":true}'
              variants:
              - weightType: fix
                payload: '{"type":"json","value":"{color: red}"}'
                stickiness: custom.context.field
                name: blue_group
                weight: 602.7456183070403
                overrides:
                - contextName: userId
                  values:
                  - red
                  - blue
                - contextName: userId
                  values:
                  - red
                  - blue
              - weightType: fix
                payload: '{"type":"json","value":"{color: red}"}'
                stickiness: custom.context.field
                name: blue_group
                weight: 602.7456183070403
                overrides:
                - contextName: userId
                  values:
                  - red
                  - blue
                - contextName: userId
                  values:
                  - red
                  - blue
              projectId: my-project
              isEnabledInCurrentEnvironment: true
          name: my-feature
          projectId: my-project
        - environments:
            key:
            - environment: development
              strategies:
                result: ""
                data:
                - result: ""
                  name: name
                  disabled: false
                  links:
                    edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                      3AECCF7E-FF82-4174-8287-8EBE06079A50
                  id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
                  title: Beta rollout
                  constraints:
                  - null
                  - null
                  parameters:
                    key: parameters
                  segments:
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                - result: ""
                  name: name
                  disabled: false
                  links:
                    edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                      3AECCF7E-FF82-4174-8287-8EBE06079A50
                  id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
                  title: Beta rollout
                  constraints:
                  - null
                  - null
                  parameters:
                    key: parameters
                  segments:
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
              isEnabled: true
              name: my-feature
              variant: '{"name":"green","enabled":true}'
              variants:
              - weightType: fix
                payload: '{"type":"json","value":"{color: red}"}'
                stickiness: custom.context.field
                name: blue_group
                weight: 602.7456183070403
                overrides:
                - contextName: userId
                  values:
                  - red
                  - blue
                - contextName: userId
                  values:
                  - red
                  - blue
              - weightType: fix
                payload: '{"type":"json","value":"{color: red}"}'
                stickiness: custom.context.field
                name: blue_group
                weight: 602.7456183070403
                overrides:
                - contextName: userId
                  values:
                  - red
                  - blue
                - contextName: userId
                  values:
                  - red
                  - blue
              projectId: my-project
              isEnabledInCurrentEnvironment: true
            - environment: development
              strategies:
                result: ""
                data:
                - result: ""
                  name: name
                  disabled: false
                  links:
                    edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                      3AECCF7E-FF82-4174-8287-8EBE06079A50
                  id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
                  title: Beta rollout
                  constraints:
                  - null
                  - null
                  parameters:
                    key: parameters
                  segments:
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                - result: ""
                  name: name
                  disabled: false
                  links:
                    edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                      3AECCF7E-FF82-4174-8287-8EBE06079A50
                  id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
                  title: Beta rollout
                  constraints:
                  - null
                  - null
                  parameters:
                    key: parameters
                  segments:
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                  - result: true
                    name: segment A
                    id: 0
                    constraints:
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
                    - result: true
                      contextName: appName
                      values:
                      - my-app
                      - my-other-app
                      caseInsensitive: false
                      inverted: false
                      value: my-app
                      operator: IN
              isEnabled: true
              name: my-feature
              variant: '{"name":"green","enabled":true}'
              variants:
              - weightType: fix
                payload: '{"type":"json","value":"{color: red}"}'
                stickiness: custom.context.field
                name: blue_group
                weight: 602.7456183070403
                overrides:
                - contextName: userId
                  values:
                  - red
                  - blue
                - contextName: userId
                  values:
                  - red
                  - blue
              - weightType: fix
                payload: '{"type":"json","value":"{color: red}"}'
                stickiness: custom.context.field
                name: blue_group
                weight: 602.7456183070403
                overrides:
                - contextName: userId
                  values:
                  - red
                  - blue
                - contextName: userId
                  values:
                  - red
                  - blue
              projectId: my-project
              isEnabledInCurrentEnvironment: true
          name: my-feature
          projectId: my-project
    apiTokenSchema:
      required:
      - createdAt
      - project
      - projects
      - secret
      - tokenName
      - type
      type: object
      properties:
        secret:
          type: string
          description: The token used for authentication.
          example: project:environment.xyzrandomstring
        username:
          type: string
          description: This property was deprecated in Unleash v5. Prefer the `tokenName`
            property instead.
          example: a-name
          deprecated: true
        tokenName:
          type: string
          description: A unique name for this particular token
          example: some-user
        type:
          type: string
          description: The type of API token
          example: client
          enum:
          - client
          - admin
          - frontend
        environment:
          type: string
          description: The environment the token has access to. `*` if it has access
            to all environments.
          example: development
        project:
          type: string
          description: The project this token belongs to.
          example: developerexperience
        projects:
          type: array
          description: The list of projects this token has access to. If the token
            has access to specific projects they will be listed here. If the token
            has access to all projects it will be represented as `[*]`
          example:
          - developerexperience
          - enterprisegrowth
          items:
            type: string
        expiresAt:
          type: string
          description: The token's expiration date. NULL if the token doesn't have
            an expiration set.
          format: date-time
          nullable: true
          example: 2023-04-19T08:15:14Z
        createdAt:
          type: string
          description: When the token was created.
          format: date-time
          example: 2023-04-19T08:15:14Z
        seenAt:
          type: string
          description: When the token was last seen/used to authenticate with. NULL
            if the token has not yet been used for authentication.
          format: date-time
          nullable: true
          example: 2023-04-19T08:15:14Z
        alias:
          type: string
          description: Alias is no longer in active use and will often be NULL. It's
            kept around as a way of allowing old proxy tokens created with the old
            metadata format to keep working.
          nullable: true
          example: randomid-or-some-alias
      additionalProperties: false
      description: An overview of an [Unleash API token](https://docs.getunleash.io/reference/api-tokens-and-client-keys).
      example:
        createdAt: 2023-04-19T08:15:14Z
        environment: development
        seenAt: 2023-04-19T08:15:14Z
        projects:
        - developerexperience
        - enterprisegrowth
        tokenName: some-user
        project: developerexperience
        alias: randomid-or-some-alias
        secret: project:environment.xyzrandomstring
        type: client
        expiresAt: 2023-04-19T08:15:14Z
        username: a-name
    apiTokensSchema:
      required:
      - tokens
      type: object
      properties:
        tokens:
          type: array
          description: A list of Unleash API tokens.
          items:
            $ref: '#/components/schemas/apiTokenSchema'
      additionalProperties: false
      description: An object with [Unleash API tokens](https://docs.getunleash.io/reference/api-tokens-and-client-keys)
      example:
        tokens:
        - createdAt: 2023-04-19T08:15:14Z
          environment: development
          seenAt: 2023-04-19T08:15:14Z
          projects:
          - developerexperience
          - enterprisegrowth
          tokenName: some-user
          project: developerexperience
          alias: randomid-or-some-alias
          secret: project:environment.xyzrandomstring
          type: client
          expiresAt: 2023-04-19T08:15:14Z
          username: a-name
        - createdAt: 2023-04-19T08:15:14Z
          environment: development
          seenAt: 2023-04-19T08:15:14Z
          projects:
          - developerexperience
          - enterprisegrowth
          tokenName: some-user
          project: developerexperience
          alias: randomid-or-some-alias
          secret: project:environment.xyzrandomstring
          type: client
          expiresAt: 2023-04-19T08:15:14Z
          username: a-name
    applicationSchema:
      required:
      - appName
      type: object
      properties:
        appName:
          type: string
          description: Name of the application
          example: accounting
        sdkVersion:
          type: string
          description: Which SDK and version the application reporting uses. Typically
            represented as `<identifier>:<version>`
          example: unleash-client-java:8.0.0
        strategies:
          type: array
          description: Which [strategies](https://docs.getunleash.io/topics/the-anatomy-of-unleash#activation-strategies)
            the application has loaded. Useful when trying to figure out if your [custom
            strategy](https://docs.getunleash.io/reference/custom-activation-strategies)
            has been loaded in the SDK
          example:
          - standard
          - gradualRollout
          - mySpecialCustomStrategy
          items:
            type: string
        description:
          type: string
          description: Extra information added about the application reporting the
            metrics. Only present if added via the Unleash Admin interface
          example: Application for reporting page visits
        url:
          type: string
          description: A link to reference the application reporting the metrics.
            Could for instance be a GitHub link to the repository of the application
          example: https://github.com/Unleash/unleash-client-proxy-js
        color:
          type: string
          description: The CSS color that is used to color the application's entry
            in the application list
          example: red
        icon:
          type: string
          description: An URL to an icon file to be used for the applications's entry
            in the application list
          example: https://github.com/favicon.ico
      additionalProperties: false
      example:
        color: red
        strategies:
        - standard
        - gradualRollout
        - mySpecialCustomStrategy
        appName: accounting
        icon: https://github.com/favicon.ico
        description: Application for reporting page visits
        sdkVersion: unleash-client-java:8.0.0
        url: https://github.com/Unleash/unleash-client-proxy-js
    applicationsSchema:
      type: object
      properties:
        applications:
          type: array
          description: Contains a list of applications that have connected via an
            SDK
          items:
            $ref: '#/components/schemas/applicationSchema'
      additionalProperties: false
      example:
        applications:
        - color: red
          strategies:
          - standard
          - gradualRollout
          - mySpecialCustomStrategy
          appName: accounting
          icon: https://github.com/favicon.ico
          description: Application for reporting page visits
          sdkVersion: unleash-client-java:8.0.0
          url: https://github.com/Unleash/unleash-client-proxy-js
        - color: red
          strategies:
          - standard
          - gradualRollout
          - mySpecialCustomStrategy
          appName: accounting
          icon: https://github.com/favicon.ico
          description: Application for reporting page visits
          sdkVersion: unleash-client-java:8.0.0
          url: https://github.com/Unleash/unleash-client-proxy-js
    batchFeaturesSchema:
      required:
      - features
      type: object
      properties:
        features:
          type: array
          description: List of feature toggle names
          example:
          - my-feature-4
          - my-feature-5
          - my-feature-6
          items:
            type: string
      description: A list of feature toggle names for batch operations
    batchStaleSchema:
      required:
      - features
      - stale
      type: object
      properties:
        features:
          type: array
          description: A list of features to mark as (not) stale
          example:
          - my-feature-1
          - my-feature-2
          - my-feature-3
          items:
            type: string
            description: A feature name
            example: my-feature-5
        stale:
          type: boolean
          description: Whether the list of features should be marked as stale or not
            stale. If `true`, the features will be marked as stale. If `false`, the
            features will be marked as not stale.
          example: true
      description: A list of features to operate on and whether they should be marked
        as stale or as not stale.
    bulkRegistrationSchema:
      required:
      - appName
      - environment
      - instanceId
      type: object
      properties:
        connectVia:
          type: array
          description: "A list of applications this app registration has been registered\
            \ through. If connected directly to Unleash, this is an empty list. \n\
            \ This can be used in later visualizations to tell how many levels of\
            \ proxy or Edge instances our SDKs have connected through"
          example:
          - appName: unleash-edge
            instanceId: edge-pod-bghzv5
          items:
            $ref: '#/components/schemas/bulkRegistrationSchema_connectVia'
        appName:
          type: string
          description: The name of the application that is evaluating toggles
          example: Ingress load balancer
        environment:
          type: string
          description: Which environment the application is running in
          example: development
        instanceId:
          type: string
          description: A [(somewhat) unique identifier](https://docs.getunleash.io/reference/sdks/node#advanced-usage)
            for the application
          example: application-name-dacb1234
        interval:
          type: number
          description: How often (in seconds) the application refreshes its features
          example: 10
        started:
          $ref: '#/components/schemas/dateSchema'
        strategies:
          type: array
          description: Enabled [strategies](https://docs.getunleash.io/reference/activation-strategies)
            in the application
          example:
          - standard
          - gradualRollout
          items:
            type: string
        sdkVersion:
          type: string
          description: The version the sdk is running. Typically <client>:<version>
          example: unleash-client-java:8.0.0
      description: An application registration. Defines the format POSTed by our server-side
        SDKs when they're starting up
    bulkMetricsSchema:
      required:
      - applications
      - metrics
      type: object
      properties:
        applications:
          type: array
          description: A list of applications registered by an Unleash SDK
          items:
            $ref: '#/components/schemas/bulkRegistrationSchema'
        metrics:
          type: array
          description: a list of client usage metrics registered by downstream providers.
            (Typically Unleash Edge)
          items:
            $ref: '#/components/schemas/clientMetricsEnvSchema'
      description: A batch of metrics accumulated by Edge (or other compatible applications).
        Includes both application registrations as well usage metrics from clients
    bulkToggleFeaturesSchema:
      required:
      - features
      type: object
      properties:
        features:
          type: array
          description: The features that we want to bulk toggle
          example:
          - feature-a
          - feature-b
          items:
            type: string
            description: The feature name we want to toggle
      description: The feature list used for bulk toggle operations
    changePasswordSchema:
      required:
      - password
      - token
      type: object
      properties:
        token:
          type: string
          description: A reset token used to validate that the user is allowed to
            change the password.
          example: $2a$15$QzeW/y5/MEppCWVEkoX5euejobYOLSd4We21LQjjKlWH9l2I3wCke
        password:
          type: string
          description: The new password for the user
          example: correct horse battery staple
      additionalProperties: false
      description: Change password as long as the token is a valid token
    clientApplicationSchema:
      required:
      - appName
      - interval
      - started
      - strategies
      type: object
      properties:
        appName:
          type: string
          description: An identifier for the app that uses the sdk, should be static
            across SDK restarts
          example: example-app
        instanceId:
          type: string
          description: 'A unique identifier identifying the instance of the application
            running the SDK. Often changes based on execution environment. For instance:
            two pods in Kubernetes will have two different instanceIds'
          example: b77f3d13-5f48-4a7b-a3f4-a449b97ce43a
        sdkVersion:
          type: string
          description: An SDK version identifier. Usually formatted as "unleash-client-<language>:<version>"
          example: unleash-client-java:7.0.0
        environment:
          type: string
          description: The SDK's configured 'environment' property. Deprecated. This
            property  does **not** control which Unleash environment the SDK gets
            toggles for. To control Unleash environments, use the SDKs API key.
          example: development
          deprecated: true
        interval:
          minimum: 0
          type: number
          description: How often (in seconds) does the client refresh its toggles
          example: 10
        started:
          description: Either an RFC-3339 timestamp or a unix timestamp in seconds
          example: 2023-06-13T16:35:00.000Z
          oneOf:
          - type: string
            format: date-time
          - type: number
        strategies:
          type: array
          description: Which strategies the SDKs runtime knows about
          example:
          - default
          - gradualRollout
          - remoteAddress
          items:
            type: string
      description: A client application is an instance of one of our SDKs
    clientFeatureSchema:
      required:
      - enabled
      - name
      type: object
      properties:
        name:
          type: string
          description: The unique name of a feature toggle. Is validated to be URL
            safe on creation
          example: new.payment.flow.stripe
        type:
          type: string
          description: What kind of feature flag is this. Refer to the documentation
            on [feature toggle types](https://docs.getunleash.io/reference/feature-toggle-types)
            for more information
          example: release
        description:
          type: string
          description: A description of the toggle
          nullable: true
          example: No variants here
        enabled:
          type: boolean
          description: Whether the feature flag is enabled for the current API key
            or not. This is ANDed with the evaluation results of the strategies list,
            so if this is false, the evaluation result will always be false
          example: true
        stale:
          type: boolean
          description: If this is true Unleash believes this feature toggle has been
            active longer than Unleash expects a toggle of this type to be active
          example: false
        impressionData:
          type: boolean
          description: Set to true if SDKs should trigger [impression events](https://docs.getunleash.io/reference/impression-data)
            when this toggle is evaluated
          nullable: true
          example: false
        project:
          type: string
          description: Which project this feature toggle belongs to
          example: new.payment.flow
        strategies:
          type: array
          description: Evaluation strategies for this toggle. Each entry in this list
            will be evaluated and ORed together
          items:
            $ref: '#/components/schemas/featureStrategySchema'
        variants:
          type: array
          description: '[Variants](https://docs.getunleash.io/reference/feature-toggle-variants#what-are-variants)
            configured for this toggle'
          nullable: true
          items:
            $ref: '#/components/schemas/variantSchema'
      additionalProperties: false
      description: Feature toggle configuration used by SDKs to evaluate state of
        a toggle
      example:
        stale: false
        impressionData: false
        strategies:
        - featureName: myAwesomeFeature
          sortOrder: 9999
          name: flexibleRollout
          disabled: false
          id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
          title: Gradual Rollout 25-Prod
          constraints:
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          parameters:
            key: parameters
          segments:
          - 1
          - 2
        - featureName: myAwesomeFeature
          sortOrder: 9999
          name: flexibleRollout
          disabled: false
          id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
          title: Gradual Rollout 25-Prod
          constraints:
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          parameters:
            key: parameters
          segments:
          - 1
          - 2
        name: new.payment.flow.stripe
        description: No variants here
        project: new.payment.flow
        variants:
        - weightType: fix
          payload: '{"type":"json","value":"{color: red}"}'
          stickiness: custom.context.field
          name: blue_group
          weight: 602.7456183070403
          overrides:
          - contextName: userId
            values:
            - red
            - blue
          - contextName: userId
            values:
            - red
            - blue
        - weightType: fix
          payload: '{"type":"json","value":"{color: red}"}'
          stickiness: custom.context.field
          name: blue_group
          weight: 602.7456183070403
          overrides:
          - contextName: userId
            values:
            - red
            - blue
          - contextName: userId
            values:
            - red
            - blue
        type: release
        enabled: true
    clientFeaturesQuerySchema:
      type: object
      properties:
        tag:
          type: array
          description: Features tagged with one of these tags are included
          example:
          - - simple:payment
            - simple:stripejourney
          items:
            type: array
            items:
              type: string
        project:
          type: array
          description: Features that are part of these projects are included in this
            response. (DEPRECATED) - Handled by API tokens
          example:
          - new.payment.flow
          deprecated: true
          items:
            type: string
        namePrefix:
          type: string
          description: Features are filtered to only include features whose name starts
            with this prefix
          example: payment
        environment:
          type: string
          description: Strategies for the feature toggle configured for this environment
            are included. (DEPRECATED) - Handled by API tokens
          deprecated: true
        inlineSegmentConstraints:
          type: boolean
          description: Set to true if requesting client does not support Unleash-Client-Specification
            4.2.2 or newer. Modern SDKs will have this set to false, since they will
            be able to merge constraints and segments themselves
          example: true
      additionalProperties: false
      description: Query parameters active for a client features request
      example:
        inlineSegmentConstraints: true
        environment: environment
        namePrefix: payment
        project:
        - new.payment.flow
        tag:
        - - simple:payment
          - simple:stripejourney
    clientFeaturesSchema:
      required:
      - features
      - version
      type: object
      properties:
        version:
          minimum: 0
          type: number
          description: A version number for the format used in the response. Most
            Unleash instances now return version 2, which includes segments as a separate
            array
          example: 2
        features:
          type: array
          description: A list of feature toggles with their configuration
          items:
            $ref: '#/components/schemas/clientFeatureSchema'
        segments:
          type: array
          description: A list of [Segments](https://docs.getunleash.io/reference/segments)
            configured for this Unleash instance
          items:
            $ref: '#/components/schemas/segmentSchema'
        query:
          $ref: '#/components/schemas/clientFeaturesQuerySchema'
      description: Configuration data for server-side SDKs for evaluating feature
        flags.
      example:
        features:
        - stale: false
          impressionData: false
          strategies:
          - featureName: myAwesomeFeature
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
            title: Gradual Rollout 25-Prod
            constraints:
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          - featureName: myAwesomeFeature
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
            title: Gradual Rollout 25-Prod
            constraints:
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          name: new.payment.flow.stripe
          description: No variants here
          project: new.payment.flow
          variants:
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          type: release
          enabled: true
        - stale: false
          impressionData: false
          strategies:
          - featureName: myAwesomeFeature
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
            title: Gradual Rollout 25-Prod
            constraints:
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          - featureName: myAwesomeFeature
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
            title: Gradual Rollout 25-Prod
            constraints:
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          name: new.payment.flow.stripe
          description: No variants here
          project: new.payment.flow
          variants:
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          type: release
          enabled: true
        query:
          inlineSegmentConstraints: true
          environment: environment
          namePrefix: payment
          project:
          - new.payment.flow
          tag:
          - - simple:payment
            - simple:stripejourney
        version: 2
        segments:
        - name: segment A
          description: Segment A description
          id: 6.027456183070403
          constraints:
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
        - name: segment A
          description: Segment A description
          id: 6.027456183070403
          constraints:
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
    clientMetricsSchema:
      required:
      - appName
      - bucket
      type: object
      properties:
        appName:
          type: string
          description: The name of the application that is evaluating toggles
          example: insurance-selector
        instanceId:
          type: string
          description: A [(somewhat) unique identifier](https://docs.getunleash.io/reference/sdks/node#advanced-usage)
            for the application
          example: application-name-dacb1234
        environment:
          type: string
          description: Which environment the application is running in
          example: development
        bucket:
          $ref: '#/components/schemas/clientMetricsSchema_bucket'
      description: Client usage metrics, accumulated in buckets of hour by hour by
        default
    clientMetricsEnvSchema:
      required:
      - appName
      - environment
      - featureName
      type: object
      properties:
        featureName:
          type: string
          description: Name of the feature checked by the SDK
          example: my.special.feature
        appName:
          type: string
          description: The name of the application the SDK is being used in
          example: accounting
        environment:
          type: string
          description: Which environment the SDK is being used in
          example: development
        timestamp:
          $ref: '#/components/schemas/dateSchema'
        "yes":
          minimum: 0
          type: integer
          description: How many times the toggle evaluated to true
          example: 974
        "no":
          minimum: 0
          type: integer
          description: How many times the toggle evaluated to false
          example: 50
        variants:
          type: object
          additionalProperties:
            minimum: 0
            type: integer
          description: How many times each variant was returned
          example:
            variantA: 15
            variantB: 25
            variantC: 5
      additionalProperties: true
      description: Used for reporting feature evaluation results from SDKs
    cloneFeatureSchema:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        replaceGroupId:
          type: boolean
    constraintSchema:
      required:
      - contextName
      - operator
      type: object
      properties:
        contextName:
          type: string
          description: The name of the context field that this constraint should apply
            to.
          example: appName
        operator:
          type: string
          description: The operator to use when evaluating this constraint. For more
            information about the various operators, refer to [the strategy constraint
            operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).
          example: IN
          enum:
          - NOT_IN
          - IN
          - STR_ENDS_WITH
          - STR_STARTS_WITH
          - STR_CONTAINS
          - NUM_EQ
          - NUM_GT
          - NUM_GTE
          - NUM_LT
          - NUM_LTE
          - DATE_AFTER
          - DATE_BEFORE
          - SEMVER_EQ
          - SEMVER_GT
          - SEMVER_LT
        caseInsensitive:
          type: boolean
          description: Whether the operator should be case sensitive or not. Defaults
            to `false` (being case sensitive).
          default: false
        inverted:
          type: boolean
          description: Whether the result should be negated or not. If `true`, will
            turn a `true` result into a `false` result and vice versa.
          default: false
        values:
          type: array
          description: The context values that should be used for constraint evaluation.
            Use this property instead of `value` for properties that accept multiple
            values.
          example:
          - my-app
          - my-other-app
          items:
            type: string
        value:
          type: string
          description: The context value that should be used for constraint evaluation.
            Use this property instead of `values` for properties that only accept
            single values.
          example: my-app
      additionalProperties: false
      description: A strategy constraint. For more information, refer to [the strategy
        constraint reference documentation](https://docs.getunleash.io/reference/strategy-constraints)
      example:
        contextName: appName
        values:
        - my-app
        - my-other-app
        caseInsensitive: false
        inverted: false
        value: my-app
        operator: IN
    contextFieldSchema:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the context field
          example: userId
        description:
          type: string
          description: The description of the context field.
          nullable: true
          example: Used to uniquely identify users
        stickiness:
          type: boolean
          description: Does this context field support being used for [stickiness](https://docs.getunleash.io/reference/stickiness)
            calculations
          example: true
        sortOrder:
          type: integer
          description: Used when sorting a list of context fields. Is also used as
            a tiebreaker if a list of context fields is sorted alphabetically.
          example: 900
        createdAt:
          type: string
          description: When this context field was created
          format: date-time
          nullable: true
          example: 2023-06-29T10:19:00Z
        usedInFeatures:
          minimum: 0
          type: integer
          description: Number of projects where this context field is used in
          nullable: true
          example: 3
        usedInProjects:
          minimum: 0
          type: integer
          description: Number of projects where this context field is used in
          nullable: true
          example: 2
        legalValues:
          type: array
          description: Allowed values for this context field schema. Can be used to
            narrow down accepted input
          items:
            $ref: '#/components/schemas/legalValueSchema'
      additionalProperties: false
      description: A representation of a [context field](https://docs.getunleash.io/reference/unleash-context).
      example:
        legalValues:
        - description: Deep fuchsia
          value: '#c154c1'
        - description: Deep fuchsia
          value: '#c154c1'
        createdAt: 2023-06-29T10:19:00Z
        stickiness: true
        sortOrder: 900
        name: userId
        description: Used to uniquely identify users
        usedInFeatures: 3
        usedInProjects: 2
    contextFieldsSchema:
      type: array
      description: A list of context fields
      items:
        $ref: '#/components/schemas/contextFieldSchema'
    createApiTokenSchema:
      type: object
      properties:
        expiresAt:
          type: string
          description: The time when this token should expire.
          format: date-time
          example: 2023-07-04T11:26:24+02:00
      description: The data required to create an [Unleash API token](https://docs.getunleash.io/reference/api-tokens-and-client-keys).
      oneOf:
      - allOf:
        - required:
          - type
          type: object
          properties:
            type:
              pattern: ^[Aa][Dd][Mm][Ii][Nn]$
              type: string
              description: An admin token. Must be the string "admin" (not case sensitive).
              example: admin
        - required:
          - tokenName
          type: object
          properties:
            tokenName:
              type: string
              description: The name of the token.
              example: token-64522
      - allOf:
        - required:
          - type
          type: object
          properties:
            type:
              pattern: ^[Aa][Dd][Mm][Ii][Nn]$
              type: string
              description: An admin token. Must be the string "admin" (not case sensitive).
              example: admin
        - required:
          - username
          type: object
          properties:
            username:
              type: string
              description: The name of the token. This property is deprecated. Use
                `tokenName` instead.
              example: token-64523
              deprecated: true
      - allOf:
        - required:
          - type
          type: object
          properties:
            type:
              pattern: ^([Cc][Ll][Ii][Ee][Nn][Tt]|[Ff][Rr][Oo][Nn][Tt][Ee][Nn][Dd])$
              type: string
              description: A client or frontend token. Must be one of the strings
                "client" or "frontend" (not case sensitive).
              example: frontend
            environment:
              type: string
              description: The environment that the token should be valid for. Defaults
                to "default"
              example: development
            project:
              type: string
              description: The project that the token should be valid for. Defaults
                to "*" meaning every project. This property is mutually incompatible
                with the `projects` property. If you specify one, you cannot specify
                the other.
              example: project-851
            projects:
              type: array
              description: A list of projects that the token should be valid for.
                This property is mutually incompatible with the `project` property.
                If you specify one, you cannot specify the other.
              example:
              - project-851
              - project-852
              items:
                type: string
        - required:
          - tokenName
          type: object
          properties:
            tokenName:
              type: string
              description: The name of the token.
              example: token-64522
      - allOf:
        - required:
          - type
          type: object
          properties:
            type:
              pattern: ^([Cc][Ll][Ii][Ee][Nn][Tt]|[Ff][Rr][Oo][Nn][Tt][Ee][Nn][Dd])$
              type: string
              description: A client or frontend token. Must be one of the strings
                "client" or "frontend" (not case sensitive).
              example: frontend
            environment:
              type: string
              description: The environment that the token should be valid for. Defaults
                to "default"
              example: development
            project:
              type: string
              description: The project that the token should be valid for. Defaults
                to "*" meaning every project. This property is mutually incompatible
                with the `projects` property. If you specify one, you cannot specify
                the other.
              example: project-851
            projects:
              type: array
              description: A list of projects that the token should be valid for.
                This property is mutually incompatible with the `project` property.
                If you specify one, you cannot specify the other.
              example:
              - project-851
              - project-852
              items:
                type: string
        - required:
          - username
          type: object
          properties:
            username:
              type: string
              description: The name of the token. This property is deprecated. Use
                `tokenName` instead.
              example: token-64523
              deprecated: true
    createApplicationSchema:
      type: object
      properties:
        appName:
          type: string
          description: Name of the application
          example: accounting
        sdkVersion:
          type: string
          description: Which SDK and version the application reporting uses. Typically
            represented as `<identifier>:<version>`
          example: unleash-client-java:8.0.0
        strategies:
          type: array
          description: Which [strategies](https://docs.getunleash.io/topics/the-anatomy-of-unleash#activation-strategies)
            the application has loaded. Useful when trying to figure out if your [custom
            strategy](https://docs.getunleash.io/reference/custom-activation-strategies)
            has been loaded in the SDK
          example:
          - standard
          - gradualRollout
          - mySpecialCustomStrategy
          items:
            type: string
        url:
          type: string
          description: A link to reference the application reporting the metrics.
            Could for instance be a GitHub link to the repository of the application
          example: https://github.com/Unleash/unleash-client-proxy-js
        color:
          type: string
          description: Css color to be used to color the application's entry in the
            application list
          example: red
        icon:
          type: string
          description: An URL to an icon file to be used for the applications's entry
            in the application list
          example: https://github.com/favicon.ico
      additionalProperties: true
      description: Reported application information from Unleash SDKs
    createFeatureSchema:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        description:
          type: string
        impressionData:
          type: boolean
    createFeatureStrategySchema:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the strategy type
          example: flexibleRollout
        title:
          type: string
          description: A descriptive title for the strategy
          nullable: true
          example: Gradual Rollout 25-Prod
        disabled:
          type: boolean
          description: A toggle to disable the strategy. defaults to false. Disabled
            strategies are not evaluated or returned to the SDKs
          nullable: true
          example: false
        sortOrder:
          type: number
          description: The order of the strategy in the list
          example: 9999
        constraints:
          type: array
          description: A list of the constraints attached to the strategy. See https://docs.getunleash.io/reference/strategy-constraints
          example:
          - values:
            - "1"
            - "2"
            inverted: false
            operator: IN
            contextName: appName
            caseInsensitive: false
          items:
            $ref: '#/components/schemas/constraintSchema'
        parameters:
          $ref: '#/components/schemas/parametersSchema'
        segments:
          type: array
          description: Ids of segments to use for this strategy
          example:
          - 1
          - 2
          items:
            type: number
      description: Create a strategy configuration in a feature
      example:
        sortOrder: 9999
        name: flexibleRollout
        disabled: false
        title: Gradual Rollout 25-Prod
        constraints:
        - values:
          - "1"
          - "2"
          inverted: false
          operator: IN
          contextName: appName
          caseInsensitive: false
        parameters:
          key: parameters
        segments:
        - 1
        - 2
    createInvitedUserSchema:
      required:
      - email
      - name
      - password
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        name:
          type: string
        password:
          type: string
      additionalProperties: false
    createUserSchema:
      required:
      - rootRole
      type: object
      properties:
        username:
          type: string
          description: The user's username. Must be provided if email is not provided.
          example: hunter
        email:
          type: string
          description: The user's email address. Must be provided if username is not
            provided.
          example: user@example.com
        name:
          type: string
          description: The user's name (not the user's username).
          example: Sam Seawright
        password:
          type: string
          description: Password for the user
          example: k!5As3HquUrQ
        rootRole:
          description: The role to assign to the user. Can be either the role's ID
            or its unique name.
          oneOf:
          - minimum: 0
            type: integer
            example: 1
          - type: string
            example: Admin
            enum:
            - Admin
            - Editor
            - Viewer
            - Owner
            - Member
        sendEmail:
          type: boolean
          description: Whether to send a welcome email with a login link to the user
            or not. Defaults to `true`.
          example: false
      additionalProperties: false
      description: The payload must contain at least one of the name and email properties,
        though which one is up to you. For the user to be able to log in to the system,
        the user must have an email.
    dateSchema:
      oneOf:
      - type: string
        format: date-time
      - type: number
    edgeTokenSchema:
      required:
      - projects
      - token
      - type
      type: object
      properties:
        projects:
          type: array
          description: The list of projects this token has access to. If the token
            has access to specific projects they will be listed here. If the token
            has access to all projects it will be represented as [`*`]
          example:
          - developerexperience
          - enterprisegrowth
          items:
            type: string
        type:
          type: string
          description: The [API token](https://docs.getunleash.io/reference/api-tokens-and-client-keys#api-tokens)'s
            **type**. Unleash supports three different types of API tokens ([ADMIN](https://docs.getunleash.io/reference/api-tokens-and-client-keys#admin-tokens),
            [CLIENT](https://docs.getunleash.io/reference/api-tokens-and-client-keys#client-tokens),
            [FRONTEND](https://docs.getunleash.io/reference/api-tokens-and-client-keys#front-end-tokens)).
            They all have varying access, so when validating a token it's important
            to know what kind you're dealing with
          example: client
          enum:
          - client
          - admin
          - frontend
        token:
          type: string
          description: The actual token value. [Unleash API tokens](https://docs.getunleash.io/reference/api-tokens-and-client-keys)
            are comprised of three parts. <project(s)>:<environment>.randomcharacters
          example: '*:development.5c806b5320c88cf27e81f3e9b97dab298a77d5879316e3c2d806206b'
      additionalProperties: false
      description: A representation of a client token, limiting access to [CLIENT](https://docs.getunleash.io/reference/api-tokens-and-client-keys#client-tokens)
        (used by serverside SDKs) or [FRONTEND](https://docs.getunleash.io/reference/api-tokens-and-client-keys#front-end-tokens)
        (used by proxy SDKs)
      example:
        projects:
        - developerexperience
        - enterprisegrowth
        type: client
        token: '*:development.5c806b5320c88cf27e81f3e9b97dab298a77d5879316e3c2d806206b'
    emailSchema:
      required:
      - email
      type: object
      properties:
        email:
          type: string
          description: The email address
          example: test@example.com
      additionalProperties: false
      description: Represents the email of a user. Used to send email communication
        (reset password, welcome mail etc)
    environmentSchema:
      required:
      - enabled
      - name
      - protected
      - sortOrder
      - type
      type: object
      properties:
        name:
          type: string
          description: The name of the environment
          example: my-dev-env
        type:
          type: string
          description: The [type of environment](https://docs.getunleash.io/reference/environments#environment-types).
          example: development
        enabled:
          type: boolean
          description: '`true` if the environment is enabled for the project, otherwise
            `false`.'
          example: true
        protected:
          type: boolean
          description: '`true` if the environment is protected, otherwise `false`.
            A *protected* environment can not be deleted.'
          example: true
        sortOrder:
          type: integer
          description: Priority of the environment in a list of environments, the
            lower the value, the higher up in the list the environment will appear.
            Needs to be an integer
          example: 3
        projectCount:
          minimum: 0
          type: integer
          description: The number of projects with this environment
          nullable: true
          example: 10
        apiTokenCount:
          minimum: 0
          type: integer
          description: The number of API tokens for the project environment
          nullable: true
          example: 6
        enabledToggleCount:
          minimum: 0
          type: integer
          description: The number of enabled toggles for the project environment
          nullable: true
          example: 10
      additionalProperties: false
      description: A definition of the project environment
      example:
        projectCount: 10
        enabledToggleCount: 10
        protected: true
        sortOrder: 3
        name: my-dev-env
        type: development
        apiTokenCount: 6
        enabled: true
    environmentProjectSchema:
      required:
      - enabled
      - name
      - protected
      - sortOrder
      - type
      type: object
      properties:
        name:
          type: string
          description: The name of the environment
          example: development
        type:
          type: string
          description: The [type of environment](https://docs.getunleash.io/reference/environments#environment-types).
          example: production
        enabled:
          type: boolean
          description: '`true` if the environment is enabled for the project, otherwise
            `false`'
          example: true
        protected:
          type: boolean
          description: '`true` if the environment is protected, otherwise `false`.
            A *protected* environment can not be deleted.'
          example: false
        sortOrder:
          type: integer
          description: Priority of the environment in a list of environments, the
            lower the value, the higher up in the list the environment will appear
          example: 1
        projectApiTokenCount:
          minimum: 0
          type: integer
          description: The number of client and front-end API tokens that have access
            to this project
          example: 5
        projectEnabledToggleCount:
          minimum: 0
          type: integer
          description: The number of features enabled in this environment for this
            project
          example: 7
        defaultStrategy:
          $ref: '#/components/schemas/createFeatureStrategySchema'
      additionalProperties: false
      description: Describes a project's configuration in a given environment.
      example:
        projectApiTokenCount: 5
        protected: false
        sortOrder: 1
        projectEnabledToggleCount: 7
        name: development
        type: production
        defaultStrategy:
          sortOrder: 9999
          name: flexibleRollout
          disabled: false
          title: Gradual Rollout 25-Prod
          constraints:
          - values:
            - "1"
            - "2"
            inverted: false
            operator: IN
            contextName: appName
            caseInsensitive: false
          parameters:
            key: parameters
          segments:
          - 1
          - 2
        enabled: true
    environmentsSchema:
      required:
      - environments
      - version
      type: object
      properties:
        version:
          type: integer
        environments:
          type: array
          items:
            $ref: '#/components/schemas/environmentSchema'
      additionalProperties: false
      example:
        environments:
        - projectCount: 10
          enabledToggleCount: 10
          protected: true
          sortOrder: 3
          name: my-dev-env
          type: development
          apiTokenCount: 6
          enabled: true
        - projectCount: 10
          enabledToggleCount: 10
          protected: true
          sortOrder: 3
          name: my-dev-env
          type: development
          apiTokenCount: 6
          enabled: true
        version: 0
    environmentsProjectSchema:
      required:
      - environments
      - version
      type: object
      properties:
        version:
          type: integer
        environments:
          type: array
          items:
            $ref: '#/components/schemas/environmentProjectSchema'
      additionalProperties: false
      description: Environments defined for a given project
      example:
        environments:
        - projectApiTokenCount: 5
          protected: false
          sortOrder: 1
          projectEnabledToggleCount: 7
          name: development
          type: production
          defaultStrategy:
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            title: Gradual Rollout 25-Prod
            constraints:
            - values:
              - "1"
              - "2"
              inverted: false
              operator: IN
              contextName: appName
              caseInsensitive: false
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          enabled: true
        - projectApiTokenCount: 5
          protected: false
          sortOrder: 1
          projectEnabledToggleCount: 7
          name: development
          type: production
          defaultStrategy:
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            title: Gradual Rollout 25-Prod
            constraints:
            - values:
              - "1"
              - "2"
              inverted: false
              operator: IN
              contextName: appName
              caseInsensitive: false
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          enabled: true
        version: 0
    eventSchema:
      required:
      - createdAt
      - createdBy
      - id
      - type
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The ID of the event. An increasing natural number.
        createdAt:
          type: string
          description: The time the event happened as a RFC 3339-conformant timestamp.
          format: date-time
          example: 2023-07-05T12:56:00Z
        type:
          type: string
          description: What [type](https://docs.getunleash.io/reference/api/legacy/unleash/admin/events#event-type-description)
            of event this is
          example: feature-created
          enum:
          - application-created
          - feature-created
          - feature-deleted
          - feature-updated
          - feature-metadata-updated
          - feature-variants-updated
          - feature-environment-variants-updated
          - feature-project-change
          - feature-archived
          - feature-revived
          - feature-import
          - feature-tagged
          - feature-tag-import
          - feature-strategy-update
          - feature-strategy-add
          - feature-strategy-remove
          - drop-feature-tags
          - feature-untagged
          - feature-stale-on
          - feature-stale-off
          - drop-features
          - feature-environment-enabled
          - feature-environment-disabled
          - strategy-created
          - strategy-deleted
          - strategy-deprecated
          - strategy-reactivated
          - strategy-updated
          - strategy-import
          - drop-strategies
          - context-field-created
          - context-field-updated
          - context-field-deleted
          - project-access-added
          - project-created
          - project-updated
          - project-deleted
          - project-import
          - project-user-added
          - project-user-removed
          - project-user-role-changed
          - project-group-role-changed
          - project-group-added
          - project-group-removed
          - drop-projects
          - tag-created
          - tag-deleted
          - tag-import
          - drop-tags
          - tag-type-created
          - tag-type-deleted
          - tag-type-updated
          - tag-type-import
          - drop-tag-types
          - addon-config-created
          - addon-config-updated
          - addon-config-deleted
          - db-pool-update
          - user-created
          - user-updated
          - user-deleted
          - drop-environments
          - environment-import
          - segment-created
          - segment-updated
          - segment-deleted
          - group-created
          - group-updated
          - setting-created
          - setting-updated
          - setting-deleted
          - client-metrics
          - client-register
          - pat-created
          - pat-deleted
          - public-signup-token-created
          - public-signup-token-user-added
          - public-signup-token-updated
          - change-added
          - change-discarded
          - change-edited
          - api-token-created
          - api-token-updated
          - api-token-deleted
          - feature-favorited
          - feature-unfavorited
          - project-favorited
          - project-unfavorited
          - features-exported
          - features-imported
          - service-account-created
          - service-account-deleted
          - service-account-updated
        createdBy:
          type: string
          description: Which user created this event
          example: johndoe
        environment:
          type: string
          description: The feature toggle environment the event relates to, if applicable.
          nullable: true
          example: development
        project:
          type: string
          description: The project the event relates to, if applicable.
          nullable: true
          example: default
        featureName:
          type: string
          description: The name of the feature toggle the event relates to, if applicable.
          nullable: true
          example: my.first.feature
        data:
          $ref: '#/components/schemas/eventSchema_data'
        preData:
          $ref: '#/components/schemas/eventSchema_preData'
        tags:
          type: array
          description: Any tags related to the event, if applicable.
          nullable: true
          items:
            $ref: '#/components/schemas/tagSchema'
      additionalProperties: false
      description: An event describing something happening in the system
      example:
        createdAt: 2023-07-05T12:56:00Z
        environment: development
        data: '{"name":"new-feature","description":"Toggle description","type":"release","project":"my-project","stale":false,"variants":[],"createdAt":"2022-05-31T13:32:20.547Z","lastSeenAt":null,"impressionData":true}'
        createdBy: johndoe
        featureName: my.first.feature
        project: default
        id: 1
        type: feature-created
        preData: '{"name":"new-feature","description":"Toggle description","type":"release","project":"my-project","stale":false,"variants":[],"createdAt":"2022-05-31T13:32:20.547Z","lastSeenAt":null,"impressionData":true}'
        tags:
        - type: simple
          value: a-tag-value
        - type: simple
          value: a-tag-value
    eventsSchema:
      required:
      - events
      - version
      type: object
      properties:
        version:
          minimum: 1
          type: integer
          description: The api version of this response. A natural increasing number.
            Only increases if format changes
          example: 1
          enum:
          - 1
        events:
          type: array
          description: The list of events
          items:
            $ref: '#/components/schemas/eventSchema'
        totalEvents:
          minimum: 0
          type: integer
          description: The total count of events
          example: 842
      additionalProperties: false
      description: A list of events that has happened in the system
      example:
        totalEvents: 842
        version: 1
        events:
        - createdAt: 2023-07-05T12:56:00Z
          environment: development
          data: '{"name":"new-feature","description":"Toggle description","type":"release","project":"my-project","stale":false,"variants":[],"createdAt":"2022-05-31T13:32:20.547Z","lastSeenAt":null,"impressionData":true}'
          createdBy: johndoe
          featureName: my.first.feature
          project: default
          id: 1
          type: feature-created
          preData: '{"name":"new-feature","description":"Toggle description","type":"release","project":"my-project","stale":false,"variants":[],"createdAt":"2022-05-31T13:32:20.547Z","lastSeenAt":null,"impressionData":true}'
          tags:
          - type: simple
            value: a-tag-value
          - type: simple
            value: a-tag-value
        - createdAt: 2023-07-05T12:56:00Z
          environment: development
          data: '{"name":"new-feature","description":"Toggle description","type":"release","project":"my-project","stale":false,"variants":[],"createdAt":"2022-05-31T13:32:20.547Z","lastSeenAt":null,"impressionData":true}'
          createdBy: johndoe
          featureName: my.first.feature
          project: default
          id: 1
          type: feature-created
          preData: '{"name":"new-feature","description":"Toggle description","type":"release","project":"my-project","stale":false,"variants":[],"createdAt":"2022-05-31T13:32:20.547Z","lastSeenAt":null,"impressionData":true}'
          tags:
          - type: simple
            value: a-tag-value
          - type: simple
            value: a-tag-value
    exportResultSchema:
      required:
      - featureStrategies
      - features
      - tagTypes
      type: object
      properties:
        features:
          type: array
          description: All the exported features.
          example:
          - name: my-feature
            description: best feature ever
            type: release
            project: default
            stale: false
            impressionData: false
            archived: false
          items:
            $ref: '#/components/schemas/featureSchema'
        featureStrategies:
          type: array
          description: All strategy instances that are used by the exported features
            in the `features` list.
          example:
          - name: flexibleRollout
            id: 924974d7-8003-43ee-87eb-c5f887c06fd1
            featureName: my-feature
            title: Rollout 50%
            parameters:
              groupId: default
              rollout: "50"
              stickiness: random
            constraints: []
            disabled: false
            segments:
            - 1
          items:
            $ref: '#/components/schemas/featureStrategySchema'
        featureEnvironments:
          type: array
          description: Environment-specific configuration for all the features in
            the `features` list. Includes data such as whether the feature is enabled
            in the selected export environment, whether there are any variants assigned,
            etc.
          example:
          - enabled: true
            featureName: my-feature
            environment: development
            variants:
            - name: a
              weight: 500
              overrides: []
              stickiness: random
              weightType: variable
            - name: b
              weight: 500
              overrides: []
              stickiness: random
              weightType: variable
            name: variant-testing
          items:
            $ref: '#/components/schemas/featureEnvironmentSchema'
        contextFields:
          type: array
          description: A list of all the context fields that are in use by any of
            the strategies in the `featureStrategies` list.
          example:
          - name: appName
            description: Allows you to constrain on application name
            stickiness: false
            sortOrder: 2
            legalValues: []
          items:
            $ref: '#/components/schemas/contextFieldSchema'
        featureTags:
          type: array
          description: A list of all the tags that have been applied to any of the
            features in the `features` list.
          example:
          - featureName: my-feature
            tagType: simple
            tagValue: user-facing
          items:
            $ref: '#/components/schemas/featureTagSchema'
        segments:
          type: array
          description: A list of all the segments that are used by the strategies
            in the `featureStrategies` list.
          example:
          - id: 1
            name: new-segment-name
          items:
            $ref: '#/components/schemas/exportResultSchema_segments'
        tagTypes:
          type: array
          description: A list of all of the tag types that are used in the `featureTags`
            list.
          example:
          - name: simple
            description: Used to simplify filtering of features
            icon: '#'
          items:
            $ref: '#/components/schemas/tagTypeSchema'
      additionalProperties: false
      description: The result of the export operation, providing you with the feature
        toggle definitions, strategy definitions and the rest of the elements relevant
        to the features (tags, environments etc.)
      example:
        contextFields:
        - name: appName
          description: Allows you to constrain on application name
          stickiness: false
          sortOrder: 2
          legalValues: []
        features:
        - name: my-feature
          description: best feature ever
          type: release
          project: default
          stale: false
          impressionData: false
          archived: false
        featureEnvironments:
        - enabled: true
          featureName: my-feature
          environment: development
          variants:
          - name: a
            weight: 500
            overrides: []
            stickiness: random
            weightType: variable
          - name: b
            weight: 500
            overrides: []
            stickiness: random
            weightType: variable
          name: variant-testing
        featureTags:
        - featureName: my-feature
          tagType: simple
          tagValue: user-facing
        featureStrategies:
        - name: flexibleRollout
          id: 924974d7-8003-43ee-87eb-c5f887c06fd1
          featureName: my-feature
          title: Rollout 50%
          parameters:
            groupId: default
            rollout: "50"
            stickiness: random
          constraints: []
          disabled: false
          segments:
          - 1
        segments:
        - id: 1
          name: new-segment-name
        tagTypes:
        - name: simple
          description: Used to simplify filtering of features
          icon: '#'
    exportQuerySchema:
      required:
      - environment
      type: object
      properties:
        environment:
          type: string
          description: The environment to export from
          example: development
        downloadFile:
          type: boolean
          description: Whether to return a downloadable file
          example: true
      additionalProperties: true
      description: Available query parameters for  the [deprecated export/import](https://docs.getunleash.io/reference/deploy/import-export)
        functionality.
      oneOf:
      - required:
        - features
        properties:
          features:
            type: array
            description: Selects features to export by name.
            example:
            - MyAwesomeFeature
            items:
              minLength: 1
              type: string
      - required:
        - tag
        properties:
          tag:
            type: string
            description: Selects features to export by tag. Takes precedence over
              the features field.
            example: release
    featureEnvironmentMetricsSchema:
      required:
      - environment
      - "no"
      - timestamp
      - "yes"
      type: object
      properties:
        featureName:
          type: string
          description: The name of the feature
          example: my.special.feature
        appName:
          type: string
          description: The name of the application the SDK is being used in
          example: accounting
        environment:
          type: string
          description: Which environment the SDK is being used in
          example: development
        timestamp:
          $ref: '#/components/schemas/dateSchema'
        "yes":
          minimum: 0
          type: integer
          description: How many times the toggle evaluated to true
          example: 974
        "no":
          minimum: 0
          type: integer
          description: How many times the toggle evaluated to false
          example: 50
        variants:
          type: object
          additionalProperties:
            minimum: 0
            type: integer
          description: How many times each variant was returned
          example:
            variantA: 15
            variantB: 25
            variantC: 5
      additionalProperties: false
      description: How many times `feautreName` was evaluated to `true` (yes) and
        `false` (no) for `appName` in `environmnet`
      example:
        "no": 50
        environment: development
        featureName: my.special.feature
        appName: accounting
        "yes": 974
        variants:
          variantA: 15
          variantB: 25
          variantC: 5
        timestamp: ""
    featureEnvironmentSchema:
      required:
      - enabled
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the environment
          example: my-dev-env
        featureName:
          type: string
          example: disable-comments
        environment:
          type: string
        type:
          type: string
          description: The type of the environment
          example: development
        enabled:
          type: boolean
          description: '`true` if the feature is enabled for the environment, otherwise
            `false`.'
          example: true
        sortOrder:
          type: number
          description: The sort order of the feature environment in the feature environments
            list
          example: 3
        variantCount:
          type: number
          description: The number of defined variants
        strategies:
          type: array
          description: A list of activation strategies for the feature environment
          items:
            $ref: '#/components/schemas/featureStrategySchema'
        variants:
          type: array
          description: A list of variants for the feature environment
          items:
            $ref: '#/components/schemas/variantSchema'
      additionalProperties: false
      description: A detailed description of the feature environment
      example:
        environment: environment
        featureName: disable-comments
        strategies:
        - featureName: myAwesomeFeature
          sortOrder: 9999
          name: flexibleRollout
          disabled: false
          id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
          title: Gradual Rollout 25-Prod
          constraints:
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          parameters:
            key: parameters
          segments:
          - 1
          - 2
        - featureName: myAwesomeFeature
          sortOrder: 9999
          name: flexibleRollout
          disabled: false
          id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
          title: Gradual Rollout 25-Prod
          constraints:
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          parameters:
            key: parameters
          segments:
          - 1
          - 2
        sortOrder: 3
        name: my-dev-env
        variants:
        - weightType: fix
          payload: '{"type":"json","value":"{color: red}"}'
          stickiness: custom.context.field
          name: blue_group
          weight: 602.7456183070403
          overrides:
          - contextName: userId
            values:
            - red
            - blue
          - contextName: userId
            values:
            - red
            - blue
        - weightType: fix
          payload: '{"type":"json","value":"{color: red}"}'
          stickiness: custom.context.field
          name: blue_group
          weight: 602.7456183070403
          overrides:
          - contextName: userId
            values:
            - red
            - blue
          - contextName: userId
            values:
            - red
            - blue
        type: development
        enabled: true
        variantCount: 0.8008281904610115
    featureEventsSchema:
      required:
      - events
      type: object
      properties:
        version:
          minimum: 1
          type: integer
          description: An API versioning number
          example: 1
          enum:
          - 1
        toggleName:
          type: string
          description: The name of the feature toggle these events relate to
          example: my.first.feature.toggle
        events:
          type: array
          description: The list of events
          items:
            $ref: '#/components/schemas/eventSchema'
        totalEvents:
          minimum: 0
          type: integer
          description: How many events are there for this feature toggle
          example: 13
      additionalProperties: false
      description: One or more events happening to a specific feature toggle
      example:
        toggleName: my.first.feature.toggle
        totalEvents: 13
        version: 1
        events:
        - createdAt: 2023-07-05T12:56:00Z
          environment: development
          data: '{"name":"new-feature","description":"Toggle description","type":"release","project":"my-project","stale":false,"variants":[],"createdAt":"2022-05-31T13:32:20.547Z","lastSeenAt":null,"impressionData":true}'
          createdBy: johndoe
          featureName: my.first.feature
          project: default
          id: 1
          type: feature-created
          preData: '{"name":"new-feature","description":"Toggle description","type":"release","project":"my-project","stale":false,"variants":[],"createdAt":"2022-05-31T13:32:20.547Z","lastSeenAt":null,"impressionData":true}'
          tags:
          - type: simple
            value: a-tag-value
          - type: simple
            value: a-tag-value
        - createdAt: 2023-07-05T12:56:00Z
          environment: development
          data: '{"name":"new-feature","description":"Toggle description","type":"release","project":"my-project","stale":false,"variants":[],"createdAt":"2022-05-31T13:32:20.547Z","lastSeenAt":null,"impressionData":true}'
          createdBy: johndoe
          featureName: my.first.feature
          project: default
          id: 1
          type: feature-created
          preData: '{"name":"new-feature","description":"Toggle description","type":"release","project":"my-project","stale":false,"variants":[],"createdAt":"2022-05-31T13:32:20.547Z","lastSeenAt":null,"impressionData":true}'
          tags:
          - type: simple
            value: a-tag-value
          - type: simple
            value: a-tag-value
    featureMetricsSchema:
      required:
      - data
      - maturity
      - version
      type: object
      properties:
        version:
          minimum: 1
          type: integer
          description: The version of this schema
        maturity:
          type: string
          description: The maturity level of this API (alpha, beta, stable, deprecated)
          example: stable
        data:
          type: array
          description: Metrics gathered per environment
          items:
            $ref: '#/components/schemas/featureEnvironmentMetricsSchema'
      additionalProperties: false
      description: A batch of feature metrics
      example:
        data:
        - "no": 50
          environment: development
          featureName: my.special.feature
          appName: accounting
          "yes": 974
          variants:
            variantA: 15
            variantB: 25
            variantC: 5
          timestamp: ""
        - "no": 50
          environment: development
          featureName: my.special.feature
          appName: accounting
          "yes": 974
          variants:
            variantA: 15
            variantB: 25
            variantC: 5
          timestamp: ""
        maturity: stable
        version: 1
    featureSchema:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Unique feature name
          example: disable-comments
        type:
          type: string
          description: Type of the toggle e.g. experiment, kill-switch, release, operational,
            permission
          example: kill-switch
        description:
          type: string
          description: Detailed description of the feature
          nullable: true
          example: Controls disabling of the comments section in case of an incident
        archived:
          type: boolean
          description: '`true` if the feature is archived'
          example: true
        project:
          type: string
          description: Name of the project the feature belongs to
          example: dx-squad
        enabled:
          type: boolean
          description: '`true` if the feature is enabled, otherwise `false`.'
          example: true
        stale:
          type: boolean
          description: '`true` if the feature is stale based on the age and feature
            type, otherwise `false`.'
          example: false
        favorite:
          type: boolean
          description: '`true` if the feature was favorited, otherwise `false`.'
          example: true
        impressionData:
          type: boolean
          description: '`true` if the impression data collection is enabled for the
            feature, otherwise `false`.'
          example: false
        createdAt:
          type: string
          description: The date the feature was created
          format: date-time
          nullable: true
          example: 2023-01-28T15:21:39.975Z
        archivedAt:
          type: string
          description: The date the feature was archived
          format: date-time
          nullable: true
          example: 2023-01-29T15:21:39.975Z
        lastSeenAt:
          type: string
          description: The date when metrics where last collected for the feature
          format: date-time
          nullable: true
          example: 2023-01-28T16:21:39.975Z
        environments:
          type: array
          description: The list of environments where the feature can be used
          items:
            $ref: '#/components/schemas/featureEnvironmentSchema'
        variants:
          type: array
          description: The list of feature variants
          deprecated: true
          items:
            $ref: '#/components/schemas/variantSchema'
        strategies:
          type: array
          description: This is a legacy field that will be deprecated
          deprecated: true
          items:
            type: object
        tags:
          type: array
          description: The list of feature tags
          nullable: true
          items:
            $ref: '#/components/schemas/tagSchema'
      additionalProperties: false
      description: A feature toggle definition
      example:
        lastSeenAt: 2023-01-28T16:21:39.975Z
        impressionData: false
        environments:
        - environment: environment
          featureName: disable-comments
          strategies:
          - featureName: myAwesomeFeature
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
            title: Gradual Rollout 25-Prod
            constraints:
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          - featureName: myAwesomeFeature
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
            title: Gradual Rollout 25-Prod
            constraints:
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          sortOrder: 3
          name: my-dev-env
          variants:
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          type: development
          enabled: true
          variantCount: 0.8008281904610115
        - environment: environment
          featureName: disable-comments
          strategies:
          - featureName: myAwesomeFeature
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
            title: Gradual Rollout 25-Prod
            constraints:
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          - featureName: myAwesomeFeature
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
            title: Gradual Rollout 25-Prod
            constraints:
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          sortOrder: 3
          name: my-dev-env
          variants:
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          type: development
          enabled: true
          variantCount: 0.8008281904610115
        strategies:
        - {}
        - {}
        description: Controls disabling of the comments section in case of an incident
        project: dx-squad
        variants:
        - null
        - null
        type: kill-switch
        enabled: true
        tags:
        - type: simple
          value: a-tag-value
        - type: simple
          value: a-tag-value
        archived: true
        createdAt: 2023-01-28T15:21:39.975Z
        archivedAt: 2023-01-29T15:21:39.975Z
        stale: false
        name: disable-comments
        favorite: true
    featuresSchema:
      required:
      - features
      - version
      type: object
      properties:
        version:
          type: integer
        features:
          type: array
          items:
            $ref: '#/components/schemas/featureSchema'
      additionalProperties: false
      example:
        features:
        - lastSeenAt: 2023-01-28T16:21:39.975Z
          impressionData: false
          environments:
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          strategies:
          - {}
          - {}
          description: Controls disabling of the comments section in case of an incident
          project: dx-squad
          variants:
          - null
          - null
          type: kill-switch
          enabled: true
          tags:
          - type: simple
            value: a-tag-value
          - type: simple
            value: a-tag-value
          archived: true
          createdAt: 2023-01-28T15:21:39.975Z
          archivedAt: 2023-01-29T15:21:39.975Z
          stale: false
          name: disable-comments
          favorite: true
        - lastSeenAt: 2023-01-28T16:21:39.975Z
          impressionData: false
          environments:
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          strategies:
          - {}
          - {}
          description: Controls disabling of the comments section in case of an incident
          project: dx-squad
          variants:
          - null
          - null
          type: kill-switch
          enabled: true
          tags:
          - type: simple
            value: a-tag-value
          - type: simple
            value: a-tag-value
          archived: true
          createdAt: 2023-01-28T15:21:39.975Z
          archivedAt: 2023-01-29T15:21:39.975Z
          stale: false
          name: disable-comments
          favorite: true
        version: 0
    featureStrategySchema:
      required:
      - name
      type: object
      properties:
        id:
          type: string
          description: A uuid for the feature strategy
          example: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
        name:
          type: string
          description: The name or type of strategy
          example: flexibleRollout
        title:
          type: string
          description: A descriptive title for the strategy
          nullable: true
          example: Gradual Rollout 25-Prod
        disabled:
          type: boolean
          description: A toggle to disable the strategy. defaults to false. Disabled
            strategies are not evaluated or returned to the SDKs
          nullable: true
          example: false
        featureName:
          type: string
          description: The name or feature the strategy is attached to
          example: myAwesomeFeature
        sortOrder:
          type: number
          description: The order of the strategy in the list
          example: 9999
        segments:
          type: array
          description: A list of segment ids attached to the strategy
          example:
          - 1
          - 2
          items:
            type: number
        constraints:
          type: array
          description: A list of the constraints attached to the strategy. See https://docs.getunleash.io/reference/strategy-constraints
          items:
            $ref: '#/components/schemas/constraintSchema'
        parameters:
          $ref: '#/components/schemas/parametersSchema'
      additionalProperties: false
      description: A single activation strategy configuration schema for a feature
      example:
        featureName: myAwesomeFeature
        sortOrder: 9999
        name: flexibleRollout
        disabled: false
        id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
        title: Gradual Rollout 25-Prod
        constraints:
        - contextName: appName
          values:
          - my-app
          - my-other-app
          caseInsensitive: false
          inverted: false
          value: my-app
          operator: IN
        - contextName: appName
          values:
          - my-app
          - my-other-app
          caseInsensitive: false
          inverted: false
          value: my-app
          operator: IN
        parameters:
          key: parameters
        segments:
        - 1
        - 2
    featureStrategySegmentSchema:
      required:
      - featureStrategyId
      - segmentId
      type: object
      properties:
        segmentId:
          type: integer
        featureStrategyId:
          type: string
      additionalProperties: false
      example:
        segmentId: 1
        featureStrategyId: featureStrategyId
    featureTagSchema:
      required:
      - featureName
      - tagValue
      type: object
      properties:
        featureName:
          type: string
          description: The name of the feature this tag is applied to
          example: my-feature
        tagType:
          type: string
          description: The [type](https://docs.getunleash.io/reference/tags#tag-types
            tag types) of the tag
          example: simple
        tagValue:
          type: string
          description: The value of the tag
          example: my-tag
        type:
          type: string
          description: The [type](https://docs.getunleash.io/reference/tags#tag-types
            tag types) of the tag. This property is deprecated and will be removed
            in a future version of Unleash. Superseded by the `tagType` property.
          deprecated: true
        value:
          type: string
          description: The value of the tag. This property is deprecated and will
            be removed in a future version of Unleash. Superseded by the `tagValue`
            property.
          deprecated: true
      additionalProperties: false
      description: Describes a tag applied to a feature
      example:
        featureName: my-feature
        tagValue: my-tag
        tagType: simple
        type: type
        value: value
    featureTypeSchema:
      required:
      - description
      - id
      - lifetimeDays
      - name
      type: object
      properties:
        id:
          type: string
          description: The identifier of this feature toggle type.
          example: kill-switch
        name:
          type: string
          description: The display name of this feature toggle type.
          example: Kill switch
        description:
          type: string
          description: A description of what this feature toggle type is intended
            to be used for.
          example: Kill switch feature toggles are used to quickly turn on or off
            critical functionality in your system.
        lifetimeDays:
          minimum: 0
          type: integer
          description: How many days it takes before a feature toggle of this typed
            is flagged as [potentially stale](https://docs.getunleash.io/reference/technical-debt#stale-and-potentially-stale-toggles)
            by Unleash. If this value is `null`, Unleash will never mark it as potentially
            stale.
          nullable: true
          example: 40
      additionalProperties: false
      description: A [feature toggle type](https://docs.getunleash.io/reference/feature-toggle-types).
    featureTypesSchema:
      required:
      - types
      - version
      type: object
      properties:
        version:
          type: integer
          description: The schema version used to describe the feature toggle types
            listed in the `types` property.
          example: 1
          enum:
          - 1
        types:
          type: array
          description: The list of feature toggle types.
          example:
          - id: release
            name: Release
            description: Release feature toggles are used to release new features.
            lifetimeDays: 40
          - id: experiment
            name: Experiment
            description: Experiment feature toggles are used to test and verify multiple
              different versions of a feature.
            lifetimeDays: 40
          - id: operational
            name: Operational
            description: Operational feature toggles are used to control aspects of
              a rollout.
            lifetimeDays: 7
          - id: kill-switch
            name: Kill switch
            description: Kill switch feature toggles are used to quickly turn on or
              off critical functionality in your system.
            lifetimeDays: null
          - id: permission
            name: Permission
            description: Permission feature toggles are used to control permissions
              in your system.
            lifetimeDays: null
          items:
            $ref: '#/components/schemas/featureTypeSchema'
      additionalProperties: false
      description: A list of [feature toggle types](https://docs.getunleash.io/reference/feature-toggle-types)
        and the schema version used to represent those feature types.
      example:
        types:
        - id: release
          name: Release
          description: Release feature toggles are used to release new features.
          lifetimeDays: 40
        - id: experiment
          name: Experiment
          description: Experiment feature toggles are used to test and verify multiple
            different versions of a feature.
          lifetimeDays: 40
        - id: operational
          name: Operational
          description: Operational feature toggles are used to control aspects of
            a rollout.
          lifetimeDays: 7
        - id: kill-switch
          name: Kill switch
          description: Kill switch feature toggles are used to quickly turn on or
            off critical functionality in your system.
          lifetimeDays: null
        - id: permission
          name: Permission
          description: Permission feature toggles are used to control permissions
            in your system.
          lifetimeDays: null
        version: 1
    featureUsageSchema:
      required:
      - featureName
      - lastHourUsage
      - maturity
      - seenApplications
      - version
      type: object
      properties:
        version:
          minimum: 1
          type: integer
          description: The version of this schema
        maturity:
          type: string
          description: The maturity level of this API (alpha, beta, stable, deprecated)
          example: stable
        featureName:
          type: string
          description: The name of the feature
          example: my.special.feature
        lastHourUsage:
          type: array
          description: Last hour statistics. Accumulated per feature per environment.
            Contains counts for evaluations to true (yes) and to false (no)
          items:
            $ref: '#/components/schemas/featureEnvironmentMetricsSchema'
        seenApplications:
          type: array
          description: A list of applications seen using this feature
          example:
          - accounting
          - billing
          - booking
          items:
            type: string
      additionalProperties: false
      description: How many applications have seen this feature toggle, as well as
        how this feature was evaluated the last hour
      example:
        seenApplications:
        - accounting
        - billing
        - booking
        maturity: stable
        featureName: my.special.feature
        lastHourUsage:
        - "no": 50
          environment: development
          featureName: my.special.feature
          appName: accounting
          "yes": 974
          variants:
            variantA: 15
            variantB: 25
            variantC: 5
          timestamp: ""
        - "no": 50
          environment: development
          featureName: my.special.feature
          appName: accounting
          "yes": 974
          variants:
            variantA: 15
            variantB: 25
            variantC: 5
          timestamp: ""
        version: 1
    featureVariantsSchema:
      required:
      - variants
      - version
      type: object
      properties:
        version:
          type: integer
        variants:
          type: array
          items:
            $ref: '#/components/schemas/variantSchema'
      additionalProperties: false
      example:
        variants:
        - weightType: fix
          payload: '{"type":"json","value":"{color: red}"}'
          stickiness: custom.context.field
          name: blue_group
          weight: 602.7456183070403
          overrides:
          - contextName: userId
            values:
            - red
            - blue
          - contextName: userId
            values:
            - red
            - blue
        - weightType: fix
          payload: '{"type":"json","value":"{color: red}"}'
          stickiness: custom.context.field
          name: blue_group
          weight: 602.7456183070403
          overrides:
          - contextName: userId
            values:
            - red
            - blue
          - contextName: userId
            values:
            - red
            - blue
        version: 0
    feedbackSchema:
      type: object
      properties:
        userId:
          type: integer
          description: Identifier of the current user giving feedback
          example: 2
        feedbackId:
          type: string
          description: The name of the feedback session
          example: pnps
        neverShow:
          type: boolean
          description: '`true` when user opts-in to never show the feedback again.'
          example: false
        given:
          type: string
          description: When this feedback was given
          format: date-time
          nullable: true
          example: 2023-07-06T08:29:21.282Z
      additionalProperties: false
      description: User feedback information
      example:
        given: 2023-07-06T08:29:21.282Z
        feedbackId: pnps
        userId: 2
        neverShow: false
    groupSchema:
      required:
      - name
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        description:
          type: string
          nullable: true
        mappingsSSO:
          type: array
          items:
            type: string
        rootRole:
          type: number
          description: A role id that is used as the root role for all users in this
            group. This can be either the id of the Editor or Admin role.
          nullable: true
        createdBy:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        users:
          type: array
          items:
            $ref: '#/components/schemas/groupUserModelSchema'
        projects:
          type: array
          items:
            type: string
      additionalProperties: true
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        projects:
        - projects
        - projects
        rootRole: 6.027456183070403
        createdBy: createdBy
        mappingsSSO:
        - mappingsSSO
        - mappingsSSO
        name: name
        description: description
        id: 0.8008281904610115
        users:
        - createdBy: createdBy
          joinedAt: 2000-01-23T04:56:07.000+00:00
          user:
            loginAttempts: 3
            inviteLink: http://localhost:4242/invite-link/some-secret
            accountType: User
            isAPI: true
            createdAt: 2023-06-30T11:41:00.123Z
            seenAt: 2023-06-30T11:42:00.345Z
            rootRole: 1
            emailSent: false
            permissions:
            - permissions
            - permissions
            imageUrl: https://example.com/242x200.png
            name: User
            id: 123
            email: user@example.com
            username: hunter
        - createdBy: createdBy
          joinedAt: 2000-01-23T04:56:07.000+00:00
          user:
            loginAttempts: 3
            inviteLink: http://localhost:4242/invite-link/some-secret
            accountType: User
            isAPI: true
            createdAt: 2023-06-30T11:41:00.123Z
            seenAt: 2023-06-30T11:42:00.345Z
            rootRole: 1
            emailSent: false
            permissions:
            - permissions
            - permissions
            imageUrl: https://example.com/242x200.png
            name: User
            id: 123
            email: user@example.com
            username: hunter
    groupsSchema:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/groupSchema'
      additionalProperties: false
      example:
        groups:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          projects:
          - projects
          - projects
          rootRole: 6.027456183070403
          createdBy: createdBy
          mappingsSSO:
          - mappingsSSO
          - mappingsSSO
          name: name
          description: description
          id: 0.8008281904610115
          users:
          - createdBy: createdBy
            joinedAt: 2000-01-23T04:56:07.000+00:00
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
          - createdBy: createdBy
            joinedAt: 2000-01-23T04:56:07.000+00:00
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
        - createdAt: 2000-01-23T04:56:07.000+00:00
          projects:
          - projects
          - projects
          rootRole: 6.027456183070403
          createdBy: createdBy
          mappingsSSO:
          - mappingsSSO
          - mappingsSSO
          name: name
          description: description
          id: 0.8008281904610115
          users:
          - createdBy: createdBy
            joinedAt: 2000-01-23T04:56:07.000+00:00
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
          - createdBy: createdBy
            joinedAt: 2000-01-23T04:56:07.000+00:00
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
    groupUserModelSchema:
      required:
      - user
      type: object
      properties:
        joinedAt:
          type: string
          format: date-time
        createdBy:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/userSchema'
      additionalProperties: false
      example:
        createdBy: createdBy
        joinedAt: 2000-01-23T04:56:07.000+00:00
        user:
          loginAttempts: 3
          inviteLink: http://localhost:4242/invite-link/some-secret
          accountType: User
          isAPI: true
          createdAt: 2023-06-30T11:41:00.123Z
          seenAt: 2023-06-30T11:42:00.345Z
          rootRole: 1
          emailSent: false
          permissions:
          - permissions
          - permissions
          imageUrl: https://example.com/242x200.png
          name: User
          id: 123
          email: user@example.com
          username: hunter
    healthCheckSchema:
      required:
      - health
      type: object
      properties:
        health:
          type: string
          description: The state this Unleash instance is in. GOOD if everything is
            ok, BAD if the instance should be restarted
          example: GOOD
          enum:
          - GOOD
          - BAD
      additionalProperties: false
      description: Used by service orchestrators to decide whether this Unleash instance
        should be marked as healthy or unhealthy
      example:
        health: GOOD
    healthOverviewSchema:
      required:
      - defaultStickiness
      - environments
      - features
      - health
      - members
      - mode
      - name
      - version
      type: object
      properties:
        version:
          type: integer
          description: The project overview version.
          example: 1
        name:
          type: string
          description: The project's name
          example: enterprisegrowth
        description:
          type: string
          description: The project's description
          nullable: true
          example: The project for all things enterprisegrowth
        defaultStickiness:
          type: string
          description: A default stickiness for the project affecting the default
            stickiness value for variants and Gradual Rollout strategy
          example: userId
        mode:
          type: string
          description: The project's [collaboration mode](https://docs.getunleash.io/reference/project-collaboration-mode).
            Determines whether non-project members can submit change requests or not.
          example: open
          enum:
          - open
          - protected
        members:
          minimum: 0
          type: integer
          description: The number of users/members in the project.
          example: 5
        health:
          type: integer
          description: The overall [health rating](https://docs.getunleash.io/reference/technical-debt#health-rating)
            of the project.
          example: 95
        environments:
          type: array
          description: An array containing the names of all the environments configured
            for the project.
          items:
            $ref: '#/components/schemas/projectEnvironmentSchema'
        features:
          type: array
          description: An array containing an overview of all the features of the
            project and their individual status
          items:
            $ref: '#/components/schemas/featureSchema'
        updatedAt:
          type: string
          description: When the project was last updated.
          format: date-time
          nullable: true
          example: 2023-04-19T08:15:14Z
        createdAt:
          type: string
          description: When the project was last updated.
          format: date-time
          nullable: true
          example: 2023-04-19T08:15:14Z
        favorite:
          type: boolean
          description: Indicates if the project has been marked as a favorite by the
            current user requesting the project health overview.
          example: true
        stats:
          $ref: '#/components/schemas/projectStatsSchema'
      additionalProperties: false
      description: An overview of a project's stats and its health as described in
        the documentation on [technical debt](https://docs.getunleash.io/reference/technical-debt)
    healthReportSchema:
      required:
      - activeCount
      - defaultStickiness
      - environments
      - features
      - health
      - members
      - mode
      - name
      - potentiallyStaleCount
      - staleCount
      - version
      type: object
      properties:
        version:
          type: integer
          description: The project overview version.
          example: 1
        name:
          type: string
          description: The project's name
          example: enterprisegrowth
        description:
          type: string
          description: The project's description
          nullable: true
          example: The project for all things enterprisegrowth
        defaultStickiness:
          type: string
          description: A default stickiness for the project affecting the default
            stickiness value for variants and Gradual Rollout strategy
          example: userId
        mode:
          type: string
          description: The project's [collaboration mode](https://docs.getunleash.io/reference/project-collaboration-mode).
            Determines whether non-project members can submit change requests or not.
          example: open
          enum:
          - open
          - protected
        members:
          minimum: 0
          type: integer
          description: The number of users/members in the project.
          example: 5
        health:
          type: integer
          description: The overall [health rating](https://docs.getunleash.io/reference/technical-debt#health-rating)
            of the project.
          example: 95
        environments:
          type: array
          description: An array containing the names of all the environments configured
            for the project.
          items:
            $ref: '#/components/schemas/projectEnvironmentSchema'
        features:
          type: array
          description: An array containing an overview of all the features of the
            project and their individual status
          items:
            $ref: '#/components/schemas/featureSchema'
        updatedAt:
          type: string
          description: When the project was last updated.
          format: date-time
          nullable: true
          example: 2023-04-19T08:15:14Z
        createdAt:
          type: string
          description: When the project was last updated.
          format: date-time
          nullable: true
          example: 2023-04-19T08:15:14Z
        favorite:
          type: boolean
          description: Indicates if the project has been marked as a favorite by the
            current user requesting the project health overview.
          example: true
        stats:
          $ref: '#/components/schemas/projectStatsSchema'
        potentiallyStaleCount:
          type: number
          description: The number of potentially stale feature toggles.
          example: 5
        activeCount:
          type: number
          description: The number of active feature toggles.
          example: 2
        staleCount:
          type: number
          description: The number of stale feature toggles.
          example: 10
      additionalProperties: false
      description: A report of the current health of the requested project, with datapoints
        like counters of currently active, stale, and potentially stale feature toggles.
      example:
        activeCount: 2
        environments:
        - environment: development
          defaultStrategy:
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            title: Gradual Rollout 25-Prod
            constraints:
            - values:
              - "1"
              - "2"
              inverted: false
              operator: IN
              contextName: appName
              caseInsensitive: false
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          changeRequestsEnabled: true
        - environment: development
          defaultStrategy:
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            title: Gradual Rollout 25-Prod
            constraints:
            - values:
              - "1"
              - "2"
              inverted: false
              operator: IN
              contextName: appName
              caseInsensitive: false
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          changeRequestsEnabled: true
        staleCount: 10
        defaultStickiness: userId
        description: The project for all things enterprisegrowth
        health: 95
        potentiallyStaleCount: 5
        version: 1
        mode: open
        features:
        - lastSeenAt: 2023-01-28T16:21:39.975Z
          impressionData: false
          environments:
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          strategies:
          - {}
          - {}
          description: Controls disabling of the comments section in case of an incident
          project: dx-squad
          variants:
          - null
          - null
          type: kill-switch
          enabled: true
          tags:
          - type: simple
            value: a-tag-value
          - type: simple
            value: a-tag-value
          archived: true
          createdAt: 2023-01-28T15:21:39.975Z
          archivedAt: 2023-01-29T15:21:39.975Z
          stale: false
          name: disable-comments
          favorite: true
        - lastSeenAt: 2023-01-28T16:21:39.975Z
          impressionData: false
          environments:
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          strategies:
          - {}
          - {}
          description: Controls disabling of the comments section in case of an incident
          project: dx-squad
          variants:
          - null
          - null
          type: kill-switch
          enabled: true
          tags:
          - type: simple
            value: a-tag-value
          - type: simple
            value: a-tag-value
          archived: true
          createdAt: 2023-01-28T15:21:39.975Z
          archivedAt: 2023-01-29T15:21:39.975Z
          stale: false
          name: disable-comments
          favorite: true
        createdAt: 2023-04-19T08:15:14Z
        stats:
          archivedCurrentWindow: 5
          projectMembersAddedCurrentWindow: 1
          avgTimeToProdCurrentWindow: 10
          archivedPastWindow: 5
          createdCurrentWindow: 15
          createdPastWindow: 15
          projectActivityCurrentWindow: 100
          projectActivityPastWindow: 100
        members: 5
        name: enterprisegrowth
        favorite: true
        updatedAt: 2023-04-19T08:15:14Z
    idSchema:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: User email
          example: user@example.com
      additionalProperties: false
      description: Email id used for password reset
    instanceAdminStatsSchema:
      required:
      - instanceId
      type: object
      properties:
        instanceId:
          type: string
          description: A unique identifier for this instance. Generated by the database
            migration scripts at first run. Typically a UUID.
          example: ed3861ae-78f9-4e8c-8e57-b57efc15f82b
        timestamp:
          type: string
          description: When these statistics were produced
          format: date-time
          nullable: true
          example: 2023-06-12T12:25:06Z
        versionOSS:
          type: string
          description: The version of Unleash OSS that is bundled in this instance
          example: 5.1.7
        versionEnterprise:
          type: string
          description: The version of Unleash Enterprise that is bundled in this instance
          example: 5.1.7
        users:
          minimum: 0
          type: number
          description: The number of users this instance has
          example: 8
        featureToggles:
          minimum: 0
          type: number
          description: The number of feature-toggles this instance has
          example: 47
        projects:
          minimum: 0
          type: number
          description: The number of projects defined in this instance.
          example: 3
        contextFields:
          minimum: 0
          type: number
          description: The number of context fields defined in this instance.
          example: 7
        roles:
          minimum: 0
          type: number
          description: The number of roles defined in this instance
          example: 5
        groups:
          minimum: 0
          type: number
          description: The number of groups defined in this instance
          example: 12
        environments:
          minimum: 0
          type: number
          description: The number of environments defined in this instance
          example: 3
        segments:
          minimum: 0
          type: number
          description: The number of segments defined in this instance
          example: 19
        strategies:
          minimum: 0
          type: number
          description: The number of strategies defined in this instance
          example: 8
        SAMLenabled:
          type: boolean
          description: Whether or not SAML authentication is enabled for this instance
          example: false
        OIDCenabled:
          type: boolean
          description: Whether or not OIDC authentication is enabled for this instance
          example: true
        clientApps:
          type: array
          description: A count of connected applications in the last week, last month
            and all time since last restart
          items:
            $ref: '#/components/schemas/instanceAdminStatsSchema_clientApps'
        sum:
          type: string
          description: A SHA-256 checksum of the instance statistics to be used to
            verify that the data in this object has not been tampered with
          example: b023323477abb1eb145bebf3cdb30a1c2063e3edc1f7ae474ed8ed6c80de9a3b
      additionalProperties: false
      description: Information about an instance and statistics about usage of various
        features of Unleash
      example:
        contextFields: 7
        projects: 3
        environments: 3
        strategies: 8
        roles: 5
        versionEnterprise: 5.1.7
        groups: 12
        sum: b023323477abb1eb145bebf3cdb30a1c2063e3edc1f7ae474ed8ed6c80de9a3b
        users: 8
        segments: 19
        clientApps:
        - count: 1
          range: 30d
        - count: 1
          range: 30d
        instanceId: ed3861ae-78f9-4e8c-8e57-b57efc15f82b
        OIDCenabled: true
        featureToggles: 47
        SAMLenabled: false
        timestamp: 2023-06-12T12:25:06Z
        versionOSS: 5.1.7
    legalValueSchema:
      required:
      - value
      type: object
      properties:
        value:
          type: string
          description: The valid value
          example: '#c154c1'
        description:
          type: string
          description: Describes this specific legal value
          example: Deep fuchsia
      additionalProperties: false
      description: Describes a legal value. Typically used to limit possible values
        for contextFields or strategy properties
      example:
        description: Deep fuchsia
        value: '#c154c1'
    loginSchema:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: The username trying to log in
          example: user
        password:
          type: string
          description: The password of the user trying to log in
          example: hunter2
      additionalProperties: false
      description: A username/password login request
    maintenanceSchema:
      required:
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
          example: true
      additionalProperties: false
      example:
        enabled: true
    toggleMaintenanceSchema:
      required:
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
          example: true
    meSchema:
      required:
      - feedback
      - permissions
      - splash
      - user
      type: object
      properties:
        user:
          $ref: '#/components/schemas/userSchema'
        permissions:
          type: array
          description: User permissions for projects and environments
          items:
            $ref: '#/components/schemas/permissionSchema'
        feedback:
          type: array
          description: User feedback information
          items:
            $ref: '#/components/schemas/feedbackSchema'
        splash:
          type: object
          additionalProperties:
            type: boolean
          description: Splash screen configuration
      additionalProperties: false
      description: Detailed user information
      example:
        feedback:
        - given: 2023-07-06T08:29:21.282Z
          feedbackId: pnps
          userId: 2
          neverShow: false
        - given: 2023-07-06T08:29:21.282Z
          feedbackId: pnps
          userId: 2
          neverShow: false
        permissions:
        - environment: development
          project: my-project
          permission: UPDATE_FEATURE_STRATEGY
        - environment: development
          project: my-project
          permission: UPDATE_FEATURE_STRATEGY
        user:
          loginAttempts: 3
          inviteLink: http://localhost:4242/invite-link/some-secret
          accountType: User
          isAPI: true
          createdAt: 2023-06-30T11:41:00.123Z
          seenAt: 2023-06-30T11:42:00.345Z
          rootRole: 1
          emailSent: false
          permissions:
          - permissions
          - permissions
          imageUrl: https://example.com/242x200.png
          name: User
          id: 123
          email: user@example.com
          username: hunter
        splash:
          key: true
    nameSchema:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the represented object.
          example: betaUser
      additionalProperties: false
      description: An object with a name
    overrideSchema:
      required:
      - contextName
      - values
      type: object
      properties:
        contextName:
          type: string
          description: The name of the context field used to determine overrides
          example: userId
        values:
          type: array
          description: Which values that should be overriden
          example:
          - red
          - blue
          items:
            type: string
      additionalProperties: false
      description: An override for deciding which variant should be assigned to a
        user based on the context name
      example:
        contextName: userId
        values:
        - red
        - blue
    parametersSchema:
      type: object
      additionalProperties:
        type: string
      description: A list of parameters for a strategy
    passwordSchema:
      required:
      - password
      type: object
      properties:
        password:
          type: string
          description: The new password to change or validate.
          example: k!5As3HquUrQ
        oldPassword:
          type: string
          description: The old password the user is changing. This field is for the
            non-admin users changing their own password.
          example: Oldk!5As3HquUrQ
        confirmPassword:
          type: string
          description: The confirmation of the new password. This field is for the
            non-admin users changing their own password.
          example: k!5As3HquUrQ
      additionalProperties: false
      description: Fields used to create new password or update old password
    patchesSchema:
      type: array
      items:
        $ref: '#/components/schemas/patchSchema'
    patchSchema:
      required:
      - op
      - path
      type: object
      properties:
        path:
          type: string
        op:
          type: string
          enum:
          - add
          - remove
          - replace
          - copy
          - move
        from:
          type: string
        value: {}
    patSchema:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: 'The unique identification number for this Personal Access
            Token. (This property is set by Unleash when the token is created and
            cannot be set manually: if you provide a value when creating a PAT, Unleash
            will ignore it.)'
          example: 1
        secret:
          type: string
          description: 'The token used for authentication. (This property is set by
            Unleash when the token is created and cannot be set manually: if you provide
            a value when creating a PAT, Unleash will ignore it.)'
          example: user:xyzrandomstring
        expiresAt:
          type: string
          description: The token's expiration date.
          format: date-time
          example: 2023-04-19T08:15:14Z
        createdAt:
          type: string
          description: 'When the token was created. (This property is set by Unleash
            when the token is created and cannot be set manually: if you provide a
            value when creating a PAT, Unleash will ignore it.)'
          format: date-time
          example: 2023-04-19T08:15:14Z
        seenAt:
          type: string
          description: 'When the token was last seen/used to authenticate with. `null`
            if it has not been used yet. (This property is set by Unleash when the
            token is created and cannot be set manually: if you provide a value when
            creating a PAT, Unleash will ignore it.)'
          format: date-time
          nullable: true
          example: 2023-04-19T08:15:14Z
      description: An overview of a [Personal Access Token](https://docs.getunleash.io/how-to/how-to-create-personal-access-tokens).
      example:
        createdAt: 2023-04-19T08:15:14Z
        seenAt: 2023-04-19T08:15:14Z
        id: 1
        secret: user:xyzrandomstring
        expiresAt: 2023-04-19T08:15:14Z
    patsSchema:
      type: object
      properties:
        pats:
          type: array
          description: A collection of Personal Access Tokens
          items:
            $ref: '#/components/schemas/patSchema'
      description: Contains a collection of [Personal Access Tokens](https://docs.getunleash.io/how-to/how-to-create-personal-access-tokens).
      example:
        pats:
        - createdAt: 2023-04-19T08:15:14Z
          seenAt: 2023-04-19T08:15:14Z
          id: 1
          secret: user:xyzrandomstring
          expiresAt: 2023-04-19T08:15:14Z
        - createdAt: 2023-04-19T08:15:14Z
          seenAt: 2023-04-19T08:15:14Z
          id: 1
          secret: user:xyzrandomstring
          expiresAt: 2023-04-19T08:15:14Z
    permissionSchema:
      required:
      - permission
      type: object
      properties:
        permission:
          type: string
          description: '[Project](https://docs.getunleash.io/reference/rbac#project-permissions)
            or [environment](https://docs.getunleash.io/reference/rbac#environment-permissions)
            permission name'
          example: UPDATE_FEATURE_STRATEGY
        project:
          type: string
          description: The project this permission applies to
          example: my-project
        environment:
          type: string
          description: The environment this permission applies to
          example: development
      additionalProperties: false
      description: Project and environment permissions
      example:
        environment: development
        project: my-project
        permission: UPDATE_FEATURE_STRATEGY
    playgroundConstraintSchema:
      required:
      - contextName
      - operator
      - result
      type: object
      properties:
        contextName:
          type: string
          description: The name of the context field that this constraint should apply
            to.
          example: appName
        operator:
          type: string
          description: The operator to use when evaluating this constraint. For more
            information about the various operators, refer to [the strategy constraint
            operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).
          example: IN
          enum:
          - NOT_IN
          - IN
          - STR_ENDS_WITH
          - STR_STARTS_WITH
          - STR_CONTAINS
          - NUM_EQ
          - NUM_GT
          - NUM_GTE
          - NUM_LT
          - NUM_LTE
          - DATE_AFTER
          - DATE_BEFORE
          - SEMVER_EQ
          - SEMVER_GT
          - SEMVER_LT
        caseInsensitive:
          type: boolean
          description: Whether the operator should be case sensitive or not. Defaults
            to `false` (being case sensitive).
          default: false
        inverted:
          type: boolean
          description: Whether the result should be negated or not. If `true`, will
            turn a `true` result into a `false` result and vice versa.
          default: false
        values:
          type: array
          description: The context values that should be used for constraint evaluation.
            Use this property instead of `value` for properties that accept multiple
            values.
          example:
          - my-app
          - my-other-app
          items:
            type: string
        value:
          type: string
          description: The context value that should be used for constraint evaluation.
            Use this property instead of `values` for properties that only accept
            single values.
          example: my-app
        result:
          type: boolean
          description: Whether this was evaluated as true or false.
      additionalProperties: false
      description: A strategy constraint. For more information, refer to [the strategy
        constraint reference documentation](https://docs.getunleash.io/reference/strategy-constraints)
      example:
        result: true
        contextName: appName
        values:
        - my-app
        - my-other-app
        caseInsensitive: false
        inverted: false
        value: my-app
        operator: IN
    playgroundFeatureSchema:
      required:
      - isEnabled
      - isEnabledInCurrentEnvironment
      - name
      - projectId
      - strategies
      - variant
      - variants
      type: object
      properties:
        name:
          type: string
          description: The feature's name.
          example: my-feature
        projectId:
          type: string
          description: The ID of the project that contains this feature.
          example: my-project
        strategies:
          $ref: '#/components/schemas/playgroundFeatureSchema_strategies'
        isEnabledInCurrentEnvironment:
          type: boolean
          description: Whether the feature is active and would be evaluated in the
            provided environment in a normal SDK context.
        isEnabled:
          type: boolean
          description: |-
            Whether this feature is enabled or not in the current environment.
                                      If a feature can't be fully evaluated (that is, `strategies.result` is `unknown`),
                                      this will be `false` to align with how client SDKs treat unresolved feature states.
          example: true
        variant:
          $ref: '#/components/schemas/advancedPlaygroundEnvironmentFeatureSchema_variant'
        variants:
          type: array
          description: The feature variants.
          items:
            $ref: '#/components/schemas/variantSchema'
      additionalProperties: false
      description: A simplified feature toggle model intended for the Unleash playground.
      example:
        strategies:
          result: ""
          data:
          - result: ""
            name: name
            disabled: false
            links:
              edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                3AECCF7E-FF82-4174-8287-8EBE06079A50
            id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
            title: Beta rollout
            constraints:
            - null
            - null
            parameters:
              key: parameters
            segments:
            - result: true
              name: segment A
              id: 0
              constraints:
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
            - result: true
              name: segment A
              id: 0
              constraints:
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
          - result: ""
            name: name
            disabled: false
            links:
              edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                3AECCF7E-FF82-4174-8287-8EBE06079A50
            id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
            title: Beta rollout
            constraints:
            - null
            - null
            parameters:
              key: parameters
            segments:
            - result: true
              name: segment A
              id: 0
              constraints:
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
            - result: true
              name: segment A
              id: 0
              constraints:
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - result: true
                contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
        isEnabled: true
        name: my-feature
        variant: '{"name":"green","enabled":true}'
        variants:
        - weightType: fix
          payload: '{"type":"json","value":"{color: red}"}'
          stickiness: custom.context.field
          name: blue_group
          weight: 602.7456183070403
          overrides:
          - contextName: userId
            values:
            - red
            - blue
          - contextName: userId
            values:
            - red
            - blue
        - weightType: fix
          payload: '{"type":"json","value":"{color: red}"}'
          stickiness: custom.context.field
          name: blue_group
          weight: 602.7456183070403
          overrides:
          - contextName: userId
            values:
            - red
            - blue
          - contextName: userId
            values:
            - red
            - blue
        projectId: my-project
        isEnabledInCurrentEnvironment: true
    playgroundRequestSchema:
      required:
      - context
      - environment
      type: object
      properties:
        environment:
          type: string
          description: The environment to evaluate toggles in.
          example: development
        projects:
          description: A list of projects to check for toggles in.
          oneOf:
          - type: array
            description: A list of projects to check for toggles in.
            example:
            - my-project
            items:
              type: string
          - type: string
            description: Check toggles in all projects.
            enum:
            - '*'
        context:
          $ref: '#/components/schemas/sdkContextSchema'
      description: Data for the playground API to evaluate toggles
      example:
        environment: development
        projects: ""
        context:
          currentTime: 2022-07-05T12:56:41+02:00
          environment: environment
          appName: My cool application.
          sessionId: b65e7b23-fec0-4814-a129-0e9861ef18fc
          userId: username@provider.com
          properties:
            customContextField: this is one!
            otherCustomField: "3"
          remoteAddress: 192.168.1.1
    playgroundResponseSchema:
      required:
      - features
      - input
      type: object
      properties:
        input:
          $ref: '#/components/schemas/playgroundRequestSchema'
        features:
          type: array
          description: The list of features that have been evaluated.
          items:
            $ref: '#/components/schemas/playgroundFeatureSchema'
      additionalProperties: false
      description: The state of all features given the provided input.
      example:
        input:
          environment: development
          projects: ""
          context:
            currentTime: 2022-07-05T12:56:41+02:00
            environment: environment
            appName: My cool application.
            sessionId: b65e7b23-fec0-4814-a129-0e9861ef18fc
            userId: username@provider.com
            properties:
              customContextField: this is one!
              otherCustomField: "3"
            remoteAddress: 192.168.1.1
        features:
        - strategies:
            result: ""
            data:
            - result: ""
              name: name
              disabled: false
              links:
                edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                  3AECCF7E-FF82-4174-8287-8EBE06079A50
              id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
              title: Beta rollout
              constraints:
              - null
              - null
              parameters:
                key: parameters
              segments:
              - result: true
                name: segment A
                id: 0
                constraints:
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
              - result: true
                name: segment A
                id: 0
                constraints:
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
            - result: ""
              name: name
              disabled: false
              links:
                edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                  3AECCF7E-FF82-4174-8287-8EBE06079A50
              id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
              title: Beta rollout
              constraints:
              - null
              - null
              parameters:
                key: parameters
              segments:
              - result: true
                name: segment A
                id: 0
                constraints:
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
              - result: true
                name: segment A
                id: 0
                constraints:
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
          isEnabled: true
          name: my-feature
          variant: '{"name":"green","enabled":true}'
          variants:
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          projectId: my-project
          isEnabledInCurrentEnvironment: true
        - strategies:
            result: ""
            data:
            - result: ""
              name: name
              disabled: false
              links:
                edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                  3AECCF7E-FF82-4174-8287-8EBE06079A50
              id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
              title: Beta rollout
              constraints:
              - null
              - null
              parameters:
                key: parameters
              segments:
              - result: true
                name: segment A
                id: 0
                constraints:
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
              - result: true
                name: segment A
                id: 0
                constraints:
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
            - result: ""
              name: name
              disabled: false
              links:
                edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
                  3AECCF7E-FF82-4174-8287-8EBE06079A50
              id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
              title: Beta rollout
              constraints:
              - null
              - null
              parameters:
                key: parameters
              segments:
              - result: true
                name: segment A
                id: 0
                constraints:
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
              - result: true
                name: segment A
                id: 0
                constraints:
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
                - result: true
                  contextName: appName
                  values:
                  - my-app
                  - my-other-app
                  caseInsensitive: false
                  inverted: false
                  value: my-app
                  operator: IN
          isEnabled: true
          name: my-feature
          variant: '{"name":"green","enabled":true}'
          variants:
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          projectId: my-project
          isEnabledInCurrentEnvironment: true
    playgroundSegmentSchema:
      required:
      - constraints
      - id
      - name
      - result
      type: object
      properties:
        id:
          type: integer
          description: The segment's id.
        name:
          type: string
          description: The name of the segment.
          example: segment A
        result:
          type: boolean
          description: Whether this was evaluated as true or false.
        constraints:
          type: array
          description: The list of constraints in this segment.
          items:
            $ref: '#/components/schemas/playgroundConstraintSchema'
      additionalProperties: false
      example:
        result: true
        name: segment A
        id: 0
        constraints:
        - result: true
          contextName: appName
          values:
          - my-app
          - my-other-app
          caseInsensitive: false
          inverted: false
          value: my-app
          operator: IN
        - result: true
          contextName: appName
          values:
          - my-app
          - my-other-app
          caseInsensitive: false
          inverted: false
          value: my-app
          operator: IN
    playgroundStrategySchema:
      required:
      - constraints
      - disabled
      - id
      - links
      - name
      - parameters
      - result
      - segments
      type: object
      properties:
        name:
          type: string
          description: The strategy's name.
        title:
          type: string
          description: Description of the feature's purpose.
          example: Beta rollout
        id:
          type: string
          description: The strategy's id.
          example: 3AECCF7E-FF82-4174-8287-8EBE06079A50
        result:
          description: The strategy's evaluation result. If the strategy is a custom
            strategy that Unleash can't evaluate, `evaluationStatus` will be `unknown`.
            Otherwise, it will be `true` or `false`
          anyOf:
          - required:
            - enabled
            - evaluationStatus
            type: object
            properties:
              evaluationStatus:
                type: string
                description: Signals that this strategy could not be evaluated. This
                  is most likely because you're using a custom strategy that Unleash
                  doesn't know about.
                enum:
                - incomplete
              enabled:
                description: Whether this strategy resolves to `false` or if it might
                  resolve to `true`. Because Unleash can't evaluate the strategy,
                  it can't say for certain whether it will be `true`, but if you have
                  failing constraints or segments, it _can_ determine that your strategy
                  would be `false`.
                anyOf:
                - type: boolean
                  enum:
                  - false
                - type: string
                  enum:
                  - unknown
            additionalProperties: false
          - required:
            - enabled
            - evaluationStatus
            type: object
            properties:
              evaluationStatus:
                type: string
                description: Signals that this strategy was evaluated successfully.
                enum:
                - complete
              enabled:
                type: boolean
                description: Whether this strategy evaluates to true or not.
            additionalProperties: false
        disabled:
          type: boolean
          description: The strategy's status. Disabled strategies are not evaluated
          nullable: true
          example: false
        segments:
          type: array
          description: The strategy's segments and their evaluation results.
          items:
            $ref: '#/components/schemas/playgroundSegmentSchema'
        constraints:
          type: array
          description: The strategy's constraints and their evaluation results.
          items:
            $ref: '#/components/schemas/playgroundConstraintSchema'
        parameters:
          $ref: '#/components/schemas/parametersSchema'
        links:
          $ref: '#/components/schemas/playgroundStrategySchema_links'
      additionalProperties: false
      example:
        result: ""
        name: name
        disabled: false
        links:
          edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
            3AECCF7E-FF82-4174-8287-8EBE06079A50
        id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
        title: Beta rollout
        constraints:
        - null
        - null
        parameters:
          key: parameters
        segments:
        - result: true
          name: segment A
          id: 0
          constraints:
          - result: true
            contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          - result: true
            contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
        - result: true
          name: segment A
          id: 0
          constraints:
          - result: true
            contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          - result: true
            contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
    profileSchema:
      required:
      - features
      - projects
      - rootRole
      type: object
      properties:
        rootRole:
          $ref: '#/components/schemas/roleSchema'
        projects:
          type: array
          description: Which projects this user is a member of
          example:
          - my-projectA
          - my-projectB
          items:
            type: string
        features:
          type: array
          description: Deprecated, always returns empty array
          example: []
          items:
            $ref: '#/components/schemas/featureSchema'
      additionalProperties: false
      description: User profile overview
      example:
        features: []
        projects:
        - my-projectA
        - my-projectB
        rootRole:
          name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          id: 9
          type: global
    projectEnvironmentSchema:
      required:
      - environment
      type: object
      properties:
        environment:
          type: string
          description: The environment to add to the project
          example: development
        changeRequestsEnabled:
          type: boolean
          description: Whether change requests should be enabled or for this environment
            on the project or not
          example: true
        defaultStrategy:
          $ref: '#/components/schemas/createFeatureStrategySchema'
      additionalProperties: false
      description: Add an environment to a project, optionally also sets if change
        requests are enabled for this environment on the project
      example:
        environment: development
        defaultStrategy:
          sortOrder: 9999
          name: flexibleRollout
          disabled: false
          title: Gradual Rollout 25-Prod
          constraints:
          - values:
            - "1"
            - "2"
            inverted: false
            operator: IN
            contextName: appName
            caseInsensitive: false
          parameters:
            key: parameters
          segments:
          - 1
          - 2
        changeRequestsEnabled: true
    projectSchema:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
          description: The id of this project
          example: dx-squad
        name:
          type: string
          description: The name of this project
          example: DX-Squad
        description:
          type: string
          description: Additional information about the project
          nullable: true
          example: DX squad feature release
        health:
          type: number
          description: An indicator of the [project's health](https://docs.getunleash.io/reference/technical-debt#health-rating)
            on a scale from 0 to 100
          example: 50
        featureCount:
          type: number
          description: The number of features this project has
          example: 10
        memberCount:
          type: number
          description: The number of members this project has
          example: 4
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
        favorite:
          type: boolean
          description: '`true` if the project was favorited, otherwise `false`.'
          example: true
        mode:
          type: string
          description: The project's [collaboration mode](https://docs.getunleash.io/reference/project-collaboration-mode).
            Determines whether non-project members can submit change requests or not.
          example: open
          enum:
          - open
          - protected
        defaultStickiness:
          type: string
          description: A default stickiness for the project affecting the default
            stickiness value for variants and Gradual Rollout strategy
          example: userId
      additionalProperties: false
      description: A definition of the project used for projects listing purposes
      example:
        mode: open
        createdAt: 2000-01-23T04:56:07.000+00:00
        memberCount: 4
        name: DX-Squad
        defaultStickiness: userId
        description: DX squad feature release
        health: 50
        id: dx-squad
        favorite: true
        featureCount: 10
        updatedAt: 2000-01-23T04:56:07.000+00:00
    projectsSchema:
      required:
      - projects
      - version
      type: object
      properties:
        version:
          type: integer
        projects:
          type: array
          description: A list of projects in the Unleash instance
          items:
            $ref: '#/components/schemas/projectSchema'
      additionalProperties: false
      description: An overview of all the projects in the Unleash instance
      example:
        projects:
        - mode: open
          createdAt: 2000-01-23T04:56:07.000+00:00
          memberCount: 4
          name: DX-Squad
          defaultStickiness: userId
          description: DX squad feature release
          health: 50
          id: dx-squad
          favorite: true
          featureCount: 10
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - mode: open
          createdAt: 2000-01-23T04:56:07.000+00:00
          memberCount: 4
          name: DX-Squad
          defaultStickiness: userId
          description: DX squad feature release
          health: 50
          id: dx-squad
          favorite: true
          featureCount: 10
          updatedAt: 2000-01-23T04:56:07.000+00:00
        version: 0
    proxyClientSchema:
      required:
      - appName
      - interval
      - started
      - strategies
      type: object
      properties:
        appName:
          type: string
          description: Name of the application using Unleash
        instanceId:
          type: string
          description: Instance id for this application (typically hostname, podId
            or similar)
        sdkVersion:
          type: string
          description: Optional field that describes the sdk version (name:version)
        environment:
          type: string
          description: deprecated
          example: development
          deprecated: true
        interval:
          type: number
          description: At which interval, in milliseconds, will this client be expected
            to send metrics
        started:
          description: When this client started. Should be reported as ISO8601 time.
          oneOf:
          - type: string
            format: date-time
          - type: number
        strategies:
          type: array
          description: List of strategies implemented by this application
          items:
            type: string
      description: Frontend SDK client registration information
    proxyFeatureSchema:
      required:
      - enabled
      - impressionData
      - name
      type: object
      properties:
        name:
          type: string
          description: Unique feature name.
          example: disable-comments
        enabled:
          type: boolean
          description: Always set to `true`.
          example: true
        impressionData:
          type: boolean
          description: '`true` if the impression data collection is enabled for the
            feature, otherwise `false`.'
          example: false
        variant:
          $ref: '#/components/schemas/proxyFeatureSchema_variant'
      additionalProperties: false
      description: Frontend API feature
      example:
        impressionData: false
        name: disable-comments
        variant:
          payload: '{"type":"json","value":"{color: red}"}'
          name: blue_group
          enabled: true
        enabled: true
    proxyFeaturesSchema:
      required:
      - toggles
      type: object
      properties:
        toggles:
          type: array
          description: The actual features returned to the Frontend SDK
          items:
            $ref: '#/components/schemas/proxyFeatureSchema'
      additionalProperties: false
      description: Frontend SDK features list
      example:
        toggles:
        - impressionData: false
          name: disable-comments
          variant:
            payload: '{"type":"json","value":"{color: red}"}'
            name: blue_group
            enabled: true
          enabled: true
        - impressionData: false
          name: disable-comments
          variant:
            payload: '{"type":"json","value":"{color: red}"}'
            name: blue_group
            enabled: true
          enabled: true
    publicSignupTokenCreateSchema:
      required:
      - expiresAt
      - name
      type: object
      properties:
        name:
          type: string
          description: The token's name.
        expiresAt:
          type: string
          description: The token's expiration date.
          format: date-time
      additionalProperties: false
      description: Used for creating a [public invite link](https://docs.getunleash.io/reference/public-signup#public-sign-up-tokens)
    publicSignupTokenSchema:
      required:
      - createdAt
      - createdBy
      - enabled
      - expiresAt
      - name
      - role
      - secret
      - url
      type: object
      properties:
        secret:
          type: string
          description: The actual value of the token. This is the part that is used
            by Unleash to create an invite link
          example: a3c84b25409ea8ca1782ef17f94a42fc
        url:
          type: string
          description: The public signup link for the token. Users who follow this
            link will be taken to a signup page where they can create an Unleash user.
          example: https://sandbox.getunleash.io/enterprise/new-user?invite=a3c84b25409ea8ca1782ef17f94a42fc
        name:
          type: string
          description: The token's name. Only for displaying in the UI
          example: Invite public viewers
        enabled:
          type: boolean
          description: Whether the token is active. This property will always be `false`
            for a token that has expired.
          example: true
        expiresAt:
          type: string
          description: The time when the token will expire.
          format: date-time
          example: 2023-04-12T11:13:31.96Z
        createdAt:
          type: string
          description: When the token was created.
          format: date-time
          example: 2023-04-12T11:13:31.96Z
        createdBy:
          type: string
          description: The creator's email or username
          nullable: true
          example: someone@example.com
        users:
          type: array
          description: Array of users that have signed up using the token.
          nullable: true
          items:
            $ref: '#/components/schemas/userSchema'
        role:
          $ref: '#/components/schemas/roleSchema'
      additionalProperties: false
      description: Used for transporting a [public invite link](https://docs.getunleash.io/reference/public-signup#public-sign-up-tokens)
      example:
        createdAt: 2023-04-12T11:13:31.96Z
        role:
          name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          id: 9
          type: global
        createdBy: someone@example.com
        name: Invite public viewers
        secret: a3c84b25409ea8ca1782ef17f94a42fc
        url: https://sandbox.getunleash.io/enterprise/new-user?invite=a3c84b25409ea8ca1782ef17f94a42fc
        enabled: true
        expiresAt: 2023-04-12T11:13:31.96Z
        users:
        - loginAttempts: 3
          inviteLink: http://localhost:4242/invite-link/some-secret
          accountType: User
          isAPI: true
          createdAt: 2023-06-30T11:41:00.123Z
          seenAt: 2023-06-30T11:42:00.345Z
          rootRole: 1
          emailSent: false
          permissions:
          - permissions
          - permissions
          imageUrl: https://example.com/242x200.png
          name: User
          id: 123
          email: user@example.com
          username: hunter
        - loginAttempts: 3
          inviteLink: http://localhost:4242/invite-link/some-secret
          accountType: User
          isAPI: true
          createdAt: 2023-06-30T11:41:00.123Z
          seenAt: 2023-06-30T11:42:00.345Z
          rootRole: 1
          emailSent: false
          permissions:
          - permissions
          - permissions
          imageUrl: https://example.com/242x200.png
          name: User
          id: 123
          email: user@example.com
          username: hunter
    publicSignupTokensSchema:
      required:
      - tokens
      type: object
      properties:
        tokens:
          type: array
          description: An array of all the public signup tokens
          example:
          - secret: a3c84b25409ea8ca1782ef17f94a42fc
            url: https://my_unleash_instance/new-user?invite=a3c84b25409ea8ca1782ef17f94a42fc
            name: Invite public viewers
            enabled: false
            expiresAt: 2023-04-12T11:13:31.960Z
            createdAt: 2023-04-12T11:13:31.960Z
            createdBy: someone
            users: null
            role:
              id: 3
              type: root
              name: Viewer
          items:
            $ref: '#/components/schemas/publicSignupTokenSchema'
      additionalProperties: false
      description: A wrapper object containing all the public signup tokens
      example:
        tokens:
        - secret: a3c84b25409ea8ca1782ef17f94a42fc
          url: https://my_unleash_instance/new-user?invite=a3c84b25409ea8ca1782ef17f94a42fc
          name: Invite public viewers
          enabled: false
          expiresAt: 2023-04-12T11:13:31.960Z
          createdAt: 2023-04-12T11:13:31.960Z
          createdBy: someone
          users: null
          role:
            id: 3
            type: root
            name: Viewer
    publicSignupTokenUpdateSchema:
      type: object
      properties:
        expiresAt:
          type: string
          description: The token's expiration date.
          format: date-time
          example: 2023-04-11T15:46:56Z
        enabled:
          type: boolean
          description: Whether the token is active or not.
          example: true
      additionalProperties: false
      description: Used by Unleash for updating a token's expiration date or, when
        deleting the invite link, it's status
    pushVariantsSchema:
      type: object
      properties:
        variants:
          type: array
          items:
            $ref: '#/components/schemas/variantSchema'
        environments:
          type: array
          items:
            type: string
    projectStatsSchema:
      required:
      - archivedCurrentWindow
      - archivedPastWindow
      - avgTimeToProdCurrentWindow
      - createdCurrentWindow
      - createdPastWindow
      - projectActivityCurrentWindow
      - projectActivityPastWindow
      - projectMembersAddedCurrentWindow
      type: object
      properties:
        avgTimeToProdCurrentWindow:
          type: number
          description: The average time from when a feature was created to when it
            was enabled in the "production" environment during the current window
          example: 10
        createdCurrentWindow:
          type: number
          description: The number of feature toggles created during the current window
          example: 15
        createdPastWindow:
          type: number
          description: The number of feature toggles created during the previous window
          example: 15
        archivedCurrentWindow:
          type: number
          description: The number of feature toggles that were archived during the
            current window
          example: 5
        archivedPastWindow:
          type: number
          description: The number of feature toggles that were archived during the
            previous window
          example: 5
        projectActivityCurrentWindow:
          type: number
          description: The number of project events that occurred during the current
            window
          example: 100
        projectActivityPastWindow:
          type: number
          description: The number of project events that occurred during the previous
            window
          example: 100
        projectMembersAddedCurrentWindow:
          type: number
          description: The number of members that were added to the project during
            the current window
          example: 1
      additionalProperties: false
      description: |-
        Statistics for a project, including the average time to production, number of features created, the project activity and more.

        Stats are divided into current and previous **windows**.
        - The **current window** is the past 30 days.
        - The **previous window** is the 30 days **before** the current window (from 60 to 30 days ago)
      example:
        archivedCurrentWindow: 5
        projectMembersAddedCurrentWindow: 1
        avgTimeToProdCurrentWindow: 10
        archivedPastWindow: 5
        createdCurrentWindow: 15
        createdPastWindow: 15
        projectActivityCurrentWindow: 100
        projectActivityPastWindow: 100
    resetPasswordSchema:
      required:
      - resetPasswordUrl
      type: object
      properties:
        resetPasswordUrl:
          type: string
      additionalProperties: false
      example:
        resetPasswordUrl: resetPasswordUrl
    requestsPerSecondSchema:
      type: object
      properties:
        status:
          type: string
          description: Whether the query against prometheus succeeded or failed
          example: success
          enum:
          - success
          - failure
        data:
          $ref: '#/components/schemas/requestsPerSecondSchema_data'
      description: Statistics for usage of Unleash, formatted so it can easily be
        used in a graph
      example:
        data:
          result:
          - metric:
              endpoint: /api/frontend
              appName: mySdk
            values:
            - - ""
              - ""
            - - ""
              - ""
          - metric:
              endpoint: /api/frontend
              appName: mySdk
            values:
            - - ""
              - ""
            - - ""
              - ""
          resultType: vector
        status: success
    requestsPerSecondSegmentedSchema:
      type: object
      properties:
        clientMetrics:
          $ref: '#/components/schemas/requestsPerSecondSchema'
        adminMetrics:
          $ref: '#/components/schemas/requestsPerSecondSchema'
      description: Get usage metrics separated by client and admin paths
      example:
        clientMetrics:
          data:
            result:
            - metric:
                endpoint: /api/frontend
                appName: mySdk
              values:
              - - ""
                - ""
              - - ""
                - ""
            - metric:
                endpoint: /api/frontend
                appName: mySdk
              values:
              - - ""
                - ""
              - - ""
                - ""
            resultType: vector
          status: success
    roleSchema:
      required:
      - id
      - name
      - type
      type: object
      properties:
        id:
          minimum: 0
          type: integer
          description: The role id
          example: 9
        type:
          type: string
          description: A role can either be a global role (applies to all projects)
            or a project role
          example: global
        name:
          type: string
          description: The name of the role
          example: Editor
        description:
          type: string
          description: A more detailed description of the role and what use it's intended
            for
          example: Users with the editor role have access to most features in Unleash
            but can not manage users and roles in the global scope. Editors will be
            added as project owners when creating projects and get superuser rights
            within the context of these projects. Users with the editor role will
            also get access to most permissions on the default project by default.
      additionalProperties: false
      description: A role holds permissions to allow Unleash to decide what actions
        a role holder is allowed to perform
      example:
        name: Editor
        description: Users with the editor role have access to most features in Unleash
          but can not manage users and roles in the global scope. Editors will be
          added as project owners when creating projects and get superuser rights
          within the context of these projects. Users with the editor role will also
          get access to most permissions on the default project by default.
        id: 9
        type: global
    sdkContextSchema:
      required:
      - appName
      type: object
      properties:
        appName:
          minLength: 1
          type: string
          description: The name of the application.
          example: My cool application.
        currentTime:
          type: string
          description: A DateTime (or similar) data class instance or a string in
            an RFC3339-compatible format. Defaults to the current time if not set
            by the user.
          format: date-time
          example: 2022-07-05T12:56:41+02:00
        environment:
          type: string
          description: The environment the app is running in.
          deprecated: true
        properties:
          type: object
          additionalProperties:
            type: string
          example:
            customContextField: this is one!
            otherCustomField: "3"
        remoteAddress:
          type: string
          description: The app's IP address
          example: 192.168.1.1
        sessionId:
          type: string
          description: An identifier for the current session
          example: b65e7b23-fec0-4814-a129-0e9861ef18fc
        userId:
          type: string
          description: An identifier for the current user
          example: username@provider.com
      additionalProperties: true
      description: The Unleash context as modeled in client SDKs
      example:
        currentTime: 2022-07-05T12:56:41+02:00
        environment: environment
        appName: My cool application.
        sessionId: b65e7b23-fec0-4814-a129-0e9861ef18fc
        userId: username@provider.com
        properties:
          customContextField: this is one!
          otherCustomField: "3"
        remoteAddress: 192.168.1.1
    searchEventsSchema:
      type: object
      properties:
        type:
          type: string
          description: Find events by event type (case-sensitive).
          example: feature-created
          enum:
          - application-created
          - feature-created
          - feature-deleted
          - feature-updated
          - feature-metadata-updated
          - feature-variants-updated
          - feature-environment-variants-updated
          - feature-project-change
          - feature-archived
          - feature-revived
          - feature-import
          - feature-tagged
          - feature-tag-import
          - feature-strategy-update
          - feature-strategy-add
          - feature-strategy-remove
          - drop-feature-tags
          - feature-untagged
          - feature-stale-on
          - feature-stale-off
          - drop-features
          - feature-environment-enabled
          - feature-environment-disabled
          - strategy-created
          - strategy-deleted
          - strategy-deprecated
          - strategy-reactivated
          - strategy-updated
          - strategy-import
          - drop-strategies
          - context-field-created
          - context-field-updated
          - context-field-deleted
          - project-access-added
          - project-created
          - project-updated
          - project-deleted
          - project-import
          - project-user-added
          - project-user-removed
          - project-user-role-changed
          - project-group-role-changed
          - project-group-added
          - project-group-removed
          - drop-projects
          - tag-created
          - tag-deleted
          - tag-import
          - drop-tags
          - tag-type-created
          - tag-type-deleted
          - tag-type-updated
          - tag-type-import
          - drop-tag-types
          - addon-config-created
          - addon-config-updated
          - addon-config-deleted
          - db-pool-update
          - user-created
          - user-updated
          - user-deleted
          - drop-environments
          - environment-import
          - segment-created
          - segment-updated
          - segment-deleted
          - group-created
          - group-updated
          - setting-created
          - setting-updated
          - setting-deleted
          - client-metrics
          - client-register
          - pat-created
          - pat-deleted
          - public-signup-token-created
          - public-signup-token-user-added
          - public-signup-token-updated
          - change-added
          - change-discarded
          - change-edited
          - api-token-created
          - api-token-updated
          - api-token-deleted
          - feature-favorited
          - feature-unfavorited
          - project-favorited
          - project-unfavorited
          - features-exported
          - features-imported
          - service-account-created
          - service-account-deleted
          - service-account-updated
        project:
          type: string
          description: Find events by project ID (case-sensitive).
          example: default
        feature:
          type: string
          description: Find events by feature toggle name (case-sensitive).
          example: my.first.toggle
        query:
          type: string
          description: "\n                Find events by a free-text search query.\n\
            \                The query will be matched against the event type,\n \
            \               the username or email that created the event (if any),\n\
            \                and the event data payload (if any).\n            "
          example: admin@example.com
        limit:
          maximum: 100
          minimum: 1
          type: integer
          description: The maximum amount of events to return in the search result
          example: 50
          default: 100
        offset:
          minimum: 0
          type: integer
          description: Which event id to start listing from
          example: 100
          default: 0
      description: "\n        Search for events by type, project, feature, free-text\
        \ query,\n        or a combination thereof. Pass an empty object to fetch\
        \ all events.\n    "
    segmentSchema:
      required:
      - constraints
      - id
      type: object
      properties:
        id:
          type: number
          description: The segment's id.
        name:
          type: string
          description: The name of the segment.
          example: segment A
        description:
          type: string
          description: The description of the segment.
          nullable: true
          example: Segment A description
        constraints:
          type: array
          description: List of constraints that determine which users are part of
            the segment
          items:
            $ref: '#/components/schemas/constraintSchema'
      additionalProperties: false
      description: Represents a segment of users defined by a set of constraints.
      example:
        name: segment A
        description: Segment A description
        id: 6.027456183070403
        constraints:
        - contextName: appName
          values:
          - my-app
          - my-other-app
          caseInsensitive: false
          inverted: false
          value: my-app
          operator: IN
        - contextName: appName
          values:
          - my-app
          - my-other-app
          caseInsensitive: false
          inverted: false
          value: my-app
          operator: IN
    setStrategySortOrderSchema:
      type: array
      items:
        $ref: '#/components/schemas/setStrategySortOrderSchema_inner'
    setUiConfigSchema:
      type: object
      properties:
        frontendSettings:
          $ref: '#/components/schemas/setUiConfigSchema_frontendSettings'
      additionalProperties: false
    sortOrderSchema:
      type: object
      additionalProperties:
        type: number
    splashSchema:
      required:
      - seen
      - splashId
      - userId
      type: object
      properties:
        userId:
          type: number
        splashId:
          type: string
        seen:
          type: boolean
      additionalProperties: false
      example:
        splashId: splashId
        userId: 0.8008281904610115
        seen: true
    stateSchema:
      required:
      - version
      type: object
      properties:
        version:
          type: integer
        features:
          type: array
          items:
            $ref: '#/components/schemas/featureSchema'
        strategies:
          type: array
          items:
            $ref: '#/components/schemas/strategySchema'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/tagSchema'
        tagTypes:
          type: array
          items:
            $ref: '#/components/schemas/tagTypeSchema'
        featureTags:
          type: array
          items:
            $ref: '#/components/schemas/featureTagSchema'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/projectSchema'
        featureStrategies:
          type: array
          items:
            $ref: '#/components/schemas/featureStrategySchema'
        featureEnvironments:
          type: array
          items:
            $ref: '#/components/schemas/featureEnvironmentSchema'
        environments:
          type: array
          items:
            $ref: '#/components/schemas/environmentSchema'
        segments:
          type: array
          items:
            $ref: '#/components/schemas/segmentSchema'
        featureStrategySegments:
          type: array
          items:
            $ref: '#/components/schemas/featureStrategySegmentSchema'
      additionalProperties: true
      description: The state of the application used by export/import APIs which are
        deprecated in favor of the more fine grained /api/admin/export and /api/admin/import
        APIs
      example:
        features:
        - lastSeenAt: 2023-01-28T16:21:39.975Z
          impressionData: false
          environments:
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          strategies:
          - {}
          - {}
          description: Controls disabling of the comments section in case of an incident
          project: dx-squad
          variants:
          - null
          - null
          type: kill-switch
          enabled: true
          tags:
          - type: simple
            value: a-tag-value
          - type: simple
            value: a-tag-value
          archived: true
          createdAt: 2023-01-28T15:21:39.975Z
          archivedAt: 2023-01-29T15:21:39.975Z
          stale: false
          name: disable-comments
          favorite: true
        - lastSeenAt: 2023-01-28T16:21:39.975Z
          impressionData: false
          environments:
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          strategies:
          - {}
          - {}
          description: Controls disabling of the comments section in case of an incident
          project: dx-squad
          variants:
          - null
          - null
          type: kill-switch
          enabled: true
          tags:
          - type: simple
            value: a-tag-value
          - type: simple
            value: a-tag-value
          archived: true
          createdAt: 2023-01-28T15:21:39.975Z
          archivedAt: 2023-01-29T15:21:39.975Z
          stale: false
          name: disable-comments
          favorite: true
        featureEnvironments:
        - environment: environment
          featureName: disable-comments
          strategies:
          - featureName: myAwesomeFeature
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
            title: Gradual Rollout 25-Prod
            constraints:
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          - featureName: myAwesomeFeature
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
            title: Gradual Rollout 25-Prod
            constraints:
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          sortOrder: 3
          name: my-dev-env
          variants:
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          type: development
          enabled: true
          variantCount: 0.8008281904610115
        - environment: environment
          featureName: disable-comments
          strategies:
          - featureName: myAwesomeFeature
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
            title: Gradual Rollout 25-Prod
            constraints:
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          - featureName: myAwesomeFeature
            sortOrder: 9999
            name: flexibleRollout
            disabled: false
            id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
            title: Gradual Rollout 25-Prod
            constraints:
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            parameters:
              key: parameters
            segments:
            - 1
            - 2
          sortOrder: 3
          name: my-dev-env
          variants:
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          - weightType: fix
            payload: '{"type":"json","value":"{color: red}"}'
            stickiness: custom.context.field
            name: blue_group
            weight: 602.7456183070403
            overrides:
            - contextName: userId
              values:
              - red
              - blue
            - contextName: userId
              values:
              - red
              - blue
          type: development
          enabled: true
          variantCount: 0.8008281904610115
        projects:
        - mode: open
          createdAt: 2000-01-23T04:56:07.000+00:00
          memberCount: 4
          name: DX-Squad
          defaultStickiness: userId
          description: DX squad feature release
          health: 50
          id: dx-squad
          favorite: true
          featureCount: 10
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - mode: open
          createdAt: 2000-01-23T04:56:07.000+00:00
          memberCount: 4
          name: DX-Squad
          defaultStickiness: userId
          description: DX squad feature release
          health: 50
          id: dx-squad
          favorite: true
          featureCount: 10
          updatedAt: 2000-01-23T04:56:07.000+00:00
        strategies:
        - displayName: Gradual Rollout
          editable: true
          deprecated: true
          name: flexibleRollout
          description: Gradual rollout to logged in users
          title: GradualRollout - Prod25
          parameters:
          - name: percentage
            description: Gradual rollout to logged in users
            type: percentage
            required: true
          - name: percentage
            description: Gradual rollout to logged in users
            type: percentage
            required: true
        - displayName: Gradual Rollout
          editable: true
          deprecated: true
          name: flexibleRollout
          description: Gradual rollout to logged in users
          title: GradualRollout - Prod25
          parameters:
          - name: percentage
            description: Gradual rollout to logged in users
            type: percentage
            required: true
          - name: percentage
            description: Gradual rollout to logged in users
            type: percentage
            required: true
        environments:
        - projectCount: 10
          enabledToggleCount: 10
          protected: true
          sortOrder: 3
          name: my-dev-env
          type: development
          apiTokenCount: 6
          enabled: true
        - projectCount: 10
          enabledToggleCount: 10
          protected: true
          sortOrder: 3
          name: my-dev-env
          type: development
          apiTokenCount: 6
          enabled: true
        featureTags:
        - featureName: my-feature
          tagValue: my-tag
          tagType: simple
          type: type
          value: value
        - featureName: my-feature
          tagValue: my-tag
          tagType: simple
          type: type
          value: value
        featureStrategySegments:
        - segmentId: 1
          featureStrategyId: featureStrategyId
        - segmentId: 1
          featureStrategyId: featureStrategyId
        featureStrategies:
        - featureName: myAwesomeFeature
          sortOrder: 9999
          name: flexibleRollout
          disabled: false
          id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
          title: Gradual Rollout 25-Prod
          constraints:
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          parameters:
            key: parameters
          segments:
          - 1
          - 2
        - featureName: myAwesomeFeature
          sortOrder: 9999
          name: flexibleRollout
          disabled: false
          id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
          title: Gradual Rollout 25-Prod
          constraints:
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          parameters:
            key: parameters
          segments:
          - 1
          - 2
        version: 0
        tags:
        - type: simple
          value: a-tag-value
        - type: simple
          value: a-tag-value
        tagTypes:
        - name: color
          icon: not-really-used
          description: A tag type for describing the color of a tag.
        - name: color
          icon: not-really-used
          description: A tag type for describing the color of a tag.
        segments:
        - name: segment A
          description: Segment A description
          id: 6.027456183070403
          constraints:
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
        - name: segment A
          description: Segment A description
          id: 6.027456183070403
          constraints:
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
      deprecated: true
    strategiesSchema:
      required:
      - strategies
      - version
      type: object
      properties:
        version:
          type: integer
          example: 1
          enum:
          - 1
        strategies:
          type: array
          items:
            $ref: '#/components/schemas/strategySchema'
      additionalProperties: false
      example:
        strategies:
        - displayName: Gradual Rollout
          editable: true
          deprecated: true
          name: flexibleRollout
          description: Gradual rollout to logged in users
          title: GradualRollout - Prod25
          parameters:
          - name: percentage
            description: Gradual rollout to logged in users
            type: percentage
            required: true
          - name: percentage
            description: Gradual rollout to logged in users
            type: percentage
            required: true
        - displayName: Gradual Rollout
          editable: true
          deprecated: true
          name: flexibleRollout
          description: Gradual rollout to logged in users
          title: GradualRollout - Prod25
          parameters:
          - name: percentage
            description: Gradual rollout to logged in users
            type: percentage
            required: true
          - name: percentage
            description: Gradual rollout to logged in users
            type: percentage
            required: true
        version: 1
    strategySchema:
      required:
      - deprecated
      - description
      - displayName
      - editable
      - name
      - parameters
      type: object
      properties:
        title:
          type: string
          description: An optional title for the strategy
          nullable: true
          example: GradualRollout - Prod25
        name:
          type: string
          description: The name (type) of the strategy
          example: flexibleRollout
        displayName:
          type: string
          description: A human friendly name for the strategy
          nullable: true
          example: Gradual Rollout
        description:
          type: string
          description: A short description of the strategy
          nullable: true
          example: Gradual rollout to logged in users
        editable:
          type: boolean
          description: Whether the strategy can be edited or not. Strategies bundled
            with Unleash cannot be edited.
          example: true
        deprecated:
          type: boolean
          example: true
        parameters:
          type: array
          description: A list of relevant parameters for each strategy
          items:
            $ref: '#/components/schemas/strategySchema_parameters'
      additionalProperties: false
      description: The [activation strategy](https://docs.getunleash.io/reference/activation-strategies)
        schema
      example:
        displayName: Gradual Rollout
        editable: true
        deprecated: true
        name: flexibleRollout
        description: Gradual rollout to logged in users
        title: GradualRollout - Prod25
        parameters:
        - name: percentage
          description: Gradual rollout to logged in users
          type: percentage
          required: true
        - name: percentage
          description: Gradual rollout to logged in users
          type: percentage
          required: true
    tagsBulkAddSchema:
      required:
      - features
      - tags
      type: object
      properties:
        features:
          type: array
          description: The list of features that will be affected by the tag changes.
          items:
            minLength: 1
            type: string
        tags:
          $ref: '#/components/schemas/updateTagsSchema'
      additionalProperties: false
      description: Represents tag changes to be applied to a list of features.
    tagSchema:
      required:
      - type
      - value
      type: object
      properties:
        value:
          maxLength: 50
          minLength: 2
          type: string
          description: The value of the tag
          example: a-tag-value
        type:
          maxLength: 50
          minLength: 2
          type: string
          description: The [type](https://docs.getunleash.io/reference/tags#tag-types)
            of the tag
          example: simple
          default: simple
      additionalProperties: false
      description: Representation of a [tag](https://docs.getunleash.io/reference/tags)
      example:
        type: simple
        value: a-tag-value
    tagsSchema:
      required:
      - tags
      - version
      type: object
      properties:
        version:
          type: integer
          description: The version of the schema used to model the tags.
        tags:
          type: array
          description: A list of tags.
          items:
            $ref: '#/components/schemas/tagSchema'
      additionalProperties: false
      description: A list of tags with a version number
      example:
        version: 0
        tags:
        - type: simple
          value: a-tag-value
        - type: simple
          value: a-tag-value
    tagTypeSchema:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the tag type.
          example: color
        description:
          type: string
          description: The description of the tag type.
          example: A tag type for describing the color of a tag.
        icon:
          type: string
          description: The icon of the tag type.
          nullable: true
          example: not-really-used
      additionalProperties: false
      description: A tag type.
      example:
        name: color
        icon: not-really-used
        description: A tag type for describing the color of a tag.
    tagTypesSchema:
      required:
      - tagTypes
      - version
      type: object
      properties:
        version:
          type: integer
          description: The version of the schema used to model the tag types.
          example: 1
        tagTypes:
          type: array
          description: The list of tag types.
          items:
            $ref: '#/components/schemas/tagTypeSchema'
      additionalProperties: false
      description: A list of tag types with a version number representing the schema
        used to model the tag types.
      example:
        version: 1
        tagTypes:
        - name: color
          icon: not-really-used
          description: A tag type for describing the color of a tag.
        - name: color
          icon: not-really-used
          description: A tag type for describing the color of a tag.
    tagWithVersionSchema:
      required:
      - tag
      - version
      type: object
      properties:
        version:
          type: integer
          description: The version of the schema used to model the tag.
          example: 1
        tag:
          $ref: '#/components/schemas/tagSchema'
      additionalProperties: false
      description: A tag with a version number representing the schema used to model
        the tag.
      example:
        tag:
          type: simple
          value: a-tag-value
        version: 1
    tokenUserSchema:
      required:
      - createdBy
      - email
      - id
      - name
      - role
      - token
      type: object
      properties:
        id:
          type: integer
          description: The user id
          example: 7
        name:
          type: string
          description: The name of the user
          example: Test McTest
        email:
          type: string
          description: The email of the user
          example: test@example.com
        token:
          type: string
          description: A token uniquely identifying a user
          example: user:xyzrandomstring
        createdBy:
          type: string
          description: A username or email identifying which user created this token
          nullable: true
          example: admin@example.com
        role:
          $ref: '#/components/schemas/roleSchema'
      additionalProperties: false
      description: A user identified by a token
      example:
        role:
          name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          id: 9
          type: global
        createdBy: admin@example.com
        name: Test McTest
        id: 7
        email: test@example.com
        token: user:xyzrandomstring
    tokenStringListSchema:
      required:
      - tokens
      type: object
      properties:
        tokens:
          type: array
          description: Tokens that we want to get access information about
          example:
          - aproject:development.randomstring
          - '[]:production.randomstring'
          items:
            type: string
      additionalProperties: true
      description: A list of unleash tokens to validate against known tokens
    uiConfigSchema:
      required:
      - baseUriPath
      - unleashUrl
      - version
      - versionInfo
      type: object
      properties:
        slogan:
          type: string
        name:
          type: string
        version:
          type: string
        environment:
          type: string
        unleashUrl:
          type: string
        baseUriPath:
          type: string
        disablePasswordAuth:
          type: boolean
        emailEnabled:
          type: boolean
        maintenanceMode:
          type: boolean
        segmentValuesLimit:
          type: number
        strategySegmentsLimit:
          type: number
        networkViewEnabled:
          type: boolean
        frontendApiOrigins:
          type: array
          items:
            type: string
        flags:
          type: object
          additionalProperties:
            anyOf:
            - type: boolean
            - $ref: '#/components/schemas/variantFlagSchema'
        links:
          type: array
          items:
            type: object
        authenticationType:
          type: string
          enum:
          - open-source
          - demo
          - enterprise
          - hosted
          - custom
          - none
        versionInfo:
          $ref: '#/components/schemas/versionSchema'
      additionalProperties: false
      example:
        disablePasswordAuth: true
        frontendApiOrigins:
        - frontendApiOrigins
        - frontendApiOrigins
        emailEnabled: true
        flags:
          key: ""
        versionInfo:
          current:
            enterprise: enterprise
            oss: oss
          instanceId: instanceId
          isLatest: true
        version: version
        environment: environment
        strategySegmentsLimit: 6.027456183070403
        name: name
        links:
        - {}
        - {}
        maintenanceMode: true
        networkViewEnabled: true
        authenticationType: open-source
        unleashUrl: unleashUrl
        baseUriPath: baseUriPath
        slogan: slogan
        segmentValuesLimit: 0.8008281904610115
    updateApiTokenSchema:
      required:
      - expiresAt
      type: object
      properties:
        expiresAt:
          type: string
          description: The new time when this token should expire.
          format: date-time
          example: 2023-09-04T11:26:24+02:00
      description: An object with fields to updated for a given API token.
    updateFeatureSchema:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        stale:
          type: boolean
        archived:
          type: boolean
        createdAt:
          type: string
          format: date-time
        impressionData:
          type: boolean
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/constraintSchema'
    updateFeatureStrategySchema:
      type: object
      properties:
        name:
          type: string
          description: The name of the strategy type
        sortOrder:
          type: number
          description: The order of the strategy in the list in feature environment
            configuration
        constraints:
          type: array
          description: A list of the constraints attached to the strategy. See https://docs.getunleash.io/reference/strategy-constraints
          items:
            $ref: '#/components/schemas/constraintSchema'
        title:
          type: string
          description: A descriptive title for the strategy
          nullable: true
          example: Gradual Rollout 25-Prod
        disabled:
          type: boolean
          description: A toggle to disable the strategy. defaults to true. Disabled
            strategies are not evaluated or returned to the SDKs
          nullable: true
          example: false
        parameters:
          $ref: '#/components/schemas/parametersSchema'
      description: Update a strategy configuration in a feature
    updateTagTypeSchema:
      type: object
      properties:
        description:
          type: string
          description: The description of the tag type.
          example: A tag type for describing the color of a tag.
        icon:
          type: string
          description: The icon of the tag type.
          example: not-really-used
      description: The request body for updating a tag type.
    updateUserSchema:
      type: object
      properties:
        email:
          type: string
          description: The user's email address. Must be provided if username is not
            provided.
          example: user@example.com
        name:
          type: string
          description: The user's name (not the user's username).
          example: Sam Seawright
        rootRole:
          description: The role to assign to the user. Can be either the role's ID
            or its unique name.
          oneOf:
          - minimum: 0
            type: integer
            example: 1
          - type: string
            example: Admin
            enum:
            - Admin
            - Editor
            - Viewer
            - Owner
            - Member
      additionalProperties: true
      description: All fields that can be directly changed for the user
    updateTagsSchema:
      required:
      - addedTags
      - removedTags
      type: object
      properties:
        addedTags:
          type: array
          description: Tags to add to the feature.
          items:
            $ref: '#/components/schemas/tagSchema'
        removedTags:
          type: array
          description: Tags to remove from the feature.
          items:
            $ref: '#/components/schemas/tagSchema'
      additionalProperties: false
      description: Represents a set of changes to a feature's tags, such as adding
        or removing tags.
      example:
        addedTags:
        - value: tag-to-add
          type: simple
        removedTags:
        - value: tag-to-remove
          type: simple
    upsertContextFieldSchema:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        stickiness:
          type: boolean
        sortOrder:
          type: number
        legalValues:
          type: array
          items:
            $ref: '#/components/schemas/legalValueSchema'
    upsertSegmentSchema:
      required:
      - constraints
      - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        project:
          type: string
          nullable: true
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/constraintSchema'
    createStrategySchema:
      required:
      - name
      - parameters
      type: object
      properties:
        name:
          type: string
          description: The name of the strategy type. Must be unique.
          example: my-custom-strategy
        description:
          type: string
          description: A description of the strategy type.
          example: Enable the feature for users who have not logged in before.
        parameters:
          type: array
          description: The parameter list lets you pass arguments to your custom activation
            strategy. These will be made available to your custom strategy implementation.
          items:
            $ref: '#/components/schemas/createStrategySchema_parameters'
      description: The data required to create a strategy type. Refer to the docs
        on [custom strategy types](https://docs.getunleash.io/reference/custom-activation-strategies)
        for more information.
    updateStrategySchema:
      required:
      - parameters
      type: object
      properties:
        description:
          type: string
          description: A description of the strategy type.
          example: Enable the feature for users who have not logged in before.
        parameters:
          type: array
          description: The parameter list lets you pass arguments to your custom activation
            strategy. These will be made available to your custom strategy implementation.
          items:
            $ref: '#/components/schemas/createStrategySchema_parameters'
      description: The data required to update a strategy type.
    userSchema:
      required:
      - id
      type: object
      properties:
        id:
          minimum: 0
          type: integer
          description: The user id
          example: 123
        isAPI:
          type: boolean
          description: '(Deprecated): Used internally to know which operations the
            user should be allowed to perform'
          example: true
          deprecated: true
        name:
          type: string
          description: Name of the user
          example: User
        email:
          type: string
          description: Email of the user
          example: user@example.com
        username:
          type: string
          description: A unique username for the user
          example: hunter
        imageUrl:
          type: string
          description: URL used for the userprofile image
          example: https://example.com/242x200.png
        inviteLink:
          type: string
          description: If the user is actively inviting other users, this is the link
            that can be shared with other users
          example: http://localhost:4242/invite-link/some-secret
        loginAttempts:
          minimum: 0
          type: integer
          description: How many unsuccessful attempts at logging in has the user made
          example: 3
        emailSent:
          type: boolean
          description: Is the welcome email sent to the user or not
          example: false
        rootRole:
          minimum: 0
          type: integer
          description: Which [root role](https://docs.getunleash.io/reference/rbac#standard-roles)
            this user is assigned
          example: 1
        seenAt:
          type: string
          description: The last time this user logged in
          format: date-time
          nullable: true
          example: 2023-06-30T11:42:00.345Z
        createdAt:
          type: string
          description: The user was created at this time
          format: date-time
          example: 2023-06-30T11:41:00.123Z
        accountType:
          type: string
          description: A user is either an actual User or a Service Account
          example: User
        permissions:
          type: array
          description: Deprecated
          items:
            type: string
      additionalProperties: false
      description: An Unleash user
      example:
        loginAttempts: 3
        inviteLink: http://localhost:4242/invite-link/some-secret
        accountType: User
        isAPI: true
        createdAt: 2023-06-30T11:41:00.123Z
        seenAt: 2023-06-30T11:42:00.345Z
        rootRole: 1
        emailSent: false
        permissions:
        - permissions
        - permissions
        imageUrl: https://example.com/242x200.png
        name: User
        id: 123
        email: user@example.com
        username: hunter
    createUserResponseSchema:
      required:
      - id
      type: object
      properties:
        id:
          minimum: 0
          type: integer
          description: The user id
          example: 123
        isAPI:
          type: boolean
          description: '(Deprecated): Used internally to know which operations the
            user should be allowed to perform'
          example: true
          deprecated: true
        name:
          type: string
          description: Name of the user
          example: User
        email:
          type: string
          description: Email of the user
          example: user@example.com
        username:
          type: string
          description: A unique username for the user
          example: hunter
        imageUrl:
          type: string
          description: URL used for the userprofile image
          example: https://example.com/242x200.png
        inviteLink:
          type: string
          description: If the user is actively inviting other users, this is the link
            that can be shared with other users
          example: http://localhost:4242/invite-link/some-secret
        loginAttempts:
          minimum: 0
          type: integer
          description: How many unsuccessful attempts at logging in has the user made
          example: 3
        emailSent:
          type: boolean
          description: Is the welcome email sent to the user or not
          example: false
        rootRole:
          description: Which [root role](https://docs.getunleash.io/reference/rbac#standard-roles)
            this user is assigned. Usually a numeric role ID, but can be a string
            when returning newly created user with an explicit string role.
          oneOf:
          - minimum: 0
            type: integer
            example: 1
          - type: string
            example: Admin
            enum:
            - Admin
            - Editor
            - Viewer
            - Owner
            - Member
        seenAt:
          type: string
          description: The last time this user logged in
          format: date-time
          nullable: true
          example: 2023-06-30T11:42:00.345Z
        createdAt:
          type: string
          description: The user was created at this time
          format: date-time
          example: 2023-06-30T11:41:00.123Z
        accountType:
          type: string
          description: A user is either an actual User or a Service Account
          example: User
        permissions:
          type: array
          description: Deprecated
          items:
            type: string
      additionalProperties: false
      description: An Unleash user after creation
      example:
        loginAttempts: 3
        inviteLink: http://localhost:4242/invite-link/some-secret
        accountType: User
        isAPI: true
        createdAt: 2023-06-30T11:41:00.123Z
        seenAt: 2023-06-30T11:42:00.345Z
        rootRole: ""
        emailSent: false
        permissions:
        - permissions
        - permissions
        imageUrl: https://example.com/242x200.png
        name: User
        id: 123
        email: user@example.com
        username: hunter
    usersGroupsBaseSchema:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/groupSchema'
        users:
          type: array
          items:
            $ref: '#/components/schemas/userSchema'
      additionalProperties: false
      example:
        groups:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          projects:
          - projects
          - projects
          rootRole: 6.027456183070403
          createdBy: createdBy
          mappingsSSO:
          - mappingsSSO
          - mappingsSSO
          name: name
          description: description
          id: 0.8008281904610115
          users:
          - createdBy: createdBy
            joinedAt: 2000-01-23T04:56:07.000+00:00
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
          - createdBy: createdBy
            joinedAt: 2000-01-23T04:56:07.000+00:00
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
        - createdAt: 2000-01-23T04:56:07.000+00:00
          projects:
          - projects
          - projects
          rootRole: 6.027456183070403
          createdBy: createdBy
          mappingsSSO:
          - mappingsSSO
          - mappingsSSO
          name: name
          description: description
          id: 0.8008281904610115
          users:
          - createdBy: createdBy
            joinedAt: 2000-01-23T04:56:07.000+00:00
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
          - createdBy: createdBy
            joinedAt: 2000-01-23T04:56:07.000+00:00
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
        users:
        - loginAttempts: 3
          inviteLink: http://localhost:4242/invite-link/some-secret
          accountType: User
          isAPI: true
          createdAt: 2023-06-30T11:41:00.123Z
          seenAt: 2023-06-30T11:42:00.345Z
          rootRole: 1
          emailSent: false
          permissions:
          - permissions
          - permissions
          imageUrl: https://example.com/242x200.png
          name: User
          id: 123
          email: user@example.com
          username: hunter
        - loginAttempts: 3
          inviteLink: http://localhost:4242/invite-link/some-secret
          accountType: User
          isAPI: true
          createdAt: 2023-06-30T11:41:00.123Z
          seenAt: 2023-06-30T11:42:00.345Z
          rootRole: 1
          emailSent: false
          permissions:
          - permissions
          - permissions
          imageUrl: https://example.com/242x200.png
          name: User
          id: 123
          email: user@example.com
          username: hunter
    usersSchema:
      required:
      - users
      type: object
      properties:
        users:
          type: array
          description: A list of users in the Unleash instance.
          items:
            $ref: '#/components/schemas/userSchema'
        rootRoles:
          type: array
          description: A list of [root roles](https://docs.getunleash.io/reference/rbac#standard-roles)
            in the Unleash instance.
          items:
            $ref: '#/components/schemas/roleSchema'
      additionalProperties: false
      description: Users and root roles
      example:
        rootRoles:
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          id: 9
          type: global
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          id: 9
          type: global
        users:
        - loginAttempts: 3
          inviteLink: http://localhost:4242/invite-link/some-secret
          accountType: User
          isAPI: true
          createdAt: 2023-06-30T11:41:00.123Z
          seenAt: 2023-06-30T11:42:00.345Z
          rootRole: 1
          emailSent: false
          permissions:
          - permissions
          - permissions
          imageUrl: https://example.com/242x200.png
          name: User
          id: 123
          email: user@example.com
          username: hunter
        - loginAttempts: 3
          inviteLink: http://localhost:4242/invite-link/some-secret
          accountType: User
          isAPI: true
          createdAt: 2023-06-30T11:41:00.123Z
          seenAt: 2023-06-30T11:42:00.345Z
          rootRole: 1
          emailSent: false
          permissions:
          - permissions
          - permissions
          imageUrl: https://example.com/242x200.png
          name: User
          id: 123
          email: user@example.com
          username: hunter
    usersSearchSchema:
      type: array
      items:
        $ref: '#/components/schemas/userSchema'
    validatedEdgeTokensSchema:
      required:
      - tokens
      type: object
      properties:
        tokens:
          type: array
          description: The list of Unleash token objects. Each object contains the
            token itself and some additional metadata.
          items:
            $ref: '#/components/schemas/edgeTokenSchema'
      additionalProperties: false
      description: A object containing a list of valid Unleash tokens.
      example:
        tokens:
        - projects:
          - developerexperience
          - enterprisegrowth
          type: client
          token: '*:development.5c806b5320c88cf27e81f3e9b97dab298a77d5879316e3c2d806206b'
        - projects:
          - developerexperience
          - enterprisegrowth
          type: client
          token: '*:development.5c806b5320c88cf27e81f3e9b97dab298a77d5879316e3c2d806206b'
    validateFeatureSchema:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The feature name to validate.
          example: my-feature-3
      description: Data used to validate a feature toggle's name.
    validatePasswordSchema:
      required:
      - password
      type: object
      properties:
        password:
          type: string
          description: The password to validate
          example: hunter2
      additionalProperties: false
      description: Used to validate passwords obeying [Unleash password guidelines](https://docs.getunleash.io/reference/deploy/securing-unleash#password-requirements)
    validateTagTypeSchema:
      required:
      - tagType
      - valid
      type: object
      properties:
        valid:
          type: boolean
          description: Whether or not the tag type is valid.
          example: true
        tagType:
          $ref: '#/components/schemas/tagTypeSchema'
      description: The result of validating a tag type.
      example:
        valid: true
        tagType:
          name: color
          icon: not-really-used
          description: A tag type for describing the color of a tag.
    variantSchema:
      required:
      - name
      - weight
      type: object
      properties:
        name:
          type: string
          description: The variants name. Is unique for this feature toggle
          example: blue_group
        weight:
          maximum: 1000
          minimum: 0
          type: number
          description: The weight is the likelihood of any one user getting this variant.
            It is a number between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight)
            for more information
        weightType:
          type: string
          description: Set to fix if this variant must have exactly the weight allocated
            to it. If the type is variable, the weight will adjust so that the total
            weight of all variants adds up to 1000
          example: fix
        stickiness:
          type: string
          description: '[Stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness)
            is how Unleash guarantees that the same user gets the same variant every
            time'
          example: custom.context.field
        payload:
          $ref: '#/components/schemas/variantSchema_payload'
        overrides:
          type: array
          description: Overrides assigning specific variants to specific users. The
            weighting system automatically assigns users to specific groups for you,
            but any overrides in this list will take precedence.
          items:
            $ref: '#/components/schemas/overrideSchema'
      additionalProperties: false
      description: A variant allows for further separation of users into segments.
        See [our excellent documentation](https://docs.getunleash.io/reference/feature-toggle-variants#what-are-variants)
        for a more detailed description
      example:
        weightType: fix
        payload: '{"type":"json","value":"{color: red}"}'
        stickiness: custom.context.field
        name: blue_group
        weight: 602.7456183070403
        overrides:
        - contextName: userId
          values:
          - red
          - blue
        - contextName: userId
          values:
          - red
          - blue
    variantFlagSchema:
      type: object
      properties:
        name:
          type: string
        enabled:
          type: boolean
        payload:
          $ref: '#/components/schemas/variantFlagSchema_payload'
      additionalProperties: false
    variantsSchema:
      type: array
      items:
        $ref: '#/components/schemas/variantSchema'
    versionSchema:
      required:
      - current
      - instanceId
      - isLatest
      - latest
      type: object
      properties:
        current:
          $ref: '#/components/schemas/versionSchema_current'
        latest:
          $ref: '#/components/schemas/versionSchema_current'
        isLatest:
          type: boolean
        instanceId:
          type: string
      additionalProperties: false
      example:
        current:
          enterprise: enterprise
          oss: oss
        instanceId: instanceId
        isLatest: true
    projectOverviewSchema:
      required:
      - name
      - version
      type: object
      properties:
        stats:
          $ref: '#/components/schemas/projectStatsSchema'
        version:
          type: number
          example: 1
        name:
          type: string
          description: The name of this project
          example: dx-squad
        description:
          type: string
          description: Additional information about the project
          nullable: true
          example: DX squad feature release
        defaultStickiness:
          type: string
          description: A default stickiness for the project affecting the default
            stickiness value for variants and Gradual Rollout strategy
          example: userId
        mode:
          type: string
          description: The project's [collaboration mode](https://docs.getunleash.io/reference/project-collaboration-mode).
            Determines whether non-project members can submit change requests or not.
          example: open
          enum:
          - open
          - protected
        members:
          type: number
          description: The number of members this project has
          example: 4
        health:
          type: number
          description: An indicator of the [project's health](https://docs.getunleash.io/reference/technical-debt#health-rating)
            on a scale from 0 to 100
          example: 50
        environments:
          type: array
          description: The environments that are enabled for this project
          example:
          - environment: development
          - environment: production
            defaultStrategy:
              name: flexibleRollout
              constraints: []
              parameters:
                rollout: "50"
                stickiness: customAppName
                groupId: stickytoggle
          items:
            $ref: '#/components/schemas/projectEnvironmentSchema'
        features:
          type: array
          description: The full list of features in this project (excluding archived
            features)
          items:
            $ref: '#/components/schemas/featureSchema'
        updatedAt:
          type: string
          format: date-time
          nullable: true
          example: 2023-02-10T08:36:35.262Z
        createdAt:
          type: string
          format: date-time
          nullable: true
          example: 2023-02-10T08:36:35.262Z
        favorite:
          type: boolean
          description: '`true` if the project was favorited, otherwise `false`.'
          example: true
      additionalProperties: false
      description: A high-level overview of a project. It contains information such
        as project statistics, the name of the project, what members and what features
        it contains, etc.
      example:
        environments:
        - environment: development
        - environment: production
          defaultStrategy:
            name: flexibleRollout
            constraints: []
            parameters:
              rollout: "50"
              stickiness: customAppName
              groupId: stickytoggle
        defaultStickiness: userId
        description: DX squad feature release
        health: 50
        version: 1
        mode: open
        features:
        - lastSeenAt: 2023-01-28T16:21:39.975Z
          impressionData: false
          environments:
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          strategies:
          - {}
          - {}
          description: Controls disabling of the comments section in case of an incident
          project: dx-squad
          variants:
          - null
          - null
          type: kill-switch
          enabled: true
          tags:
          - type: simple
            value: a-tag-value
          - type: simple
            value: a-tag-value
          archived: true
          createdAt: 2023-01-28T15:21:39.975Z
          archivedAt: 2023-01-29T15:21:39.975Z
          stale: false
          name: disable-comments
          favorite: true
        - lastSeenAt: 2023-01-28T16:21:39.975Z
          impressionData: false
          environments:
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          - environment: environment
            featureName: disable-comments
            strategies:
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            - featureName: myAwesomeFeature
              sortOrder: 9999
              name: flexibleRollout
              disabled: false
              id: 6b5157cb-343a-41e7-bfa3-7b4ec3044840
              title: Gradual Rollout 25-Prod
              constraints:
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              - contextName: appName
                values:
                - my-app
                - my-other-app
                caseInsensitive: false
                inverted: false
                value: my-app
                operator: IN
              parameters:
                key: parameters
              segments:
              - 1
              - 2
            sortOrder: 3
            name: my-dev-env
            variants:
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            - weightType: fix
              payload: '{"type":"json","value":"{color: red}"}'
              stickiness: custom.context.field
              name: blue_group
              weight: 602.7456183070403
              overrides:
              - contextName: userId
                values:
                - red
                - blue
              - contextName: userId
                values:
                - red
                - blue
            type: development
            enabled: true
            variantCount: 0.8008281904610115
          strategies:
          - {}
          - {}
          description: Controls disabling of the comments section in case of an incident
          project: dx-squad
          variants:
          - null
          - null
          type: kill-switch
          enabled: true
          tags:
          - type: simple
            value: a-tag-value
          - type: simple
            value: a-tag-value
          archived: true
          createdAt: 2023-01-28T15:21:39.975Z
          archivedAt: 2023-01-29T15:21:39.975Z
          stale: false
          name: disable-comments
          favorite: true
        createdAt: 2023-02-10T08:36:35.262Z
        stats:
          archivedCurrentWindow: 5
          projectMembersAddedCurrentWindow: 1
          avgTimeToProdCurrentWindow: 10
          archivedPastWindow: 5
          createdCurrentWindow: 15
          createdPastWindow: 15
          projectActivityCurrentWindow: 100
          projectActivityPastWindow: 100
        members: 4
        name: dx-squad
        favorite: true
        updatedAt: 2023-02-10T08:36:35.262Z
    importTogglesSchema:
      required:
      - data
      - environment
      - project
      type: object
      properties:
        project:
          type: string
          description: The exported [project](https://docs.getunleash.io/reference/projects)
          example: My awesome project
        environment:
          type: string
          description: The exported [environment](https://docs.getunleash.io/reference/environments)
          example: development
        data:
          $ref: '#/components/schemas/exportResultSchema'
      additionalProperties: false
      description: The result of the export operation for a project and environment,
        used at import
    importTogglesValidateSchema:
      required:
      - errors
      - warnings
      type: object
      properties:
        errors:
          type: array
          description: A list of errors that prevent the provided data from being
            successfully imported.
          example:
          - message: 'You cannot import a feature that already exist in other projects.
              You already have the following features defined outside of project default:'
            affectedItems:
            - my-feature (in project project-854)
          items:
            $ref: '#/components/schemas/importTogglesValidateItemSchema'
        warnings:
          type: array
          description: A list of warnings related to the provided data.
          example:
          - message: 'The following strategy types will be used in import. Please
              make sure the strategy type parameters are configured as in source environment:'
            affectedItems:
            - custom-strategy-7
          items:
            $ref: '#/components/schemas/importTogglesValidateItemSchema'
        permissions:
          type: array
          description: Any additional permissions required to import the data. If
            the list is empty, you require no additional permissions beyond what your
            user already has.
          example: []
          items:
            $ref: '#/components/schemas/importTogglesValidateItemSchema'
      additionalProperties: false
      description: An object containing [feature import](https://docs.getunleash.io/reference/deploy/environment-import-export)
        validation results.
      example:
        permissions: []
        warnings:
        - message: 'The following strategy types will be used in import. Please make
            sure the strategy type parameters are configured as in source environment:'
          affectedItems:
          - custom-strategy-7
        errors:
        - message: 'You cannot import a feature that already exist in other projects.
            You already have the following features defined outside of project default:'
          affectedItems:
          - my-feature (in project project-854)
    importTogglesValidateItemSchema:
      required:
      - affectedItems
      - message
      type: object
      properties:
        message:
          type: string
          description: The validation error message
          example: 'You cannot import a feature that already exist in other projects.
            You already have the following features defined outside of project default:'
        affectedItems:
          type: array
          description: 'The items affected by this error message '
          example:
          - some-feature-a
          - some-feature-b
          items:
            type: string
      additionalProperties: false
      description: A description of an error or warning pertaining to a feature toggle
        import job.
    contextFieldStrategiesSchema:
      required:
      - strategies
      type: object
      properties:
        strategies:
          type: array
          description: List of strategies using the context field
          items:
            $ref: '#/components/schemas/contextFieldStrategiesSchema_strategies'
      description: A wrapper object containing all strategies that use a specific
        context field
      example:
        strategies:
        - strategyName: strategyName
          environment: environment
          featureName: best-feature
          id: 433ae8d9-dd69-4ad0-bc46-414aedbe9c55
          projectId: projectId
        - strategyName: strategyName
          environment: environment
          featureName: best-feature
          id: 433ae8d9-dd69-4ad0-bc46-414aedbe9c55
          projectId: projectId
    telemetrySettingsSchema:
      required:
      - featureInfoCollectionEnabled
      - versionInfoCollectionEnabled
      type: object
      properties:
        versionInfoCollectionEnabled:
          type: boolean
          description: Whether collection of version info is enabled/active.
          example: true
        featureInfoCollectionEnabled:
          type: boolean
          description: Whether collection of feature usage metrics is enabled/active.
          example: true
      additionalProperties: false
      description: Contains information about which settings are configured for version
        info collection and feature usage collection.
      example:
        featureInfoCollectionEnabled: true
        versionInfoCollectionEnabled: true
    adminPermissionSchema:
      required:
      - displayName
      - id
      - name
      - type
      type: object
      properties:
        id:
          type: integer
          description: The identifier for this permission
          example: 3
        name:
          type: string
          description: The name of this permission
          example: UPDATE_FEATURE
        displayName:
          type: string
          description: The name to display in listings of permissions
          example: Update feature toggles
        type:
          type: string
          description: What level this permission applies to. Either root, project
            or the name of the environment it applies to
          example: project
        environment:
          type: string
          description: Which environment this permission applies to
          example: development
      additionalProperties: false
      description: Describes a single permission
      example:
        environment: development
        displayName: Update feature toggles
        name: UPDATE_FEATURE
        id: 3
        type: project
    adminPermissionsSchema:
      required:
      - permissions
      - version
      type: object
      properties:
        permissions:
          $ref: '#/components/schemas/adminPermissionsSchema_permissions'
        version:
          minimum: 1
          type: integer
          description: The api version of this response. A natural increasing number.
            Only increases if format changes
          example: 1
          enum:
          - 1
          - 2
      additionalProperties: false
      description: What kind of permissions are available
      example:
        permissions:
          environments:
          - permissions:
            - null
            - null
            name: development
          - permissions:
            - null
            - null
            name: development
          root:
          - environment: development
            displayName: Update feature toggles
            name: UPDATE_FEATURE
            id: 3
            type: project
          - environment: development
            displayName: Update feature toggles
            name: UPDATE_FEATURE
            id: 3
            type: project
          project:
          - null
          - null
        version: 1
    adminSegmentSchema:
      required:
      - constraints
      - createdAt
      - id
      - name
      type: object
      properties:
        id:
          minimum: 0
          type: integer
          description: The ID of this segment
          example: 2
        name:
          type: string
          description: The name of this segment
          example: ios-users
        description:
          type: string
          description: The description for this segment
          nullable: true
          example: IOS users segment
        constraints:
          type: array
          description: The list of constraints that are used in this segment
          items:
            $ref: '#/components/schemas/constraintSchema'
        usedInFeatures:
          minimum: 0
          type: integer
          description: The number of projects that use this segment
          nullable: true
          example: 3
        usedInProjects:
          minimum: 0
          type: integer
          description: The number of projects that use this segment
          nullable: true
          example: 2
        project:
          type: string
          nullable: true
          example: red-vista
        createdBy:
          type: string
          description: The creator's email or username
          example: someone@example.com
        createdAt:
          type: string
          description: When the segment was created
          format: date-time
          example: 2023-04-12T11:13:31.96Z
      additionalProperties: false
      example:
        createdAt: 2023-04-12T11:13:31.96Z
        createdBy: someone@example.com
        name: ios-users
        description: IOS users segment
        project: red-vista
        usedInFeatures: 3
        id: 2
        constraints:
        - contextName: appName
          values:
          - my-app
          - my-other-app
          caseInsensitive: false
          inverted: false
          value: my-app
          operator: IN
        - contextName: appName
          values:
          - my-app
          - my-other-app
          caseInsensitive: false
          inverted: false
          value: my-app
          operator: IN
        usedInProjects: 2
    changeProjectSchema:
      required:
      - newProjectId
      type: object
      properties:
        newProjectId:
          type: string
          description: The project to move the feature toggle to.
          example: newProject
      description: Data required to move a feature toggle to a project.
    cloneEnvironmentSchema:
      required:
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: The name of the new cloned environment, this cannot be changed
            later
          example: development
        type:
          type: string
          description: Updates the type of environment (i.e. development or production).
          example: development
        projects:
          type: array
          description: A list of projects that should be included in the cloned environment.
          items:
            type: string
        clonePermissions:
          type: boolean
          description: Copies the RBAC permissions from the source environment if
            true. Defaults to true
    createEnvironmentSchema:
      required:
      - name
      - type
      type: object
      properties:
        name:
          pattern: ^[a-zA-Z0-9~_.-]+$
          type: string
          description: The name of the environment. Must be a URL-friendly string
            according to [RFC 3968, section 2.3](https://www.rfc-editor.org/rfc/rfc3986#section-2.3)
        type:
          minLength: 1
          type: string
          description: |-
            The [type of environment](https://docs.getunleash.io/reference/environments#environment-types) you would like to create. Unleash officially recognizes the following values:
            - `development`
            - `test`
            - `preproduction`
            - `production`

            If you pass a string that is not one of the recognized values, Unleash will accept it, but it will carry no special semantics.
        enabled:
          type: boolean
          description: Newly created environments are enabled by default. Set this
            property to `false` to create the environment in a disabled state.
        sortOrder:
          type: integer
          description: Defines where in the list of environments to place this environment.
            The list uses an ascending sort, so lower numbers are shown first. You
            can change this value later.
      description: Data required to create a new [environment](https://docs.getunleash.io/reference/environments)
    createProjectSchema:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        mode:
          type: string
          description: A mode of the project affecting what actions are possible in
            this project
          example: open
          enum:
          - open
          - protected
        defaultStickiness:
          type: string
          description: A default stickiness for the project affecting the default
            stickiness value for variants and Gradual Rollout strategy
          example: userId
    createRoleWithPermissionsSchema:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
          - root-custom
          - custom
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/createRoleWithPermissionsSchema_permissions'
    googleSettingsSchema:
      required:
      - clientId
      - clientSecret
      - unleashHostname
      type: object
      properties:
        enabled:
          type: boolean
          description: Is google OIDC enabled
          example: false
        clientId:
          type: string
          description: The google client id, used to authenticate against google
          example: your-client-id
        clientSecret:
          type: string
          description: The client secret used to authenticate the OAuth session used
            to log the user in
          example: your-client-secret
        unleashHostname:
          type: string
          description: Name of the host allowed to access the Google authentication
            flow
          example: localhost
        autoCreate:
          type: boolean
          description: Should Unleash create users based on the emails coming back
            in the authentication reply from Google
          example: true
        emailDomains:
          type: string
          description: A comma separated list of email domains that Unleash will auto
            create user accounts for.
          example: getunleash.io,unleash-hosted.com
      description: Configuration for using Google Authentication
      example:
        clientId: your-client-id
        unleashHostname: localhost
        emailDomains: getunleash.io,unleash-hosted.com
        clientSecret: your-client-secret
        autoCreate: true
        enabled: false
    invoicesSchema:
      type: array
      items:
        $ref: '#/components/schemas/invoicesSchema_inner'
    oidcSettingsSchema:
      required:
      - clientId
      - secret
      type: object
      properties:
        enabled:
          type: boolean
          description: '`true` if OpenID connect is turned on for this instance, otherwise
            `false`'
          example: true
        discoverUrl:
          type: string
          description: The [.well-known OpenID discover URL](https://swagger.io/docs/specification/authentication/openid-connect-discovery/)
          example: https://myoidchost.azure.com/.well-known/openid-configuration
        clientId:
          type: string
          description: The OIDC client ID of this application.
          example: FB87266D-CDDB-4BCF-BB1F-8392FD0EDC1B
        secret:
          type: string
          description: Shared secret from OpenID server. Used to authenticate login
            requests
          example: qjcVfeFjEfoYAF3AEsX2IMUWYuUzAbXO
        autoCreate:
          type: boolean
          description: Auto create users based on email addresses from login tokens
        enableSingleSignOut:
          type: boolean
          description: Support Single sign out when user clicks logout in Unleash.
            If `true` user is signed out of all OpenID Connect sessions against the
            clientId they may have active
        defaultRootRole:
          type: string
          description: '[Default role](https://docs.getunleash.io/reference/rbac#standard-roles)
            granted to users auto-created from email. Only relevant if autoCreate
            is `true`'
          enum:
          - Viewer
          - Editor
          - Admin
        emailDomains:
          type: string
          description: Comma separated list of email domains that are automatically
            approved for an account in the server. Only relevant if autoCreate is
            `true`
          example: getunleash.io,getunleash.ai
        acrValues:
          type: string
          description: "Authentication Context Class Reference, used to request extra\
            \ values in the acr claim returned from the server. If multiple values\
            \ are required, they should be space separated. \n Consult [the OIDC reference](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint)\
            \ for more information \n"
          example: urn:okta:loa:2fa:any phr
        idTokenSigningAlgorithm:
          type: string
          description: The signing algorithm used to sign our token. Refer to the
            [JWT signatures](https://jwt.io/introduction) documentation for more information.
          example: RS256
          enum:
          - RS256
          - RS384
          - RS512
      description: Settings for configuring OpenID Connect as a login provider for
        Unleash
      example:
        acrValues: urn:okta:loa:2fa:any phr
        clientId: FB87266D-CDDB-4BCF-BB1F-8392FD0EDC1B
        emailDomains: getunleash.io,getunleash.ai
        autoCreate: true
        enableSingleSignOut: true
        secret: qjcVfeFjEfoYAF3AEsX2IMUWYuUzAbXO
        defaultRootRole: Viewer
        discoverUrl: https://myoidchost.azure.com/.well-known/openid-configuration
        enabled: true
        idTokenSigningAlgorithm: RS256
    passwordAuthSchema:
      type: object
      properties:
        enabled:
          type: boolean
          description: Is username/password authentication enabled
          example: false
      description: Does the server allow username/password authentication
      example:
        enabled: false
    projectUsersSchema:
      required:
      - roles
      - users
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/userWithProjectRoleSchema'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/roleSchema'
      additionalProperties: false
      example:
        roles:
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          id: 9
          type: global
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          id: 9
          type: global
        users:
        - addedAt: 2000-01-23T04:56:07.000+00:00
          roleId: 6.027456183070403
          imageUrl: imageUrl
          name: name
          id: 0.8008281904610115
          isAPI: true
          email: email
        - addedAt: 2000-01-23T04:56:07.000+00:00
          roleId: 6.027456183070403
          imageUrl: imageUrl
          name: name
          id: 0.8008281904610115
          isAPI: true
          email: email
    projectAccessSchema:
      required:
      - groups
      - roles
      - users
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/groupSchema'
        users:
          type: array
          items:
            $ref: '#/components/schemas/userWithProjectRoleSchema'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/roleSchema'
      additionalProperties: false
      example:
        roles:
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          id: 9
          type: global
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          id: 9
          type: global
        groups:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          projects:
          - projects
          - projects
          rootRole: 6.027456183070403
          createdBy: createdBy
          mappingsSSO:
          - mappingsSSO
          - mappingsSSO
          name: name
          description: description
          id: 0.8008281904610115
          users:
          - createdBy: createdBy
            joinedAt: 2000-01-23T04:56:07.000+00:00
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
          - createdBy: createdBy
            joinedAt: 2000-01-23T04:56:07.000+00:00
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
        - createdAt: 2000-01-23T04:56:07.000+00:00
          projects:
          - projects
          - projects
          rootRole: 6.027456183070403
          createdBy: createdBy
          mappingsSSO:
          - mappingsSSO
          - mappingsSSO
          name: name
          description: description
          id: 0.8008281904610115
          users:
          - createdBy: createdBy
            joinedAt: 2000-01-23T04:56:07.000+00:00
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
          - createdBy: createdBy
            joinedAt: 2000-01-23T04:56:07.000+00:00
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
        users:
        - addedAt: 2000-01-23T04:56:07.000+00:00
          roleId: 6.027456183070403
          imageUrl: imageUrl
          name: name
          id: 0.8008281904610115
          isAPI: true
          email: email
        - addedAt: 2000-01-23T04:56:07.000+00:00
          roleId: 6.027456183070403
          imageUrl: imageUrl
          name: name
          id: 0.8008281904610115
          isAPI: true
          email: email
    projectCreatedSchema:
      required:
      - id
      - name
      type: object
      properties:
        id:
          pattern: '[A-Za-z0-9_~.-]+'
          type: string
          description: The project's identifier.
          example: pet-shop
        name:
          minLength: 1
          type: string
          description: The project's name.
          example: Pet shop
        description:
          type: string
          description: The project's description.
          nullable: true
          example: This project contains features related to the new pet shop.
        mode:
          type: string
          description: A mode of the project affecting what actions are possible in
            this project
          example: open
          enum:
          - open
          - protected
        defaultStickiness:
          type: string
          description: A default stickiness for the project affecting the default
            stickiness value for variants and Gradual Rollout strategy
          example: userId
      additionalProperties: false
      description: Details about the newly created project.
      example:
        mode: open
        name: Pet shop
        defaultStickiness: userId
        description: This project contains features related to the new pet shop.
        id: pet-shop
    projectsOverviewSchema:
      required:
      - featureCount
      - memberCount
      - projects
      type: object
      properties:
        featureCount:
          type: number
        memberCount:
          type: number
        projects:
          type: array
          items:
            $ref: '#/components/schemas/projectSchema'
      additionalProperties: false
    roleWithPermissionsSchema:
      required:
      - id
      - name
      - permissions
      - type
      type: object
      properties:
        id:
          type: number
        type:
          type: string
        name:
          type: string
        description:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/adminPermissionSchema'
      additionalProperties: false
      example:
        permissions:
        - environment: development
          displayName: Update feature toggles
          name: UPDATE_FEATURE
          id: 3
          type: project
        - environment: development
          displayName: Update feature toggles
          name: UPDATE_FEATURE
          id: 3
          type: project
        name: name
        description: description
        id: 0.8008281904610115
        type: type
    roleWithVersionSchema:
      required:
      - roles
      - version
      type: object
      properties:
        version:
          type: number
        roles:
          $ref: '#/components/schemas/roleSchema'
      additionalProperties: false
      example:
        roles:
          name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          id: 9
          type: global
        version: 0.8008281904610115
    rolesWithVersionSchema:
      required:
      - roles
      - version
      type: object
      properties:
        version:
          type: number
        roles:
          type: array
          items:
            $ref: '#/components/schemas/roleSchema'
      additionalProperties: false
      example:
        roles:
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          id: 9
          type: global
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          id: 9
          type: global
        version: 0.8008281904610115
    samlSettingsSchema:
      required:
      - certificate
      - entityId
      - signOnUrl
      type: object
      properties:
        enabled:
          type: boolean
          description: Is SAML authentication enabled
          example: true
        entityId:
          type: string
          description: The SAML 2.0 entity ID
          example: http://localhost:8080/auth/realms/master
        signOnUrl:
          type: string
          description: Which URL to use for Single Sign On
          example: http://localhost:8080/auth/realms/master/protocol/saml
        certificate:
          type: string
          description: The X509 certificate used to validate requests
          example: |
            MIIE/zCCBGgCAg4CMA0GCSqGSIb3DQEBBQUAMIGbMQswCQYDVQQGEwJKUDEOMAwG
            A1UECBMFVG9reW8xEDAOBgNVBAcTB0NodW8ta3UxETAPBgNVBAoTCEZyYW5rNERE
            MRgwFgYDVQQLEw9XZWJDZXJ0IFN1cHBvcnQxGDAWBgNVBAMTD0ZyYW5rNEREIFdl
            YiBDQTEjMCEGCSqGSIb3DQEJARYUc3VwcG9ydEBmcmFuazRkZC5jb20wHhcNMTIw
            ODIyMDcyNzIyWhcNMTcwODIxMDcyNzIyWjBKMQswCQYDVQQGEwJKUDEOMAwGA1UE
            CAwFVG9reW8xETAPBgNVBAoMCEZyYW5rNEREMRgwFgYDVQQDDA93d3cuZXhhbXBs
            ZS5jb20wggNHMIICOQYHKoZIzjgEATCCAiwCggEBAMbmu6uSdZWRxnO5PteARz5I
            nrdM7vJadzJcY9Spf0cAhUDWyINCrUDn8h8QjbMiAxd+E7v5N85TbfvrW+/g7lYa
            e7DB0uX02Rw29yoK+TE/znNTNq6HdPn/H4ll77uJqpkWgQwXgAQ3qDKRv96QaTfr
            fSXYRxG9NvKzUBs9S7Woby7K6Pgh7/EmgeiOHKSX49XD+ihvkFRSFdeL5qV5hzDf
            epfk8Ghl0cyK9jpM/yKlRuUUkP1pSMwUrCrptyRpqqXmam0UfFuFhMT2SJyNTyo2
            SfnyZb78lbYcVLJQLJA+O3l469eOH3Odv/Pq7bvOstBKg96Q7imz5t0honf63EMC
            IQCw7FeY0QQbxWYy+MI8/0m2kiRzIruA8RUPcEs4il1mwwKCAQB4W3QLepQRTWhR
            69Xv+fC5JLEDyngw9KEalKorlg6o4Z9hASMbFMwECjlXZCxKd/NFjUMbtPcrMCoa
            /KuaqRvHLs2bqe94X5VR4lWCv0SgOunKBj58jnVuN/OkkLu4cSZQ/jia/yPkdcMv
            w8ZjF7zjPXGVhh9XC0QU9ipVfrreGaBSN+0zODKY5TyQI84FsZFZNetOTIT0HT2S
            fIDRGYaL/0xMfQx070Z07cdTTuibzJHVr38qjKqEDiwAUyjXVdE+GJ15ZD4d56Ef
            0qgRpzDmuvUjOtv1t8Hr2O2HTABqRMtAKZsLEVPjwnpKpcStixfg0uIPGVIKbej4
            FzHHpO6bA4IBBgACggEBAJNRaaTFe253sOVm/JmUgsO1QB5GI5hOEWLpC8KHxgwn
            nf/GQUaJLrN8TT4hXgJM2CdvdAkY6et1HpT6BUoz1cYTgsE3ToIsbH3SzPJvU7jz
            cPOvY1jQv+xVBrU8Ydw2D8pydbAcw/L6JZnGpFBqeHa1iFAQc0B8ToXEgxnmGAdP
            IOAKAHX0S4m6CrP5fKwYbmzu8WuWO4bRqvX7QJofrs2RaGFESulw0VrMFffJ/guf
            HTvhDaMW7TSCKo1tBZK9SdEbWCQN2stnfnRSyZFQ+v02oyQtLg+3vSuCx4PS9DM9
            /Uh3r9JDDH3GveUMbqw8Dmy6WH9iV3oOJt8aVF8F4CMwDQYJKoZIhvcNAQEFBQAD
            gYEAbxDoJM8vKVfhltpfG3YXmBKnoGb2UpdKpcjmxMt1/yX8lWJaRBwUDeiDqjVC
            JGi9gXO2SDAtXl7GI1cXTs/l7QlmoTmnc6kDwqk3pl6jC72rQH3E/Fpg7hBkSWL9
            3V1dbLU5id63lVD8sUEULyfWFGk3L+Uka5oiSsxwZhdIb/Q=
        signOutUrl:
          type: string
          description: Which URL to use for Single Sign Out
          example: http://localhost:8080/auth/realms/master/protocol/saml
        spCertificate:
          type: string
          description: Signing certificate for sign out requests
          example: |
            MIIE/zCCBGgCAg4CMA0GCSqGSIb3DQEBBQUAMIGbMQswCQYDVQQGEwJKUDEOMAwG
            A1UECBMFVG9reW8xEDAOBgNVBAcTB0NodW8ta3UxETAPBgNVBAoTCEZyYW5rNERE
            MRgwFgYDVQQLEw9XZWJDZXJ0IFN1cHBvcnQxGDAWBgNVBAMTD0ZyYW5rNEREIFdl
            YiBDQTEjMCEGCSqGSIb3DQEJARYUc3VwcG9ydEBmcmFuazRkZC5jb20wHhcNMTIw
            ODIyMDcyNzIyWhcNMTcwODIxMDcyNzIyWjBKMQswCQYDVQQGEwJKUDEOMAwGA1UE
            CAwFVG9reW8xETAPBgNVBAoMCEZyYW5rNEREMRgwFgYDVQQDDA93d3cuZXhhbXBs
            ZS5jb20wggNHMIICOQYHKoZIzjgEATCCAiwCggEBAMbmu6uSdZWRxnO5PteARz5I
            nrdM7vJadzJcY9Spf0cAhUDWyINCrUDn8h8QjbMiAxd+E7v5N85TbfvrW+/g7lYa
            e7DB0uX02Rw29yoK+TE/znNTNq6HdPn/H4ll77uJqpkWgQwXgAQ3qDKRv96QaTfr
            fSXYRxG9NvKzUBs9S7Woby7K6Pgh7/EmgeiOHKSX49XD+ihvkFRSFdeL5qV5hzDf
            epfk8Ghl0cyK9jpM/yKlRuUUkP1pSMwUrCrptyRpqqXmam0UfFuFhMT2SJyNTyo2
            SfnyZb78lbYcVLJQLJA+O3l469eOH3Odv/Pq7bvOstBKg96Q7imz5t0honf63EMC
            IQCw7FeY0QQbxWYy+MI8/0m2kiRzIruA8RUPcEs4il1mwwKCAQB4W3QLepQRTWhR
            69Xv+fC5JLEDyngw9KEalKorlg6o4Z9hASMbFMwECjlXZCxKd/NFjUMbtPcrMCoa
            /KuaqRvHLs2bqe94X5VR4lWCv0SgOunKBj58jnVuN/OkkLu4cSZQ/jia/yPkdcMv
            w8ZjF7zjPXGVhh9XC0QU9ipVfrreGaBSN+0zODKY5TyQI84FsZFZNetOTIT0HT2S
            fIDRGYaL/0xMfQx070Z07cdTTuibzJHVr38qjKqEDiwAUyjXVdE+GJ15ZD4d56Ef
            0qgRpzDmuvUjOtv1t8Hr2O2HTABqRMtAKZsLEVPjwnpKpcStixfg0uIPGVIKbej4
            FzHHpO6bA4IBBgACggEBAJNRaaTFe253sOVm/JmUgsO1QB5GI5hOEWLpC8KHxgwn
            nf/GQUaJLrN8TT4hXgJM2CdvdAkY6et1HpT6BUoz1cYTgsE3ToIsbH3SzPJvU7jz
            cPOvY1jQv+xVBrU8Ydw2D8pydbAcw/L6JZnGpFBqeHa1iFAQc0B8ToXEgxnmGAdP
            IOAKAHX0S4m6CrP5fKwYbmzu8WuWO4bRqvX7QJofrs2RaGFESulw0VrMFffJ/guf
            HTvhDaMW7TSCKo1tBZK9SdEbWCQN2stnfnRSyZFQ+v02oyQtLg+3vSuCx4PS9DM9
            /Uh3r9JDDH3GveUMbqw8Dmy6WH9iV3oOJt8aVF8F4CMwDQYJKoZIhvcNAQEFBQAD
            gYEAbxDoJM8vKVfhltpfG3YXmBKnoGb2UpdKpcjmxMt1/yX8lWJaRBwUDeiDqjVC
            JGi9gXO2SDAtXl7GI1cXTs/l7QlmoTmnc6kDwqk3pl6jC72rQH3E/Fpg7hBkSWL9
            3V1dbLU5id63lVD8sUEULyfWFGk3L+Uka5oiSsxwZhdIb/Q=
        autoCreate:
          type: boolean
          description: Should Unleash create users based on the emails coming back
            in the authentication reply from the SAML server
          example: true
        emailDomains:
          type: string
          description: A comma separated list of email domains that Unleash will auto
            create user accounts for.
          example: getunleash.io,unleash-hosted.com
        defaultRootRole:
          type: string
          description: Assign this root role to auto created users
          example: Editor
          enum:
          - Viewer
          - Editor
          - Admin
      description: Settings used to authenticate via SAML
      example:
        signOutUrl: http://localhost:8080/auth/realms/master/protocol/saml
        spCertificate: |
          MIIE/zCCBGgCAg4CMA0GCSqGSIb3DQEBBQUAMIGbMQswCQYDVQQGEwJKUDEOMAwG
          A1UECBMFVG9reW8xEDAOBgNVBAcTB0NodW8ta3UxETAPBgNVBAoTCEZyYW5rNERE
          MRgwFgYDVQQLEw9XZWJDZXJ0IFN1cHBvcnQxGDAWBgNVBAMTD0ZyYW5rNEREIFdl
          YiBDQTEjMCEGCSqGSIb3DQEJARYUc3VwcG9ydEBmcmFuazRkZC5jb20wHhcNMTIw
          ODIyMDcyNzIyWhcNMTcwODIxMDcyNzIyWjBKMQswCQYDVQQGEwJKUDEOMAwGA1UE
          CAwFVG9reW8xETAPBgNVBAoMCEZyYW5rNEREMRgwFgYDVQQDDA93d3cuZXhhbXBs
          ZS5jb20wggNHMIICOQYHKoZIzjgEATCCAiwCggEBAMbmu6uSdZWRxnO5PteARz5I
          nrdM7vJadzJcY9Spf0cAhUDWyINCrUDn8h8QjbMiAxd+E7v5N85TbfvrW+/g7lYa
          e7DB0uX02Rw29yoK+TE/znNTNq6HdPn/H4ll77uJqpkWgQwXgAQ3qDKRv96QaTfr
          fSXYRxG9NvKzUBs9S7Woby7K6Pgh7/EmgeiOHKSX49XD+ihvkFRSFdeL5qV5hzDf
          epfk8Ghl0cyK9jpM/yKlRuUUkP1pSMwUrCrptyRpqqXmam0UfFuFhMT2SJyNTyo2
          SfnyZb78lbYcVLJQLJA+O3l469eOH3Odv/Pq7bvOstBKg96Q7imz5t0honf63EMC
          IQCw7FeY0QQbxWYy+MI8/0m2kiRzIruA8RUPcEs4il1mwwKCAQB4W3QLepQRTWhR
          69Xv+fC5JLEDyngw9KEalKorlg6o4Z9hASMbFMwECjlXZCxKd/NFjUMbtPcrMCoa
          /KuaqRvHLs2bqe94X5VR4lWCv0SgOunKBj58jnVuN/OkkLu4cSZQ/jia/yPkdcMv
          w8ZjF7zjPXGVhh9XC0QU9ipVfrreGaBSN+0zODKY5TyQI84FsZFZNetOTIT0HT2S
          fIDRGYaL/0xMfQx070Z07cdTTuibzJHVr38qjKqEDiwAUyjXVdE+GJ15ZD4d56Ef
          0qgRpzDmuvUjOtv1t8Hr2O2HTABqRMtAKZsLEVPjwnpKpcStixfg0uIPGVIKbej4
          FzHHpO6bA4IBBgACggEBAJNRaaTFe253sOVm/JmUgsO1QB5GI5hOEWLpC8KHxgwn
          nf/GQUaJLrN8TT4hXgJM2CdvdAkY6et1HpT6BUoz1cYTgsE3ToIsbH3SzPJvU7jz
          cPOvY1jQv+xVBrU8Ydw2D8pydbAcw/L6JZnGpFBqeHa1iFAQc0B8ToXEgxnmGAdP
          IOAKAHX0S4m6CrP5fKwYbmzu8WuWO4bRqvX7QJofrs2RaGFESulw0VrMFffJ/guf
          HTvhDaMW7TSCKo1tBZK9SdEbWCQN2stnfnRSyZFQ+v02oyQtLg+3vSuCx4PS9DM9
          /Uh3r9JDDH3GveUMbqw8Dmy6WH9iV3oOJt8aVF8F4CMwDQYJKoZIhvcNAQEFBQAD
          gYEAbxDoJM8vKVfhltpfG3YXmBKnoGb2UpdKpcjmxMt1/yX8lWJaRBwUDeiDqjVC
          JGi9gXO2SDAtXl7GI1cXTs/l7QlmoTmnc6kDwqk3pl6jC72rQH3E/Fpg7hBkSWL9
          3V1dbLU5id63lVD8sUEULyfWFGk3L+Uka5oiSsxwZhdIb/Q=
        certificate: |
          MIIE/zCCBGgCAg4CMA0GCSqGSIb3DQEBBQUAMIGbMQswCQYDVQQGEwJKUDEOMAwG
          A1UECBMFVG9reW8xEDAOBgNVBAcTB0NodW8ta3UxETAPBgNVBAoTCEZyYW5rNERE
          MRgwFgYDVQQLEw9XZWJDZXJ0IFN1cHBvcnQxGDAWBgNVBAMTD0ZyYW5rNEREIFdl
          YiBDQTEjMCEGCSqGSIb3DQEJARYUc3VwcG9ydEBmcmFuazRkZC5jb20wHhcNMTIw
          ODIyMDcyNzIyWhcNMTcwODIxMDcyNzIyWjBKMQswCQYDVQQGEwJKUDEOMAwGA1UE
          CAwFVG9reW8xETAPBgNVBAoMCEZyYW5rNEREMRgwFgYDVQQDDA93d3cuZXhhbXBs
          ZS5jb20wggNHMIICOQYHKoZIzjgEATCCAiwCggEBAMbmu6uSdZWRxnO5PteARz5I
          nrdM7vJadzJcY9Spf0cAhUDWyINCrUDn8h8QjbMiAxd+E7v5N85TbfvrW+/g7lYa
          e7DB0uX02Rw29yoK+TE/znNTNq6HdPn/H4ll77uJqpkWgQwXgAQ3qDKRv96QaTfr
          fSXYRxG9NvKzUBs9S7Woby7K6Pgh7/EmgeiOHKSX49XD+ihvkFRSFdeL5qV5hzDf
          epfk8Ghl0cyK9jpM/yKlRuUUkP1pSMwUrCrptyRpqqXmam0UfFuFhMT2SJyNTyo2
          SfnyZb78lbYcVLJQLJA+O3l469eOH3Odv/Pq7bvOstBKg96Q7imz5t0honf63EMC
          IQCw7FeY0QQbxWYy+MI8/0m2kiRzIruA8RUPcEs4il1mwwKCAQB4W3QLepQRTWhR
          69Xv+fC5JLEDyngw9KEalKorlg6o4Z9hASMbFMwECjlXZCxKd/NFjUMbtPcrMCoa
          /KuaqRvHLs2bqe94X5VR4lWCv0SgOunKBj58jnVuN/OkkLu4cSZQ/jia/yPkdcMv
          w8ZjF7zjPXGVhh9XC0QU9ipVfrreGaBSN+0zODKY5TyQI84FsZFZNetOTIT0HT2S
          fIDRGYaL/0xMfQx070Z07cdTTuibzJHVr38qjKqEDiwAUyjXVdE+GJ15ZD4d56Ef
          0qgRpzDmuvUjOtv1t8Hr2O2HTABqRMtAKZsLEVPjwnpKpcStixfg0uIPGVIKbej4
          FzHHpO6bA4IBBgACggEBAJNRaaTFe253sOVm/JmUgsO1QB5GI5hOEWLpC8KHxgwn
          nf/GQUaJLrN8TT4hXgJM2CdvdAkY6et1HpT6BUoz1cYTgsE3ToIsbH3SzPJvU7jz
          cPOvY1jQv+xVBrU8Ydw2D8pydbAcw/L6JZnGpFBqeHa1iFAQc0B8ToXEgxnmGAdP
          IOAKAHX0S4m6CrP5fKwYbmzu8WuWO4bRqvX7QJofrs2RaGFESulw0VrMFffJ/guf
          HTvhDaMW7TSCKo1tBZK9SdEbWCQN2stnfnRSyZFQ+v02oyQtLg+3vSuCx4PS9DM9
          /Uh3r9JDDH3GveUMbqw8Dmy6WH9iV3oOJt8aVF8F4CMwDQYJKoZIhvcNAQEFBQAD
          gYEAbxDoJM8vKVfhltpfG3YXmBKnoGb2UpdKpcjmxMt1/yX8lWJaRBwUDeiDqjVC
          JGi9gXO2SDAtXl7GI1cXTs/l7QlmoTmnc6kDwqk3pl6jC72rQH3E/Fpg7hBkSWL9
          3V1dbLU5id63lVD8sUEULyfWFGk3L+Uka5oiSsxwZhdIb/Q=
        emailDomains: getunleash.io,unleash-hosted.com
        entityId: http://localhost:8080/auth/realms/master
        autoCreate: true
        defaultRootRole: Editor
        enabled: true
        signOnUrl: http://localhost:8080/auth/realms/master/protocol/saml
    adminStrategiesSchema:
      required:
      - strategies
      type: object
      properties:
        strategies:
          type: array
          description: The list of strategies
          items:
            $ref: '#/components/schemas/adminStrategiesSchema_strategies'
      description: A collection of strategies belonging to a specified segment.
      example:
        strategies:
        - strategyName: flexibleRollout
          environment: development
          featureName: new-signup-flow
          id: e465c813-cffb-4232-b184-82b1d6fe9d3d
          projectId: red-vista
        - strategyName: flexibleRollout
          environment: development
          featureName: new-signup-flow
          id: e465c813-cffb-4232-b184-82b1d6fe9d3d
          projectId: red-vista
    segmentsSchema:
      type: object
      properties:
        segments:
          type: array
          items:
            $ref: '#/components/schemas/adminSegmentSchema'
      example:
        segments:
        - createdAt: 2023-04-12T11:13:31.96Z
          createdBy: someone@example.com
          name: ios-users
          description: IOS users segment
          project: red-vista
          usedInFeatures: 3
          id: 2
          constraints:
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          usedInProjects: 2
        - createdAt: 2023-04-12T11:13:31.96Z
          createdBy: someone@example.com
          name: ios-users
          description: IOS users segment
          project: red-vista
          usedInFeatures: 3
          id: 2
          constraints:
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          - contextName: appName
            values:
            - my-app
            - my-other-app
            caseInsensitive: false
            inverted: false
            value: my-app
            operator: IN
          usedInProjects: 2
    updateEnvironmentSchema:
      type: object
      properties:
        type:
          type: string
          description: Updates the type of environment (i.e. development or production).
        sortOrder:
          type: integer
          description: Changes the sort order of this environment.
    updateFeatureStrategySegmentsSchema:
      required:
      - environmentId
      - projectId
      - segmentIds
      - strategyId
      type: object
      properties:
        projectId:
          type: string
          description: The ID of the project that the strategy belongs to.
          example: red-vista
        strategyId:
          type: string
          description: The ID of the strategy to update segments for.
          example: 15d1e20b-6310-4e17-a0c2-9fb84de3053a
        environmentId:
          type: string
          description: The ID of the strategy environment.
          example: development
        segmentIds:
          type: array
          description: The new list of segments (IDs) to use for this strategy. Any
            segments not in this list will be removed from the strategy.
          example:
          - 1
          - 5
          - 6
          items:
            minimum: 0
            type: integer
      description: Data required to update segments for a strategy.
      example:
        environmentId: development
        strategyId: 15d1e20b-6310-4e17-a0c2-9fb84de3053a
        projectId: red-vista
        segmentIds:
        - 1
        - 5
        - 6
    updateProjectSchema:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    userWithProjectRoleSchema:
      required:
      - id
      - isAPI
      type: object
      properties:
        isAPI:
          type: boolean
        name:
          type: string
        email:
          type: string
          nullable: true
        id:
          type: number
        imageUrl:
          type: string
          nullable: true
        addedAt:
          type: string
          format: date-time
        roleId:
          type: number
      example:
        addedAt: 2000-01-23T04:56:07.000+00:00
        roleId: 6.027456183070403
        imageUrl: imageUrl
        name: name
        id: 0.8008281904610115
        isAPI: true
        email: email
    validateProjectSchema:
      required:
      - id
      type: object
      properties:
        id:
          type: string
    projectSettingsSchema:
      required:
      - defaultStickiness
      - mode
      type: object
      properties:
        defaultStickiness:
          type: string
          description: Default stickiness for project
          nullable: true
          enum:
          - default
          - sessionId
          - userId
          - random
        mode:
          type: string
          nullable: true
          enum:
          - open
          - protected
      additionalProperties: false
      example:
        mode: open
        defaultStickiness: default
    changeRequestStateSchema:
      required:
      - state
      type: object
      properties:
        state:
          type: string
          enum:
          - Draft
          - In review
          - Approved
          - Applied
          - Cancelled
        comment:
          type: string
          example: This is a comment for my change request
      additionalProperties: false
    serviceAccountSchema:
      required:
      - id
      type: object
      properties:
        id:
          type: number
          description: The service account id
          example: 54321
        isAPI:
          type: boolean
          description: 'Deprecated: for internal use only, should not be exposed through
            the API'
          example: false
          deprecated: true
        name:
          type: string
          description: The name of the service account
          example: My Service Account
        email:
          type: string
          description: 'Deprecated: service accounts don''t have emails associated
            with them'
          example: noemail@getunleash.io
          deprecated: true
        username:
          type: string
          description: The service account username
          example: my-service-account
        imageUrl:
          type: string
          description: The service account image url
          example: https://example.com/my-service-account.png
        inviteLink:
          type: string
          description: 'Deprecated: service accounts cannot be invited via an invitation
            link'
          example: https://example.com/invite-link
          deprecated: true
        loginAttempts:
          type: number
          description: 'Deprecated: service accounts cannot log in to Unleash'
          example: 0
          deprecated: true
        emailSent:
          type: boolean
          description: 'Deprecated: internal use only'
          example: false
          deprecated: true
        rootRole:
          type: integer
          description: The root role id associated with the service account
          example: 1
        seenAt:
          type: string
          description: Deprecated. This property is always `null`. To find out when
            a service account was last seen, check its `tokens` list and refer to
            each token's `lastSeen` property instead.
          format: date-time
          nullable: true
          deprecated: true
        createdAt:
          type: string
          description: The service account creation date
          format: date-time
          example: 2021-01-01T00:00:00Z
        tokens:
          type: array
          description: The list of tokens associated with the service account
          items:
            $ref: '#/components/schemas/patSchema'
      additionalProperties: false
      description: Represents a [service account](https://docs.getunleash.io/reference/service-accounts).
        Service accounts are used to let systems interact with the Unleash API.
      example:
        loginAttempts: 0
        inviteLink: https://example.com/invite-link
        isAPI: false
        createdAt: 2021-01-01T00:00:00Z
        seenAt: 2000-01-23T04:56:07.000+00:00
        rootRole: 1
        emailSent: false
        imageUrl: https://example.com/my-service-account.png
        name: My Service Account
        tokens:
        - createdAt: 2023-04-19T08:15:14Z
          seenAt: 2023-04-19T08:15:14Z
          id: 1
          secret: user:xyzrandomstring
          expiresAt: 2023-04-19T08:15:14Z
        - createdAt: 2023-04-19T08:15:14Z
          seenAt: 2023-04-19T08:15:14Z
          id: 1
          secret: user:xyzrandomstring
          expiresAt: 2023-04-19T08:15:14Z
        id: 54321
        email: noemail@getunleash.io
        username: my-service-account
    serviceAccountsSchema:
      required:
      - serviceAccounts
      type: object
      properties:
        serviceAccounts:
          type: array
          description: A list of service accounts
          items:
            $ref: '#/components/schemas/serviceAccountSchema'
        rootRoles:
          type: array
          description: A list of root roles that are referenced from service account
            objects in the `serviceAccounts` list
          items:
            $ref: '#/components/schemas/roleSchema'
      additionalProperties: false
      description: Represents a list of service accounts, and includes a list of root
        roles they reference
      example:
        rootRoles:
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          id: 9
          type: global
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          id: 9
          type: global
        serviceAccounts:
        - loginAttempts: 0
          inviteLink: https://example.com/invite-link
          isAPI: false
          createdAt: 2021-01-01T00:00:00Z
          seenAt: 2000-01-23T04:56:07.000+00:00
          rootRole: 1
          emailSent: false
          imageUrl: https://example.com/my-service-account.png
          name: My Service Account
          tokens:
          - createdAt: 2023-04-19T08:15:14Z
            seenAt: 2023-04-19T08:15:14Z
            id: 1
            secret: user:xyzrandomstring
            expiresAt: 2023-04-19T08:15:14Z
          - createdAt: 2023-04-19T08:15:14Z
            seenAt: 2023-04-19T08:15:14Z
            id: 1
            secret: user:xyzrandomstring
            expiresAt: 2023-04-19T08:15:14Z
          id: 54321
          email: noemail@getunleash.io
          username: my-service-account
        - loginAttempts: 0
          inviteLink: https://example.com/invite-link
          isAPI: false
          createdAt: 2021-01-01T00:00:00Z
          seenAt: 2000-01-23T04:56:07.000+00:00
          rootRole: 1
          emailSent: false
          imageUrl: https://example.com/my-service-account.png
          name: My Service Account
          tokens:
          - createdAt: 2023-04-19T08:15:14Z
            seenAt: 2023-04-19T08:15:14Z
            id: 1
            secret: user:xyzrandomstring
            expiresAt: 2023-04-19T08:15:14Z
          - createdAt: 2023-04-19T08:15:14Z
            seenAt: 2023-04-19T08:15:14Z
            id: 1
            secret: user:xyzrandomstring
            expiresAt: 2023-04-19T08:15:14Z
          id: 54321
          email: noemail@getunleash.io
          username: my-service-account
    createServiceAccountSchema:
      required:
      - rootRole
      type: object
      properties:
        username:
          type: string
          description: The username of the service account
          example: service-account-1
        name:
          type: string
          description: The name of the service account
          example: Service Account 1
        rootRole:
          type: integer
          description: The id of the root role for the service account
          example: 1
      additionalProperties: false
      description: Describes the properties required to create a new service account
    updateServiceAccountSchema:
      type: object
      properties:
        name:
          type: string
          description: The name of the service account
          example: Service Account 1
        rootRole:
          type: integer
          description: The id of the root role for the service account
          example: 1
      additionalProperties: true
      description: Describes the properties required to update a service account
    notificationsSchema:
      type: array
      items:
        $ref: '#/components/schemas/notificationsSchema_inner'
    markNotificationsAsReadSchema:
      required:
      - notifications
      type: object
      properties:
        notifications:
          type: array
          items:
            type: number
      additionalProperties: true
    loginEventSchema:
      required:
      - id
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: The event's ID. Event IDs are incrementing integers. In other
            words, a more recent event will always have a higher ID than an older
            event.
          example: 13
        username:
          type: string
          description: The username of the user that attempted to log in. Will return
            "Incorrectly configured provider" when attempting to log in using a misconfigured
            provider.
          example: admin
        auth_type:
          type: string
          description: The authentication type used to log in.
          example: simple
        created_at:
          type: string
          description: The date and time of when the login was attempted.
          format: date-time
          example: 2023-03-01T12:04:26.061Z
        successful:
          type: boolean
          description: Whether the login was successful or not.
          example: true
        ip:
          type: string
          description: The IP address of the client that attempted to log in.
          nullable: true
          example: ::ffff:127.0.0.1
        failure_reason:
          type: string
          description: The reason for the login failure. This property is only present
            if the login was unsuccessful.
          nullable: true
          example: No user found
      additionalProperties: false
      description: A model representing a single login event.
      example:
        auth_type: simple
        ip: ::ffff:127.0.0.1
        created_at: 2023-03-01T12:04:26.061Z
        id: 13
        failure_reason: No user found
        username: admin
        successful: true
    loginHistorySchema:
      required:
      - events
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/loginEventSchema'
      additionalProperties: false
      description: A response model with a list of login events.
      example:
        events:
        - auth_type: simple
          ip: ::ffff:127.0.0.1
          created_at: 2023-03-01T12:04:26.061Z
          id: 13
          failure_reason: No user found
          username: admin
          successful: true
        - auth_type: simple
          ip: ::ffff:127.0.0.1
          created_at: 2023-03-01T12:04:26.061Z
          id: 13
          failure_reason: No user found
          username: admin
          successful: true
    inline_response_401:
      type: object
      properties:
        id:
          type: string
          description: The ID of the error instance
          example: 9c40958a-daac-400e-98fb-3bb438567008
        name:
          type: string
          description: The name of the error kind
          example: AuthenticationRequired
        message:
          type: string
          description: A description of what went wrong.
          example: You must log in to use Unleash. Your request had no authorization
            header, so we could not authorize you. Try logging in at /auth/simple/login.
    inline_response_400:
      type: object
      properties:
        id:
          type: string
          description: The ID of the error instance
          example: 9c40958a-daac-400e-98fb-3bb438567008
        name:
          type: string
          description: The name of the error kind
          example: ValidationError
        message:
          type: string
          description: A description of what went wrong.
          example: The request payload you provided doesn't conform to the schema.
            The .parameters property should be object. You sent [].
    inline_response_403:
      type: object
      properties:
        id:
          type: string
          description: The ID of the error instance
          example: 9c40958a-daac-400e-98fb-3bb438567008
        name:
          type: string
          description: The name of the error kind
          example: NoAccessError
        message:
          type: string
          description: A description of what went wrong.
          example: You need the "UPDATE_ADDON" permission to perform this action in
            the "development" environment.
    inline_response_415:
      type: object
      properties:
        id:
          type: string
          description: The ID of the error instance
          example: 9c40958a-daac-400e-98fb-3bb438567008
        name:
          type: string
          description: The name of the error kind
          example: ContentTypeerror
        message:
          type: string
          description: A description of what went wrong.
          example: We do not accept the content-type you provided (application/xml).
            Try using one of the content-types we do accept instead (application/json)
            and make sure the body is in the corresponding format.
    inline_response_409:
      type: object
      properties:
        id:
          type: string
          description: The ID of the error instance
          example: 9c40958a-daac-400e-98fb-3bb438567008
        name:
          type: string
          description: The name of the error kind
          example: NameExistsError
        message:
          type: string
          description: A description of what went wrong.
          example: There is already a feature called "my-awesome-feature".
    inline_response_404:
      type: object
      properties:
        id:
          type: string
          description: The ID of the error instance
          example: 9c40958a-daac-400e-98fb-3bb438567008
        name:
          type: string
          description: The name of the error kind
          example: NotFoundError
        message:
          type: string
          description: A description of what went wrong.
          example: Could not find the addon with ID "12345".
    download:
      anyOf:
      - type: boolean
      - minLength: 1
        type: string
      - type: number
    strategies:
      anyOf:
      - type: boolean
      - minLength: 1
        type: string
      - type: number
    featureToggles:
      anyOf:
      - type: boolean
      - minLength: 1
        type: string
      - type: number
    projects:
      anyOf:
      - type: boolean
      - minLength: 1
        type: string
      - type: number
    tags:
      anyOf:
      - type: boolean
      - minLength: 1
        type: string
      - type: number
    environments:
      anyOf:
      - type: boolean
      - minLength: 1
        type: string
      - type: number
    inline_response_413:
      type: object
      properties:
        id:
          type: string
          description: The ID of the error instance
          example: 9c40958a-daac-400e-98fb-3bb438567008
        name:
          type: string
          description: The name of the error kind
          example: ContentTooLarge
        message:
          type: string
          description: A description of what went wrong.
          example: You provided more data than we can handle. Unleash accepts at most
            X MB.
    advancedPlaygroundEnvironmentFeatureSchema_strategies:
      required:
      - data
      - result
      type: object
      properties:
        result:
          description: |-
            The cumulative results of all the feature's strategies. Can be `true`,
                                              `false`, or `unknown`.
                                              This property will only be `unknown`
                                              if one or more of the strategies can't be fully evaluated and the rest of the strategies
                                              all resolve to `false`.
          anyOf:
          - type: boolean
          - type: string
            enum:
            - unknown
        data:
          type: array
          description: The strategies that apply to this feature.
          items:
            $ref: '#/components/schemas/playgroundStrategySchema'
      description: Feature's applicable strategies and cumulative results of the strategies
      example:
        result: ""
        data:
        - result: ""
          name: name
          disabled: false
          links:
            edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
              3AECCF7E-FF82-4174-8287-8EBE06079A50
          id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
          title: Beta rollout
          constraints:
          - null
          - null
          parameters:
            key: parameters
          segments:
          - result: true
            name: segment A
            id: 0
            constraints:
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
          - result: true
            name: segment A
            id: 0
            constraints:
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
        - result: ""
          name: name
          disabled: false
          links:
            edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
              3AECCF7E-FF82-4174-8287-8EBE06079A50
          id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
          title: Beta rollout
          constraints:
          - null
          - null
          parameters:
            key: parameters
          segments:
          - result: true
            name: segment A
            id: 0
            constraints:
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
          - result: true
            name: segment A
            id: 0
            constraints:
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
    advancedPlaygroundEnvironmentFeatureSchema_variant_payload:
      required:
      - type
      - value
      type: object
      properties:
        type:
          type: string
          description: The format of the payload.
          enum:
          - json
          - csv
          - string
        value:
          type: string
          description: The payload value stringified.
          example: '{"property": "value"}'
      description: An optional payload attached to the variant.
    advancedPlaygroundEnvironmentFeatureSchema_variant:
      required:
      - enabled
      - name
      type: object
      properties:
        name:
          type: string
          description: The variant's name. If there is no variant or if the toggle
            is disabled, this will be `disabled`
          example: red-variant
        enabled:
          type: boolean
          description: Whether the variant is enabled or not. If the feature is disabled
            or if it doesn't have variants, this property will be `false`
        payload:
          $ref: '#/components/schemas/advancedPlaygroundEnvironmentFeatureSchema_variant_payload'
      description: |-
        The feature variant you receive based on the provided context or the _disabled
                                  variant_. If a feature is disabled or doesn't have any
                                  variants, you would get the _disabled variant_.
                                  Otherwise, you'll get one of thefeature's defined variants.
      example: '{"name":"green","enabled":true}'
    bulkRegistrationSchema_connectVia:
      required:
      - appName
      - instanceId
      type: object
      properties:
        appName:
          type: string
        instanceId:
          type: string
    clientMetricsSchema_bucket_toggles:
      type: object
      properties:
        "yes":
          minimum: 0
          type: number
          description: How many times the toggle evaluated to true
          example: 974
        "no":
          minimum: 0
          type: integer
          description: How many times the toggle evaluated to false
          example: 50
        variants:
          type: object
          additionalProperties:
            minimum: 0
            type: integer
          description: 'An object describing how many times each variant was returned.
            Variant names are used as properties, and the number of times they were
            exposed is the corresponding value (i.e. `{ [variantName]: number }`).'
          example:
            variantA: 15
            variantB: 25
            variantC: 5
    clientMetricsSchema_bucket:
      required:
      - start
      - stop
      - toggles
      type: object
      properties:
        start:
          $ref: '#/components/schemas/dateSchema'
        stop:
          $ref: '#/components/schemas/dateSchema'
        toggles:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/clientMetricsSchema_bucket_toggles'
          description: an object containing feature names with yes/no plus variant
            usage
          example:
            myCoolToggle:
              "yes": 25
              "no": 42
              variants:
                blue: 6
                green: 15
                red: 46
            myOtherToggle:
              "yes": 0
              "no": 100
      description: Holds all metrics gathered over a window of time. Typically 1 hour
        wide
    eventSchema_data:
      type: object
      properties:
        name:
          type: string
          description: Name of the feature toggle/strategy/environment that this event
            relates to
          example: my.first.toggle
        description:
          type: string
          description: The description of the object this event relates to
          example: Toggle description
        type:
          type: string
          description: If this event relates to a feature toggle, the type of feature
            toggle.
          example: release
        project:
          type: string
          description: The project this event relates to
          example: default
        stale:
          type: boolean
          description: Is the feature toggle this event relates to stale
          example: true
        variants:
          type: array
          description: Variants configured for this toggle
          items:
            $ref: '#/components/schemas/variantSchema'
        createdAt:
          type: string
          description: The time the event happened as a RFC 3339-conformant timestamp.
          format: date-time
          example: 2023-07-05T12:56:00Z
        lastSeenAt:
          type: string
          description: The time the feature was last seen
          format: date-time
          nullable: true
          example: 2023-07-05T12:56:00Z
        impressionData:
          type: boolean
          description: Should [impression events](https://docs.getunleash.io/reference/impression-data)
            activate for this feature toggle
          example: false
      description: Extra associated data related to the event, such as feature toggle
        state, segment configuration, etc., if applicable.
      example: '{"name":"new-feature","description":"Toggle description","type":"release","project":"my-project","stale":false,"variants":[],"createdAt":"2022-05-31T13:32:20.547Z","lastSeenAt":null,"impressionData":true}'
    eventSchema_preData:
      type: object
      properties:
        name:
          type: string
          description: Name of the feature toggle/strategy/environment that this event
            relates to
          example: my.first.toggle
        description:
          type: string
          description: The description of the object this event relates to
          example: Toggle description
        type:
          type: string
          description: If this event relates to a feature toggle, the type of feature
            toggle.
          example: release
        project:
          type: string
          description: The project this event relates to
          example: default
        stale:
          type: boolean
          description: Is the feature toggle this event relates to stale
          example: true
        variants:
          type: array
          description: Variants configured for this toggle
          items:
            $ref: '#/components/schemas/variantSchema'
        createdAt:
          type: string
          description: The time the event happened as a RFC 3339-conformant timestamp.
          format: date-time
          example: 2023-07-05T12:56:00Z
        lastSeenAt:
          type: string
          description: The time the feature was last seen
          format: date-time
          nullable: true
          example: 2023-07-05T12:56:00Z
        impressionData:
          type: boolean
          description: Should [impression events](https://docs.getunleash.io/reference/impression-data)
            activate for this feature toggle
          example: false
      description: Data relating to the previous state of the event's subject.
      example: '{"name":"new-feature","description":"Toggle description","type":"release","project":"my-project","stale":false,"variants":[],"createdAt":"2022-05-31T13:32:20.547Z","lastSeenAt":null,"impressionData":true}'
    exportResultSchema_segments:
      required:
      - id
      type: object
      properties:
        id:
          type: number
        name:
          type: string
    instanceAdminStatsSchema_clientApps:
      type: object
      properties:
        range:
          type: string
          description: A description of a time range
          example: 30d
          enum:
          - allTime
          - 30d
          - 7d
        count:
          type: number
          description: The number of client applications that have been observed in
            this period
          example: 1
      description: An entry describing how many client applications has been observed
        over the defined range
      example:
        count: 1
        range: 30d
    playgroundFeatureSchema_strategies:
      required:
      - data
      - result
      type: object
      properties:
        result:
          description: |-
            The cumulative results of all the feature's strategies. Can be `true`,
                                              `false`, or `unknown`.
                                              This property will only be `unknown`
                                              if one or more of the strategies can't be fully evaluated and the rest of the strategies
                                              all resolve to `false`.
          anyOf:
          - type: boolean
          - type: string
            enum:
            - unknown
        data:
          type: array
          description: The strategies that apply to this feature.
          items:
            $ref: '#/components/schemas/playgroundStrategySchema'
      description: The feature's applicable strategies and cumulative results of the
        strategies
      example:
        result: ""
        data:
        - result: ""
          name: name
          disabled: false
          links:
            edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
              3AECCF7E-FF82-4174-8287-8EBE06079A50
          id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
          title: Beta rollout
          constraints:
          - null
          - null
          parameters:
            key: parameters
          segments:
          - result: true
            name: segment A
            id: 0
            constraints:
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
          - result: true
            name: segment A
            id: 0
            constraints:
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
        - result: ""
          name: name
          disabled: false
          links:
            edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
              3AECCF7E-FF82-4174-8287-8EBE06079A50
          id: 3AECCF7E-FF82-4174-8287-8EBE06079A50
          title: Beta rollout
          constraints:
          - null
          - null
          parameters:
            key: parameters
          segments:
          - result: true
            name: segment A
            id: 0
            constraints:
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
          - result: true
            name: segment A
            id: 0
            constraints:
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
            - result: true
              contextName: appName
              values:
              - my-app
              - my-other-app
              caseInsensitive: false
              inverted: false
              value: my-app
              operator: IN
    playgroundStrategySchema_links:
      required:
      - edit
      type: object
      properties:
        edit:
          type: string
          example: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
            3AECCF7E-FF82-4174-8287-8EBE06079A50
      description: A set of links to actions you can perform on this strategy
      example:
        edit: /projects/some-project/features/some-feature/strategies/edit?environmentId=some-env&strategyId=
          3AECCF7E-FF82-4174-8287-8EBE06079A50
    proxyFeatureSchema_variant_payload:
      required:
      - type
      - value
      type: object
      properties:
        type:
          type: string
          description: The format of the payload.
          enum:
          - string
          - json
          - csv
        value:
          type: string
          description: The payload value stringified.
      description: Extra data configured for this variant
      example: '{"type":"json","value":"{color: red}"}'
    proxyFeatureSchema_variant:
      required:
      - enabled
      - name
      type: object
      properties:
        name:
          type: string
          description: The variants name. Is unique for this feature toggle
          example: blue_group
        enabled:
          type: boolean
          description: Whether the variant is enabled or not.
          example: true
        payload:
          $ref: '#/components/schemas/proxyFeatureSchema_variant_payload'
      description: Variant details
      example:
        payload: '{"type":"json","value":"{color: red}"}'
        name: blue_group
        enabled: true
    requestsPerSecondSchema_data_metric:
      type: object
      properties:
        appName:
          type: string
          description: Name of the application this metric relates to
          example: mySdk
        endpoint:
          type: string
          description: Which endpoint has been accessed
          example: /api/frontend
      description: A key value set representing the metric
      example:
        endpoint: /api/frontend
        appName: mySdk
    requestsPerSecondSchema_data_result:
      type: object
      properties:
        metric:
          $ref: '#/components/schemas/requestsPerSecondSchema_data_metric'
        values:
          type: array
          description: 'An array of arrays. Each element of the array is an array
            of size 2 consisting of the 2 axis for the graph: in position zero the
            x axis represented as a number and position one the y axis represented
            as string'
          items:
            type: array
            description: Either the x axis represented as a number or the y axis represented
              as a string
            items:
              anyOf:
              - type: string
                description: An identifier for the line in the graph
              - type: number
                description: The number of requests at this point in time
      description: A representation of a single metric to build a line in a graph
      example:
        metric:
          endpoint: /api/frontend
          appName: mySdk
        values:
        - - ""
          - ""
        - - ""
          - ""
    requestsPerSecondSchema_data:
      type: object
      properties:
        resultType:
          type: string
          description: Prometheus compatible result type.
          example: vector
          enum:
          - matrix
          - vector
          - scalar
          - string
        result:
          type: array
          description: An array of values per metric. Each one represents a line in
            the graph labeled by its metric name
          items:
            $ref: '#/components/schemas/requestsPerSecondSchema_data_result'
      description: The query result from prometheus
      example:
        result:
        - metric:
            endpoint: /api/frontend
            appName: mySdk
          values:
          - - ""
            - ""
          - - ""
            - ""
        - metric:
            endpoint: /api/frontend
            appName: mySdk
          values:
          - - ""
            - ""
          - - ""
            - ""
        resultType: vector
    setStrategySortOrderSchema_inner:
      required:
      - id
      - sortOrder
      type: object
      properties:
        id:
          type: string
        sortOrder:
          type: number
      additionalProperties: false
    setUiConfigSchema_frontendSettings:
      required:
      - frontendApiOrigins
      type: object
      properties:
        frontendApiOrigins:
          type: array
          items:
            type: string
    strategySchema_parameters:
      type: object
      properties:
        name:
          type: string
          example: percentage
        type:
          type: string
          example: percentage
        description:
          type: string
          example: Gradual rollout to logged in users
        required:
          type: boolean
          example: true
      example:
        name: percentage
        description: Gradual rollout to logged in users
        type: percentage
        required: true
    createStrategySchema_parameters:
      required:
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: The name of the parameter
          example: Rollout percentage
        type:
          type: string
          description: The [type of the parameter](https://docs.getunleash.io/reference/custom-activation-strategies#parameter-types)
          example: percentage
          enum:
          - string
          - percentage
          - list
          - number
          - boolean
        description:
          type: string
          description: A description of this strategy parameter. Use this to indicate
            to the users what the parameter does.
          example: How many percent of users should see this feature?
        required:
          type: boolean
          description: Whether this parameter must be configured when using the strategy.
            Defaults to `false`
          example: false
    variantSchema_payload:
      required:
      - type
      - value
      type: object
      properties:
        type:
          type: string
        value:
          type: string
      description: Extra data configured for this variant
      example: '{"type":"json","value":"{color: red}"}'
    variantFlagSchema_payload:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
    versionSchema_current:
      type: object
      properties:
        oss:
          type: string
        enterprise:
          type: string
      example:
        enterprise: enterprise
        oss: oss
    contextFieldStrategiesSchema_strategies:
      required:
      - environment
      - featureName
      - id
      - projectId
      - strategyName
      type: object
      properties:
        id:
          type: string
          description: The ID of the strategy.
          example: 433ae8d9-dd69-4ad0-bc46-414aedbe9c55
        featureName:
          type: string
          description: The name of the feature that contains this strategy.
          example: best-feature
        projectId:
          type: string
          description: The ID of the project that contains this feature.
        environment:
          type: string
          description: The ID of the environment where this strategy is in.
        strategyName:
          type: string
          description: The name of the strategy.
      example:
        strategyName: strategyName
        environment: environment
        featureName: best-feature
        id: 433ae8d9-dd69-4ad0-bc46-414aedbe9c55
        projectId: projectId
    adminPermissionsSchema_permissions_environments:
      required:
      - name
      - permissions
      type: object
      properties:
        name:
          type: string
          description: The name of the environment
          example: development
        permissions:
          type: array
          description: Permissions available for this environment
          items:
            $ref: '#/components/schemas/adminPermissionSchema'
      example:
        permissions:
        - null
        - null
        name: development
    adminPermissionsSchema_permissions:
      required:
      - environments
      - project
      type: object
      properties:
        root:
          type: array
          description: Permissions available at the root level, i.e. not connected
            to any specific project or environment
          items:
            $ref: '#/components/schemas/adminPermissionSchema'
        project:
          type: array
          description: Permissions available at the project level
          items:
            $ref: '#/components/schemas/adminPermissionSchema'
        environments:
          type: array
          description: A list of environments with available permissions per environment
          items:
            $ref: '#/components/schemas/adminPermissionsSchema_permissions_environments'
      description: Returns permissions available at all three levels (root|project|environment)
      example:
        environments:
        - permissions:
          - null
          - null
          name: development
        - permissions:
          - null
          - null
          name: development
        root:
        - environment: development
          displayName: Update feature toggles
          name: UPDATE_FEATURE
          id: 3
          type: project
        - environment: development
          displayName: Update feature toggles
          name: UPDATE_FEATURE
          id: 3
          type: project
        project:
        - null
        - null
    createRoleWithPermissionsSchema_permissions:
      required:
      - id
      type: object
      properties:
        id:
          type: number
        environment:
          type: string
    invoicesSchema_inner:
      required:
      - amountFormatted
      - invoicePDF
      - invoiceURL
      - paid
      - status
      type: object
      properties:
        amountFormatted:
          type: string
        paid:
          type: boolean
        status:
          type: string
        dueDate:
          type: string
        invoiceURL:
          type: string
        invoicePDF:
          type: string
      additionalProperties: false
    adminStrategiesSchema_strategies:
      required:
      - environment
      - featureName
      - id
      - projectId
      - strategyName
      type: object
      properties:
        id:
          type: string
          description: The ID of the strategy
          example: e465c813-cffb-4232-b184-82b1d6fe9d3d
        featureName:
          type: string
          description: The ID of the strategy
          example: new-signup-flow
        projectId:
          type: string
          description: The ID of the project that the strategy belongs to.
          example: red-vista
        environment:
          type: string
          description: The ID of the environment that the strategy belongs to.
          example: development
        strategyName:
          type: string
          description: The name of the strategy's type.
          example: flexibleRollout
      example:
        strategyName: flexibleRollout
        environment: development
        featureName: new-signup-flow
        id: e465c813-cffb-4232-b184-82b1d6fe9d3d
        projectId: red-vista
    notificationsSchema_inner:
      required:
      - createdAt
      - createdBy
      - id
      - link
      - message
      - notificationType
      - readAt
      type: object
      properties:
        id:
          type: number
          description: The id of this notification
          example: 1
        message:
          type: string
          description: The actual notification message
          example: Your change request got approved
        link:
          type: string
          description: The link to change request or feature toggle the notification
            refers to
          example: /myunleash/projects/myproject/change-requests/46
        notificationType:
          type: string
          description: The type of the notification used e.g. for the graphical hints
          enum:
          - toggle
        createdBy:
          type: object
          properties:
            username:
              type: string
              description: The name of the user who triggered the notification
              nullable: true
              example: Jane Smith
            imageUrl:
              type: string
              description: The avatar url of the user who triggered the notification
              nullable: true
              example: https://gravatar.com/avatar/8aa1132e102345f8c7931d1740e15340?size=42&default=retro
          additionalProperties: false
          example:
            imageUrl: https://gravatar.com/avatar/8aa1132e102345f8c7931d1740e15340?size=42&default=retro
            username: Jane Smith
        createdAt:
          type: string
          description: The date and time when the notification was created
          format: date-time
          example: 2022-12-02T13:17:12.445Z
        readAt:
          type: string
          description: The date and time when the notification was read or marked
            as read, otherwise `null`
          format: date-time
          nullable: true
          example: 2022-12-02T13:17:12.445Z
      additionalProperties: false
      example:
        createdAt: 2022-12-02T13:17:12.445Z
        createdBy:
          imageUrl: https://gravatar.com/avatar/8aa1132e102345f8c7931d1740e15340?size=42&default=retro
          username: Jane Smith
        link: /myunleash/projects/myproject/change-requests/46
        id: 1
        notificationType: ""
        message: Your change request got approved
        readAt: 2022-12-02T13:17:12.445Z
  securitySchemes:
    apiKey:
      type: apiKey
      name: Authorization
      in: header
