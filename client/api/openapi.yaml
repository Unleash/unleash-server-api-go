openapi: 3.0.3
info:
  title: Unleash API
  version: 6.7.2
servers:
- url: https://us.app.unleash-hosted.com/ushosted
security:
- apiKey: []
- bearerToken: []
tags:
- description: "Create, update, and delete [Unleash addons](https://docs.getunleash.io/addons)."
  name: Addons
- description: Configuration for the Unleash Admin UI. These endpoints should not
    be relied upon and can change at any point without prior notice.
  name: Admin UI
- description: "Create, update, and delete [Unleash API tokens](https://docs.getunleash.io/reference/api-tokens-and-client-keys)."
  name: API tokens
- description: "Revive or permanently delete [archived feature flags](https://docs.getunleash.io/advanced/archived_toggles)."
  name: Archive
- description: "Manage logins, passwords, etc."
  name: Auth
- description: "Create, update, flag, and delete [banners](https://docs.getunleash.io/reference/banners)."
  name: Banners
- description: "API for managing [change requests](https://docs.getunleash.io/reference/change-requests)."
  name: Change Requests
- description: "Endpoints for [Unleash server-side clients](https://docs.getunleash.io/reference/sdks)."
  name: Client
- description: "Create, update, and delete [context fields](https://docs.getunleash.io/reference/unleash-context)\
    \ that Unleash is aware of."
  name: Context
- description: Manage feature dependencies.
  name: Dependencies
- description: Endpoints related to Unleash on the Edge.
  name: Edge
- description: "Create, update, delete, enable or disable [environments](https://docs.getunleash.io/reference/environments)\
    \ for this Unleash instance."
  name: Environments
- description: Read events from this Unleash instance.
  name: Events
- description: "Manage [feature flag types](https://docs.getunleash.io/reference/feature-toggles#feature-flag-types)."
  name: Feature Types
- description: "Create, update, and delete [feature flags](https://docs.getunleash.io/reference/feature-toggles)."
  name: Features
- description: API for connecting client-side (frontend) applications to Unleash.
  name: Frontend API
- description: "[Import and export](https://docs.getunleash.io/how-to/how-to-environment-import-export)\
    \ the state of your Unleash instance."
  name: Import/Export
- description: Instance admin endpoints used to manage the Unleash instance itself.
  name: Instance Admin
- description: Enable/disable the maintenance mode of Unleash.
  name: Maintenance
- description: "Register, read, or delete metrics recorded by Unleash."
  name: Metrics
- description: "API for managing [notifications](https://docs.getunleash.io/reference/notifications)."
  name: Notifications
- description: Endpoints related to the operational status of this Unleash instance.
  name: Operational
- description: "Create, update, and delete [Personal access tokens](https://docs.getunleash.io/reference/api-tokens-and-client-keys#personal-access-tokens)."
  name: Personal access tokens
- description: Evaluate an Unleash context against your feature flags.
  name: Playground
- description: "Create, update, and delete [Unleash projects](https://docs.getunleash.io/reference/projects)."
  name: Projects
- description: "Create, update, and delete [Unleash Public Signup tokens](https://docs.getunleash.io/reference/public-signup-tokens)."
  name: Public signup tokens
- description: Search for features.
  name: Search
- description: "Create, update, delete, and manage [segments](https://docs.getunleash.io/reference/segments)."
  name: Segments
- description: "Endpoints for managing [Service Accounts](https://docs.getunleash.io/reference/service-accounts),\
    \ which enable programmatic access to the Unleash API."
  name: Service Accounts
- description: "Create, update, delete, manage [custom strategies](https://docs.getunleash.io/reference/custom-activation-strategies)."
  name: Strategies
- description: "Create, update, and delete [tags and tag types](https://docs.getunleash.io/reference/feature-toggles#tags)."
  name: Tags
- description: API for information about telemetry collection
  name: Telemetry
- description: Experimental endpoints that may change or disappear at any time.
  name: Unstable
- description: Manage users and passwords.
  name: Users
paths:
  /api/admin/auth/saml/settings:
    get:
      description: Returns the current settings for SAML authentication
      operationId: getSamlSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/samlSettingsResponseSchema'
          description: samlSettingsResponseSchema
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
      summary: Get SAML auth settings
      tags:
      - Auth
    post:
      description: Updates the settings for SAML Authentication
      operationId: setSamlSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/samlSettingsSchema'
        description: samlSettingsSchema
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/samlSettingsResponseSchema'
          description: samlSettingsResponseSchema
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setSamlSettings_415_response'
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
      summary: Update SAML auth settings
      tags:
      - Auth
  /api/admin/auth/oidc/settings:
    get:
      description: Returns the current settings for OIDC Authentication
      operationId: getOidcSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oidcSettingsResponseSchema'
          description: oidcSettingsResponseSchema
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
      summary: Get OIDC auth settings
      tags:
      - Auth
    post:
      description: Configure OpenID Connect as a login provider for Unleash.
      operationId: setOidcSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oidcSettingsSchema'
        description: oidcSettingsSchema
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oidcSettingsResponseSchema'
          description: oidcSettingsResponseSchema
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setSamlSettings_415_response'
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
      summary: Set OIDC settings
      tags:
      - Auth
  /api/admin/auth/simple/settings:
    get:
      description: Is simple authentication (username/password) enabled for this server
      operationId: getSimpleSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/passwordAuthSchema'
          description: passwordAuthSchema
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
      summary: Get Simple auth settings
      tags:
      - Auth
    post:
      description: Enable or disable simple authentication (username/password)
      operationId: setSimpleSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passwordAuthSchema'
        description: passwordAuthSchema
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/passwordAuthSchema'
          description: passwordAuthSchema
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setSamlSettings_415_response'
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
      summary: Update Simple auth settings
      tags:
      - Auth
  /api/admin/roles:
    get:
      description: "Get a list of project, root and custom roles for Role-Based Access\
        \ Control"
      operationId: getRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rolesWithVersionSchema'
          description: rolesWithVersionSchema
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
      summary: Get a list of roles
      tags:
      - Users
    post:
      description: Create a new custom role for Role-Based Access Control
      operationId: createRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRoleWithPermissionsSchema'
        description: createRoleWithPermissionsSchema
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/roleWithVersionSchema'
          description: roleWithVersionSchema
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createRole_409_response'
          description: "The provided resource can not be created or updated because\
            \ it would conflict with the current state of the resource or with an\
            \ already existing resource, respectively."
      summary: Create a new role
      tags:
      - Users
  /api/admin/roles/{roleId}:
    delete:
      description: Delete a custom role by id. You cannot delete built-in roles or
        roles that are in use.
      operationId: deleteRole
      parameters:
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: This response has no body.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
      summary: Delete a custom role
      tags:
      - Users
    get:
      description: Get a single role by role id
      operationId: getRoleById
      parameters:
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/roleWithPermissionsSchema'
          description: roleWithPermissionsSchema
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
      summary: Get a single role
      tags:
      - Users
    put:
      description: Update a custom role by role id
      operationId: updateRole
      parameters:
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRoleWithPermissionsSchema'
        description: createRoleWithPermissionsSchema
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/roleWithVersionSchema'
          description: roleWithVersionSchema
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createRole_409_response'
          description: "The provided resource can not be created or updated because\
            \ it would conflict with the current state of the resource or with an\
            \ already existing resource, respectively."
      summary: Update a role
      tags:
      - Users
  /api/admin/environments:
    get:
      description: Retrieves all environments that exist in this Unleash instance.
      operationId: getAllEnvironments
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/environmentsSchema'
          description: environmentsSchema
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
      summary: Get all environments
      tags:
      - Environments
    post:
      description: Uses the details provided in the payload to create a new environment
      operationId: createEnvironment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEnvironmentSchema'
        description: createEnvironmentSchema
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/environmentSchema'
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
      summary: Creates a new environment
      tags:
      - Environments
  /api/admin/environments/update/{name}:
    put:
      description: "Given an environment by name updates the environment with the\
        \ given payload. Note that `name`, `enabled` and `protected` cannot be changed\
        \ by this API"
      operationId: updateEnvironment
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateEnvironmentSchema'
        description: updateEnvironmentSchema
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/environmentSchema'
          description: environmentSchema
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
      summary: Updates an environment by name
      tags:
      - Environments
  /api/admin/environments/{name}:
    delete:
      description: "Given an existing environment by name, this endpoint will attempt\
        \ to delete it"
      operationId: removeEnvironment
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: This response has no body.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
      summary: Deletes an environment by name
      tags:
      - Environments
    get:
      description: Retrieves the environment with `name` if it exists in this Unleash
        instance
      operationId: getEnvironment
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/environmentSchema'
          description: environmentSchema
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
      summary: Get the environment with `name`
      tags:
      - Environments
  /api/admin/projects/{projectId}/change-requests/config:
    get:
      description: "Given a projectId, this endpoint will retrieve change request\
        \ configuration for the project"
      operationId: getProjectChangeRequestConfig
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/changeRequestConfigSchema'
          description: changeRequestConfigSchema
      summary: Retrieves change request configuration for a project
      tags:
      - Change Requests
  /api/admin/projects/{projectId}/environments/{environment}/change-requests/config:
    put:
      description: "This endpoint will change the change request configuration for\
        \ a given environment, set it to either on/off and optionally configure the\
        \ number of approvals needed. The minimum number of approvals is 1 and the\
        \ maximum number is 10. If you provide a number higher than 10 or lower than\
        \ 1, Unleash will clamp it to the allowed range."
      operationId: updateProjectChangeRequestConfig
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: environment
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateChangeRequestEnvironmentConfigSchema'
        description: updateChangeRequestEnvironmentConfigSchema
        required: true
      responses:
        "200":
          description: This response has no body.
      summary: Updates change request configuration for an environment in the project
      tags:
      - Change Requests
  /api/admin/service-account:
    get:
      description: Returns the list of all service accounts.
      operationId: getServiceAccounts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceAccountsSchema'
          description: '#/components/schemas/serviceAccountsSchema'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
      summary: List service accounts.
      tags:
      - Service Accounts
    post:
      description: Creates a new service account.
      operationId: createServiceAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createServiceAccountSchema'
        description: '#/components/schemas/createServiceAccountSchema'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceAccountSchema'
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createRole_409_response'
          description: "The provided resource can not be created or updated because\
            \ it would conflict with the current state of the resource or with an\
            \ already existing resource, respectively."
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setSamlSettings_415_response'
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
      summary: Create a service account.
      tags:
      - Service Accounts
  /api/admin/service-account/{id}:
    delete:
      description: Deletes an existing service account identified by its id.
      operationId: deleteServiceAccount
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: This response has no body.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
      summary: Delete a service account.
      tags:
      - Service Accounts
    put:
      description: Updates an existing service account identified by its id.
      operationId: updateServiceAccount
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateServiceAccountSchema'
        description: '#/components/schemas/updateServiceAccountSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceAccountSchema'
          description: '#/components/schemas/serviceAccountSchema'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setSamlSettings_415_response'
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
      summary: Update a service account.
      tags:
      - Service Accounts
  /api/admin/service-account/{id}/token:
    get:
      description: Returns the list of all tokens for a service account identified
        by the id.
      operationId: getServiceAccountTokens
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patsSchema'
          description: '#/components/schemas/patsSchema'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
      summary: List all tokens for a service account.
      tags:
      - Service Accounts
    post:
      description: Creates a new token for the service account identified by the id.
      operationId: createServiceAccountToken
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPatSchema'
        description: '#/components/schemas/createPatSchema'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patSchema'
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createRole_409_response'
          description: "The provided resource can not be created or updated because\
            \ it would conflict with the current state of the resource or with an\
            \ already existing resource, respectively."
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setSamlSettings_415_response'
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
      summary: Create a token for a service account.
      tags:
      - Service Accounts
  /api/admin/service-account/{id}/token/{tokenId}:
    delete:
      description: Deletes a token for the service account identified both by the
        service account's id and the token's id.
      operationId: deleteServiceAccountToken
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: This response has no body.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
      summary: Delete a token for a service account.
      tags:
      - Service Accounts
  /api/admin/projects:
    get:
      description: This endpoint returns an list of all the projects in the Unleash
        instance.
      operationId: getProjects
      parameters:
      - explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectsSchema'
          description: projectsSchema
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
      summary: Get a list of all projects.
      tags:
      - Projects
    post:
      description: "Create a new [Unleash project](https://docs.getunleash.io/reference/projects)."
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createProjectSchema'
        description: createProjectSchema
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectCreatedSchema'
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setSamlSettings_415_response'
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
      summary: Create project
      tags:
      - Projects
  /api/admin/projects/{projectId}:
    delete:
      description: Permanently delete the provided project. All feature flags in the
        project must be archived before you can delete it. This permanently deletes
        the project and its archived flags. It can not be undone.
      operationId: deleteProject
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: This response has no body.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
      summary: Delete project
      tags:
      - Projects
    put:
      description: Update a project with new configuration. Any fields not provided
        are ignored.
      operationId: updateProject
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateProjectSchema'
        description: updateProjectSchema
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setSamlSettings_415_response'
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
      summary: Update project
      tags:
      - Projects
  /api/admin/projects/{projectId}/settings:
    put:
      description: Update project enterprise settings with new values. Any fields
        not provided are ignored.
      operationId: updateProjectEnterpriseSettings
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateProjectEnterpriseSettingsSchema'
        description: updateProjectEnterpriseSettingsSchema
        required: true
      responses:
        "200":
          description: This response has no body.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setSamlSettings_415_response'
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
      summary: Update project enterprise settings
      tags:
      - Projects
  /api/admin/projects/{projectId}/access:
    get:
      description: "Get all groups, users and their roles, and available roles for\
        \ the given project."
      operationId: getProjectAccess
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectAccessSchema'
          description: projectAccessSchema
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
      summary: Get users and groups in project
      tags:
      - Projects
    put:
      description: "Sets all groups, users and their roles for the given project,\
        \ overriding any existing configuration."
      operationId: setProjectAccess
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projectAccessConfigurationSchema'
        description: projectAccessConfigurationSchema
        required: true
      responses:
        "200":
          description: This response has no body.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
      summary: Set users and groups to roles in the current project
      tags:
      - Projects
  /api/admin/permissions:
    get:
      description: Returns a list of available permissions
      operationId: getPermissions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/adminPermissionsSchema'
          description: adminPermissionsSchema
      summary: Gets available permissions
      tags:
      - Auth
  /api/admin/context:
    get:
      description: "Returns all configured [Context fields](https://docs.getunleash.io/reference/unleash-context)\
        \ that have been created."
      operationId: getContextFields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contextFieldsSchema'
          description: contextFieldsSchema
      summary: Gets configured context fields
      tags:
      - Context
    post:
      description: "Endpoint that allows creation of [custom context fields](https://docs.getunleash.io/reference/unleash-context#custom-context-fields)"
      operationId: createContextField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createContextFieldSchema'
        description: createContextFieldSchema
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contextFieldSchema'
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              explode: false
              schema:
                format: uri
                type: string
              style: simple
      summary: Create a context field
      tags:
      - Context
  /api/admin/context/{contextField}:
    delete:
      description: "Endpoint that allows deletion of a custom context field. Does\
        \ not validate that context field is not in use, but since context field configuration\
        \ is stored in a json blob for the strategy, existing strategies are safe."
      operationId: deleteContextField
      parameters:
      - explode: false
        in: path
        name: contextField
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: This response has no body.
      summary: Delete an existing context field
      tags:
      - Context
    get:
      description: "Returns specific [context field](https://docs.getunleash.io/reference/unleash-context)\
        \ identified by the name in the path"
      operationId: getContextField
      parameters:
      - explode: false
        in: path
        name: contextField
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contextFieldSchema'
          description: contextFieldSchema
      summary: Gets context field
      tags:
      - Context
    put:
      description: Endpoint that allows updating a custom context field. Used to toggle
        stickiness and add/remove legal values for this context field
      operationId: updateContextField
      parameters:
      - explode: false
        in: path
        name: contextField
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateContextFieldSchema'
        description: updateContextFieldSchema
        required: true
      responses:
        "200":
          description: This response has no body.
      summary: Update an existing context field
      tags:
      - Context
  /api/admin/api-tokens:
    get:
      description: Retrieves all API tokens that exist in the Unleash instance.
      operationId: getAllApiTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiTokensSchema'
          description: apiTokensSchema
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
      summary: Get API tokens
      tags:
      - API tokens
    post:
      description: "Create an API token of a specific type: one of client, admin,\
        \ frontend."
      operationId: createApiToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createApiTokenSchema'
        description: createApiTokenSchema
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiTokenSchema'
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setSamlSettings_415_response'
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
      summary: Create API token
      tags:
      - API tokens
  /api/admin/api-tokens/{name}:
    get:
      description: "Retrieves all API tokens that match a given token name. Because\
        \ token names are not unique, this endpoint will always return a list. If\
        \ no tokens with the provided name exist, the list will be empty. Otherwise,\
        \ it will contain all the tokens with the given name."
      operationId: getApiTokensByName
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiTokensSchema'
          description: apiTokensSchema
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
      summary: Get API tokens by name
      tags:
      - API tokens
  /api/admin/api-tokens/{token}:
    delete:
      description: "Deletes an existing API token. The `token` path parameter is the\
        \ token's `secret`. If the token does not exist, this endpoint returns a 200\
        \ OK, but does nothing."
      operationId: deleteApiToken
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: This response has no body.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
      summary: Delete API token
      tags:
      - API tokens
    put:
      description: "Updates an existing API token with a new expiry date. The `token`\
        \ path parameter is the token's `secret`. If the token does not exist, this\
        \ endpoint returns a 200 OK, but does nothing."
      operationId: updateApiToken
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateApiTokenSchema'
        description: updateApiTokenSchema
        required: true
      responses:
        "200":
          description: This response has no body.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setSamlSettings_415_response'
          description: The operation does not support request payloads of the provided
            type. Please ensure that you're using one of the listed payload types
            and that you have specified the right content type in the "content-type"
            header.
      summary: Update API token
      tags:
      - API tokens
  /api/admin/user-admin:
    post:
      description: Creates a new user with the given root role.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUserSchema'
        description: createUserSchema
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUserResponseSchema'
          description: The resource was successfully created.
          headers:
            location:
              description: The location of the newly created resource.
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
      summary: Create a new user
      tags:
      - Users
  /api/admin/user-admin/{id}:
    delete:
      description: Deletes the user with the given userId
      operationId: deleteUser
      parameters:
      - description: a user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: This response has no body.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
      summary: Delete a user
      tags:
      - Users
    get:
      description: Will return a single user by id
      operationId: getUser
      parameters:
      - description: a user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userSchema'
          description: userSchema
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
      summary: Get user
      tags:
      - Users
    put:
      description: Only the explicitly specified fields get updated.
      operationId: updateUser
      parameters:
      - description: a user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateUserSchema'
        description: updateUserSchema
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUserResponseSchema'
          description: createUserResponseSchema
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_400_response'
          description: The request data does not match what we expect.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
      summary: Update a user
      tags:
      - Users
  /api/admin/projects/{projectId}/overview:
    get:
      description: "This endpoint returns an overview of the specified projects stats,\
        \ project health, number of members, which environments are configured, and\
        \ the features types in the project."
      operationId: getProjectOverview
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectOverviewSchema'
          description: projectOverviewSchema
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
      summary: Get an overview of a project.
      tags:
      - Projects
  /api/admin/environments/{name}/on:
    post:
      description: Makes it possible to enable this environment for a project. An
        environment must first be globally enabled using this endpoint before it can
        be enabled for a project
      operationId: toggleEnvironmentOn
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: This response has no body.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
      summary: Toggle the environment with `name` on
      tags:
      - Environments
  /api/admin/environments/{name}/off:
    post:
      description: Removes this environment from the list of available environments
        for projects to use
      operationId: toggleEnvironmentOff
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: This response has no body.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_401_response'
          description: "Authorization information is missing or invalid. Provide a\
            \ valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSamlSettings_403_response'
          description: "The provided user credentials are valid, but the user does\
            \ not have the necessary permissions to perform this operation"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRoleById_404_response'
          description: The requested resource was not found.
      summary: Toggle the environment with `name` off
      tags:
      - Environments
components:
  schemas:
    apiTokenSchema:
      additionalProperties: true
      description: "An overview of an [Unleash API token](https://docs.getunleash.io/reference/api-tokens-and-client-keys)."
      example:
        createdAt: 2023-04-19T08:15:14Z
        environment: development
        seenAt: 2023-04-19T08:15:14Z
        projects:
        - developerexperience
        - enterprisegrowth
        tokenName: some-user
        project: developerexperience
        alias: randomid-or-some-alias
        secret: project:environment.xyzrandomstring
        type: client
        expiresAt: 2023-04-19T08:15:14Z
        username: a-name
      properties:
        secret:
          description: The token used for authentication.
          example: project:environment.xyzrandomstring
          type: string
        username:
          deprecated: true
          description: This property was deprecated in Unleash v5. Prefer the `tokenName`
            property instead.
          example: a-name
          type: string
        tokenName:
          description: A unique name for this particular token
          example: some-user
          type: string
        type:
          description: The type of API token
          enum:
          - client
          - admin
          - frontend
          example: client
          type: string
        environment:
          description: The environment the token has access to. `*` if it has access
            to all environments.
          example: development
          type: string
        project:
          description: The project this token belongs to.
          example: developerexperience
          type: string
        projects:
          description: "The list of projects this token has access to. If the token\
            \ has access to specific projects they will be listed here. If the token\
            \ has access to all projects it will be represented as `[*]`"
          example:
          - developerexperience
          - enterprisegrowth
          items:
            type: string
          type: array
        expiresAt:
          description: The token's expiration date. NULL if the token doesn't have
            an expiration set.
          example: 2023-04-19T08:15:14Z
          format: date-time
          nullable: true
          type: string
        createdAt:
          description: When the token was created.
          example: 2023-04-19T08:15:14Z
          format: date-time
          type: string
        seenAt:
          description: When the token was last seen/used to authenticate with. NULL
            if the token has not yet been used for authentication.
          example: 2023-04-19T08:15:14Z
          format: date-time
          nullable: true
          type: string
        alias:
          description: Alias is no longer in active use and will often be NULL. It's
            kept around as a way of allowing old proxy tokens created with the old
            metadata format to keep working.
          example: randomid-or-some-alias
          nullable: true
          type: string
      required:
      - createdAt
      - project
      - projects
      - secret
      - tokenName
      - type
      type: object
    apiTokensSchema:
      additionalProperties: true
      description: "An object with [Unleash API tokens](https://docs.getunleash.io/reference/api-tokens-and-client-keys)"
      example:
        tokens:
        - createdAt: 2023-04-19T08:15:14Z
          environment: development
          seenAt: 2023-04-19T08:15:14Z
          projects:
          - developerexperience
          - enterprisegrowth
          tokenName: some-user
          project: developerexperience
          alias: randomid-or-some-alias
          secret: project:environment.xyzrandomstring
          type: client
          expiresAt: 2023-04-19T08:15:14Z
          username: a-name
        - createdAt: 2023-04-19T08:15:14Z
          environment: development
          seenAt: 2023-04-19T08:15:14Z
          projects:
          - developerexperience
          - enterprisegrowth
          tokenName: some-user
          project: developerexperience
          alias: randomid-or-some-alias
          secret: project:environment.xyzrandomstring
          type: client
          expiresAt: 2023-04-19T08:15:14Z
          username: a-name
      properties:
        tokens:
          description: A list of Unleash API tokens.
          items:
            $ref: '#/components/schemas/apiTokenSchema'
          type: array
      required:
      - tokens
      type: object
    constraintSchema:
      additionalProperties: true
      description: "A strategy constraint. For more information, refer to [the strategy\
        \ constraint reference documentation](https://docs.getunleash.io/reference/activation-strategies#constraints)"
      properties:
        contextName:
          description: The name of the context field that this constraint should apply
            to.
          example: appName
          type: string
        operator:
          description: "The operator to use when evaluating this constraint. For more\
            \ information about the various operators, refer to [the strategy constraint\
            \ operator documentation](https://docs.getunleash.io/reference/activation-strategies#constraint-operators)."
          enum:
          - NOT_IN
          - IN
          - STR_ENDS_WITH
          - STR_STARTS_WITH
          - STR_CONTAINS
          - NUM_EQ
          - NUM_GT
          - NUM_GTE
          - NUM_LT
          - NUM_LTE
          - DATE_AFTER
          - DATE_BEFORE
          - SEMVER_EQ
          - SEMVER_GT
          - SEMVER_LT
          example: IN
          type: string
        caseInsensitive:
          default: false
          description: Whether the operator should be case sensitive or not. Defaults
            to `false` (being case sensitive).
          type: boolean
        inverted:
          default: false
          description: "Whether the result should be negated or not. If `true`, will\
            \ turn a `true` result into a `false` result and vice versa."
          type: boolean
        values:
          description: The context values that should be used for constraint evaluation.
            Use this property instead of `value` for properties that accept multiple
            values.
          example:
          - my-app
          - my-other-app
          items:
            type: string
          type: array
        value:
          description: The context value that should be used for constraint evaluation.
            Use this property instead of `values` for properties that only accept
            single values.
          example: my-app
          type: string
      required:
      - contextName
      - operator
      type: object
    contextFieldSchema:
      additionalProperties: true
      description: "A representation of a [context field](https://docs.getunleash.io/reference/unleash-context)."
      example:
        legalValues:
        - description: Deep fuchsia
          value: '#c154c1'
        - description: Deep fuchsia
          value: '#c154c1'
        createdAt: 2023-06-29T10:19:00Z
        stickiness: true
        sortOrder: 900
        name: userId
        description: Used to uniquely identify users
        usedInFeatures: 3
        usedInProjects: 2
      properties:
        name:
          description: The name of the context field
          example: userId
          type: string
        description:
          description: The description of the context field.
          example: Used to uniquely identify users
          nullable: true
          type: string
        stickiness:
          description: "Does this context field support being used for [stickiness](https://docs.getunleash.io/reference/stickiness)\
            \ calculations"
          example: true
          type: boolean
        sortOrder:
          description: Used when sorting a list of context fields. Is also used as
            a tiebreaker if a list of context fields is sorted alphabetically.
          example: 900
          type: integer
        createdAt:
          description: When this context field was created
          example: 2023-06-29T10:19:00Z
          format: date-time
          nullable: true
          type: string
        usedInFeatures:
          description: Number of projects where this context field is used in
          example: 3
          minimum: 0
          nullable: true
          type: integer
        usedInProjects:
          description: Number of projects where this context field is used in
          example: 2
          minimum: 0
          nullable: true
          type: integer
        legalValues:
          description: Allowed values for this context field schema. Can be used to
            narrow down accepted input
          items:
            $ref: '#/components/schemas/legalValueSchema'
          type: array
      required:
      - name
      type: object
    contextFieldsSchema:
      description: A list of context fields
      items:
        $ref: '#/components/schemas/contextFieldSchema'
      type: array
    createApiTokenSchema:
      description: "The data required to create an [Unleash API token](https://docs.getunleash.io/reference/api-tokens-and-client-keys)."
      oneOf:
      - $ref: '#/components/schemas/createApiTokenSchema_oneOf'
      - $ref: '#/components/schemas/createApiTokenSchema_oneOf_1'
      - $ref: '#/components/schemas/createApiTokenSchema_oneOf_2'
      - $ref: '#/components/schemas/createApiTokenSchema_oneOf_3'
      type: object
    createContextFieldSchema:
      description: Data used to create a context field configuration.
      properties:
        description:
          description: A description of the context field
          example: The user's subscription tier
          type: string
        stickiness:
          description: "`true` if this field should be available for use with [custom\
            \ stickiness](https://docs.getunleash.io/reference/stickiness#custom-stickiness),\
            \ otherwise `false`"
          example: false
          type: boolean
        sortOrder:
          description: How this context field should be sorted if no other sort order
            is selected
          example: 2
          type: integer
        legalValues:
          description: A list of allowed values for this context field
          example:
          - value: gold
          - value: silver
          - value: crystal
          items:
            $ref: '#/components/schemas/legalValueSchema'
          type: array
        name:
          description: The name of the context field.
          example: subscriptionTier
          type: string
      required:
      - name
      type: object
    createFeatureNamingPatternSchema:
      description: Create a feature naming pattern
      example:
        pattern: "^[A-Za-z]+\\.[A-Za-z]+\\.[A-Za-z0-9-]+$"
        description: |-
          <project>.<featureName>.<ticket>

          The flag name should contain the project name, the feature name, and the ticket number, each separated by a dot.
        example: dx.feature1.1-135
      properties:
        pattern:
          description: "A JavaScript regular expression pattern, without the start\
            \ and end delimiters. Optional flags are not allowed."
          example: "^[A-Za-z]+\\.[A-Za-z]+\\.[A-Za-z0-9-]+$"
          nullable: true
          type: string
        example:
          description: An example of a feature name that matches the pattern. Must
            itself match the pattern supplied.
          example: dx.feature1.1-135
          nullable: true
          type: string
        description:
          description: A description of the pattern in a human-readable format. Will
            be shown to users when they create a new feature flag.
          example: |-
            <project>.<featureName>.<ticket>

            The flag name should contain the project name, the feature name, and the ticket number, each separated by a dot.
          nullable: true
          type: string
      required:
      - pattern
      type: object
    createFeatureStrategySchema:
      description: Create a strategy configuration in a feature
      properties:
        name:
          description: The name of the strategy type
          example: flexibleRollout
          type: string
        title:
          description: A descriptive title for the strategy
          example: Gradual Rollout 25-Prod
          nullable: true
          type: string
        disabled:
          description: A toggle to disable the strategy. defaults to false. Disabled
            strategies are not evaluated or returned to the SDKs
          example: false
          nullable: true
          type: boolean
        sortOrder:
          description: The order of the strategy in the list
          example: 9999
          type: number
        constraints:
          description: A list of the constraints attached to the strategy. See https://docs.getunleash.io/reference/activation-strategies#constraints
          example:
          - values:
            - "1"
            - "2"
            inverted: false
            operator: IN
            contextName: appName
            caseInsensitive: false
          items:
            $ref: '#/components/schemas/constraintSchema'
          type: array
        variants:
          description: Strategy level variants
          items:
            $ref: '#/components/schemas/createStrategyVariantSchema'
          type: array
        parameters:
          additionalProperties:
            type: string
          description: A list of parameters for a strategy
          type: object
        segments:
          description: Ids of segments to use for this strategy
          example:
          - 1
          - 2
          items:
            type: number
          type: array
      required:
      - name
      type: object
    createPatSchema:
      description: "Describes the properties required to create a [personal access\
        \ token](https://docs.getunleash.io/reference/api-tokens-and-client-keys#personal-access-tokens),\
        \ or PAT. PATs are automatically scoped to the authenticated user."
      properties:
        description:
          description: The PAT's description.
          example: user:xyzrandomstring
          type: string
        expiresAt:
          description: The PAT's expiration date.
          example: 2023-04-19T08:15:14Z
          format: date-time
          type: string
      required:
      - description
      - expiresAt
      type: object
    createStrategyVariantSchema:
      description: This is an experimental property. It may change or be removed as
        we work on it. Please don't depend on it yet. A strategy variant allows you
        to attach any data to strategies instead of only returning `true`/`false`.
        Strategy variants take precedence over feature variants.
      properties:
        name:
          description: The variant name. Must be unique for this feature flag
          example: blue_group
          type: string
        weight:
          description: "The weight is the likelihood of any one user getting this\
            \ variant. It is an integer between 0 and 1000. See the section on [variant\
            \ weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight)\
            \ for more information"
          maximum: 1000
          minimum: 0
          type: integer
        weightType:
          description: "Set to `fix` if this variant must have exactly the weight\
            \ allocated to it. If the type is `variable`, the weight will adjust so\
            \ that the total weight of all variants adds up to 1000. Refer to the\
            \ [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight)."
          enum:
          - variable
          - fix
          example: fix
          type: string
        stickiness:
          description: "The [stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness)\
            \ to use for distribution of this variant. Stickiness is how Unleash guarantees\
            \ that the same user gets the same variant every time"
          example: custom.context.field
          type: string
        payload:
          $ref: '#/components/schemas/createStrategyVariantSchema_payload'
      required:
      - name
      - stickiness
      - weight
      - weightType
      type: object
    createUserResponseSchema:
      additionalProperties: true
      description: An Unleash user after creation
      example:
        loginAttempts: 3
        inviteLink: http://localhost:4242/invite-link/some-secret
        accountType: User
        isAPI: true
        scimId: 01HTMEXAMPLESCIMID7SWWGHN6
        createdAt: 2023-06-30T11:41:00.123Z
        seenAt: 2023-06-30T11:42:00.345Z
        rootRole: 1
        deletedSessions: 1
        emailSent: false
        permissions:
        - permissions
        - permissions
        activeSessions: 2
        imageUrl: https://example.com/242x200.png
        name: User
        id: 123
        email: user@example.com
        username: hunter
      properties:
        id:
          description: The user id
          example: 123
          type: integer
        isAPI:
          deprecated: true
          description: Deprecated in v5. Used internally to know which operations
            the user should be allowed to perform
          example: true
          type: boolean
        name:
          description: Name of the user
          example: User
          nullable: true
          type: string
        email:
          description: Email of the user
          example: user@example.com
          type: string
        username:
          description: A unique username for the user
          example: hunter
          nullable: true
          type: string
        imageUrl:
          description: URL used for the user profile image
          example: https://example.com/242x200.png
          type: string
        inviteLink:
          description: "If the user is actively inviting other users, this is the\
            \ link that can be shared with other users"
          example: http://localhost:4242/invite-link/some-secret
          type: string
        loginAttempts:
          description: How many unsuccessful attempts at logging in has the user made
          example: 3
          minimum: 0
          type: integer
        emailSent:
          description: Is the welcome email sent to the user or not
          example: false
          type: boolean
        rootRole:
          $ref: '#/components/schemas/createUserResponseSchema_rootRole'
        seenAt:
          description: The last time this user logged in
          example: 2023-06-30T11:42:00.345Z
          format: date-time
          nullable: true
          type: string
        createdAt:
          description: The user was created at this time
          example: 2023-06-30T11:41:00.123Z
          format: date-time
          type: string
        accountType:
          description: A user is either an actual User or a Service Account
          example: User
          type: string
        permissions:
          description: Deprecated
          items:
            type: string
          type: array
        scimId:
          description: "The SCIM ID of the user, only present if managed by SCIM"
          example: 01HTMEXAMPLESCIMID7SWWGHN6
          nullable: true
          type: string
        activeSessions:
          description: Count of active browser sessions for this user
          example: 2
          nullable: true
          type: integer
        deletedSessions:
          description: Experimental. The number of deleted browser sessions after
            last login
          example: 1
          type: number
      required:
      - id
      type: object
    createUserSchema:
      additionalProperties: true
      description: "The payload must contain at least one of the name and email properties,\
        \ though which one is up to you. For the user to be able to log in to the\
        \ system, the user must have an email."
      properties:
        username:
          description: The user's username. Must be provided if email is not provided.
          example: hunter
          type: string
        email:
          description: The user's email address. Must be provided if username is not
            provided.
          example: user@example.com
          type: string
        name:
          description: The user's name (not the user's username).
          example: Sam Seawright
          type: string
        password:
          description: Password for the user
          example: k!5As3HquUrQ
          type: string
        rootRole:
          $ref: '#/components/schemas/createUserSchema_rootRole'
        sendEmail:
          description: Whether to send a welcome email with a login link to the user
            or not. Defaults to `true`.
          example: false
          type: boolean
      required:
      - rootRole
      type: object
    environmentSchema:
      additionalProperties: true
      description: A definition of the project environment
      example:
        projectCount: 10
        enabledToggleCount: 10
        protected: true
        sortOrder: 3
        name: my-dev-env
        type: development
        apiTokenCount: 6
        enabled: true
      properties:
        name:
          description: The name of the environment
          example: my-dev-env
          type: string
        type:
          description: "The [type of environment](https://docs.getunleash.io/reference/environments#environment-types)."
          example: development
          type: string
        enabled:
          description: "`true` if the environment is enabled for the project, otherwise\
            \ `false`."
          example: true
          type: boolean
        protected:
          description: "`true` if the environment is protected, otherwise `false`.\
            \ A *protected* environment can not be deleted."
          example: true
          type: boolean
        sortOrder:
          description: "Priority of the environment in a list of environments, the\
            \ lower the value, the higher up in the list the environment will appear.\
            \ Needs to be an integer"
          example: 3
          type: integer
        projectCount:
          description: The number of projects with this environment
          example: 10
          minimum: 0
          nullable: true
          type: integer
        apiTokenCount:
          description: The number of API tokens for the project environment
          example: 6
          minimum: 0
          nullable: true
          type: integer
        enabledToggleCount:
          description: The number of enabled toggles for the project environment
          example: 10
          minimum: 0
          nullable: true
          type: integer
      required:
      - enabled
      - name
      - protected
      - sortOrder
      - type
      type: object
    environmentsSchema:
      additionalProperties: true
      description: A versioned list of environments
      example:
        environments:
        - projectCount: 10
          enabledToggleCount: 10
          protected: true
          sortOrder: 3
          name: my-dev-env
          type: development
          apiTokenCount: 6
          enabled: true
        - projectCount: 10
          enabledToggleCount: 10
          protected: true
          sortOrder: 3
          name: my-dev-env
          type: development
          apiTokenCount: 6
          enabled: true
        version: 1
      properties:
        version:
          description: Version of the environments schema
          example: 1
          type: integer
        environments:
          description: List of environments
          items:
            $ref: '#/components/schemas/environmentSchema'
          type: array
      required:
      - environments
      - version
      type: object
    featureTypeCountSchema:
      additionalProperties: true
      description: A count of feature flags of a specific type
      example:
        count: 1
        type: kill-switch
      properties:
        type:
          description: "Type of the flag e.g. experiment, kill-switch, release, operational,\
            \ permission"
          example: kill-switch
          type: string
        count:
          description: Number of feature flags of this type
          example: 1
          type: number
      required:
      - count
      - type
      type: object
    groupUserModelSchema:
      additionalProperties: true
      description: Details for a single user belonging to a group
      example:
        createdBy: admin
        joinedAt: 2023-06-30T11:41:00.123Z
        user:
          loginAttempts: 3
          inviteLink: http://localhost:4242/invite-link/some-secret
          accountType: User
          isAPI: true
          scimId: 01HTMEXAMPLESCIMID7SWWGHN6
          createdAt: 2023-06-30T11:41:00.123Z
          seenAt: 2023-06-30T11:42:00.345Z
          rootRole: 1
          deletedSessions: 1
          emailSent: false
          permissions:
          - permissions
          - permissions
          activeSessions: 2
          imageUrl: https://example.com/242x200.png
          name: User
          id: 123
          email: user@example.com
          username: hunter
      properties:
        joinedAt:
          description: The date when the user joined the group
          example: 2023-06-30T11:41:00.123Z
          format: date-time
          type: string
        createdBy:
          description: The username of the user who added this user to this group
          example: admin
          nullable: true
          type: string
        user:
          $ref: '#/components/schemas/userSchema'
      required:
      - user
      type: object
    legalValueSchema:
      additionalProperties: true
      description: Describes a legal value. Typically used to limit possible values
        for contextFields or strategy properties
      example:
        description: Deep fuchsia
        value: '#c154c1'
      properties:
        value:
          description: The valid value
          example: '#c154c1'
          type: string
        description:
          description: Describes this specific legal value
          example: Deep fuchsia
          type: string
      required:
      - value
      type: object
    parametersSchema:
      additionalProperties:
        type: string
      description: A list of parameters for a strategy
      type: object
    patSchema:
      description: "Describes a [personal access token](https://docs.getunleash.io/reference/api-tokens-and-client-keys#personal-access-tokens),\
        \ or PAT. PATs are automatically scoped to the authenticated user."
      example:
        createdAt: 2023-04-19T08:15:14Z
        seenAt: 2023-04-19T08:15:14Z
        description: user:xyzrandomstring
        id: 1
        secret: user:xyzrandomstring
        userId: 1337
        expiresAt: 2023-04-19T08:15:14Z
      properties:
        id:
          description: "The PAT's ID. PAT IDs are incrementing integers. In other\
            \ words, a more recently created PAT will always have a higher ID than\
            \ an older one."
          example: 1
          minimum: 1
          type: integer
        secret:
          description: The token used for authentication. It is automatically generated
            by Unleash when the PAT is created and that is the only time this property
            is returned.
          example: user:xyzrandomstring
          type: string
        createdAt:
          description: The date and time of when the PAT was created.
          example: 2023-04-19T08:15:14Z
          format: date-time
          type: string
        seenAt:
          description: When the PAT was last seen/used to authenticate with. `null`
            if it has not been used yet.
          example: 2023-04-19T08:15:14Z
          format: date-time
          nullable: true
          type: string
        userId:
          description: The ID of the user this PAT belongs to.
          example: 1337
          type: integer
        description:
          description: The PAT's description.
          example: user:xyzrandomstring
          type: string
        expiresAt:
          description: The PAT's expiration date.
          example: 2023-04-19T08:15:14Z
          format: date-time
          type: string
      required:
      - createdAt
      - description
      - expiresAt
      - id
      type: object
    patsSchema:
      description: "Contains a collection of [personal access tokens](https://docs.getunleash.io/reference/api-tokens-and-client-keys#personal-access-tokens),\
        \ or PATs. PATs are automatically scoped to the authenticated user."
      example:
        pats:
        - createdAt: 2023-04-19T08:15:14Z
          seenAt: 2023-04-19T08:15:14Z
          description: user:xyzrandomstring
          id: 1
          secret: user:xyzrandomstring
          userId: 1337
          expiresAt: 2023-04-19T08:15:14Z
        - createdAt: 2023-04-19T08:15:14Z
          seenAt: 2023-04-19T08:15:14Z
          description: user:xyzrandomstring
          id: 1
          secret: user:xyzrandomstring
          userId: 1337
          expiresAt: 2023-04-19T08:15:14Z
      properties:
        pats:
          description: A collection of PATs.
          items:
            $ref: '#/components/schemas/patSchema'
          type: array
      type: object
    projectEnvironmentSchema:
      additionalProperties: true
      description: "Add an environment to a project, optionally also sets if change\
        \ requests are enabled for this environment on the project"
      properties:
        environment:
          description: The environment to add to the project
          example: development
          type: string
        changeRequestsEnabled:
          description: Whether change requests should be enabled or for this environment
            on the project or not
          example: true
          type: boolean
        defaultStrategy:
          $ref: '#/components/schemas/createFeatureStrategySchema'
      required:
      - environment
      type: object
    projectOverviewSchema:
      additionalProperties: true
      description: "A high-level overview of a project. It contains information such\
        \ as project statistics, the name of the project, what members and what features\
        \ it contains, etc."
      example:
        featureNaming:
          pattern: "^[A-Za-z]+\\.[A-Za-z]+\\.[A-Za-z0-9-]+$"
          description: |-
            <project>.<featureName>.<ticket>

            The flag name should contain the project name, the feature name, and the ticket number, each separated by a dot.
          example: dx.feature1.1-135
        environments:
        - environment: development
        - environment: production
          defaultStrategy:
            name: flexibleRollout
            constraints: []
            parameters:
              groupId: stickyFlag
              rollout: "50"
              stickiness: customAppName
        featureLimit: 100
        defaultStickiness: userId
        description: DX squad feature release
        health: 50
        version: 1
        mode: open
        archivedAt: 2023-02-10T08:36:35.262Z
        createdAt: 2023-02-10T08:36:35.262Z
        onboardingStatus:
          status: onboarding-started
        stats:
          archivedCurrentWindow: 5
          projectMembersAddedCurrentWindow: 1
          avgTimeToProdCurrentWindow: 10
          archivedPastWindow: 5
          createdCurrentWindow: 15
          createdPastWindow: 15
          projectActivityCurrentWindow: 100
          projectActivityPastWindow: 100
        members: 4
        name: dx-squad
        featureTypeCounts:
        - count: 1
          type: kill-switch
        - count: 1
          type: kill-switch
        favorite: true
        updatedAt: 2023-02-10T08:36:35.262Z
      properties:
        stats:
          $ref: '#/components/schemas/projectStatsSchema'
        version:
          description: The schema version used to describe the project overview
          example: 1
          type: integer
        name:
          description: The name of this project
          example: dx-squad
          type: string
        description:
          description: Additional information about the project
          example: DX squad feature release
          nullable: true
          type: string
        defaultStickiness:
          description: A default stickiness for the project affecting the default
            stickiness value for variants and Gradual Rollout strategy
          example: userId
          type: string
        mode:
          description: "The project's [collaboration mode](https://docs.getunleash.io/reference/project-collaboration-mode).\
            \ Determines whether non-project members can submit change requests or\
            \ not."
          enum:
          - open
          - protected
          - private
          example: open
          type: string
        featureLimit:
          description: A limit on the number of features allowed in the project. Null
            if no limit.
          example: 100
          nullable: true
          type: number
        featureNaming:
          $ref: '#/components/schemas/createFeatureNamingPatternSchema'
        members:
          description: The number of members this project has
          example: 4
          type: number
        health:
          description: "An indicator of the [project's health](https://docs.getunleash.io/reference/technical-debt#project-status)\
            \ on a scale from 0 to 100"
          example: 50
          type: number
        environments:
          description: The environments that are enabled for this project
          example:
          - environment: development
          - environment: production
            defaultStrategy:
              name: flexibleRollout
              constraints: []
              parameters:
                groupId: stickyFlag
                rollout: "50"
                stickiness: customAppName
          items:
            $ref: '#/components/schemas/projectEnvironmentSchema'
          type: array
        featureTypeCounts:
          description: The number of features of each type that are in this project
          items:
            $ref: '#/components/schemas/featureTypeCountSchema'
          type: array
        updatedAt:
          description: When the project was last updated.
          example: 2023-02-10T08:36:35.262Z
          format: date-time
          nullable: true
          type: string
        archivedAt:
          description: When the project was archived.
          example: 2023-02-10T08:36:35.262Z
          format: date-time
          nullable: true
          type: string
        createdAt:
          description: When the project was created.
          example: 2023-02-10T08:36:35.262Z
          format: date-time
          nullable: true
          type: string
        favorite:
          description: "`true` if the project was favorited, otherwise `false`."
          example: true
          type: boolean
        onboardingStatus:
          $ref: '#/components/schemas/projectOverviewSchema_onboardingStatus'
      required:
      - name
      - onboardingStatus
      - version
      type: object
    projectSchema:
      additionalProperties: true
      description: A definition of the project used for projects listing purposes
      example:
        mode: open
        name: DX-Squad
        description: DX squad feature release
        id: dx-squad
      properties:
        id:
          description: The id of this project
          example: dx-squad
          type: string
        name:
          description: The name of this project
          example: DX-Squad
          type: string
        description:
          deprecated: true
          description: Additional information about the project
          example: DX squad feature release
          nullable: true
          type: string
        mode:
          description: "The project's [collaboration mode](https://docs.getunleash.io/reference/project-collaboration-mode).\
            \ Determines whether non-project members can submit change requests or\
            \ not."
          enum:
          - open
          - protected
          - private
          example: open
          type: string
      required:
      - id
      - name
      type: object
    projectStatsSchema:
      additionalProperties: true
      description: |-
        Statistics for a project, including the average time to production, number of features created, the project activity and more.

        Stats are divided into current and previous **windows**.
        - The **current window** is the past 30 days.
        - The **previous window** is the 30 days **before** the current window (from 60 to 30 days ago)
      example:
        archivedCurrentWindow: 5
        projectMembersAddedCurrentWindow: 1
        avgTimeToProdCurrentWindow: 10
        archivedPastWindow: 5
        createdCurrentWindow: 15
        createdPastWindow: 15
        projectActivityCurrentWindow: 100
        projectActivityPastWindow: 100
      properties:
        avgTimeToProdCurrentWindow:
          description: The average time from when a feature was created to when it
            was enabled in the "production" environment during the current window
          example: 10
          type: number
        createdCurrentWindow:
          description: The number of feature flags created during the current window
          example: 15
          type: number
        createdPastWindow:
          description: The number of feature flags created during the previous window
          example: 15
          type: number
        archivedCurrentWindow:
          description: The number of feature flags that were archived during the current
            window
          example: 5
          type: number
        archivedPastWindow:
          description: The number of feature flags that were archived during the previous
            window
          example: 5
          type: number
        projectActivityCurrentWindow:
          description: The number of project events that occurred during the current
            window
          example: 100
          type: number
        projectActivityPastWindow:
          description: The number of project events that occurred during the previous
            window
          example: 100
          type: number
        projectMembersAddedCurrentWindow:
          description: The number of members that were added to the project during
            the current window
          example: 1
          type: number
      required:
      - archivedCurrentWindow
      - archivedPastWindow
      - avgTimeToProdCurrentWindow
      - createdCurrentWindow
      - createdPastWindow
      - projectActivityCurrentWindow
      - projectActivityPastWindow
      - projectMembersAddedCurrentWindow
      type: object
    projectsSchema:
      additionalProperties: true
      description: An overview of all the projects in the Unleash instance
      example:
        projects:
        - mode: open
          name: DX-Squad
          description: DX squad feature release
          id: dx-squad
        - mode: open
          name: DX-Squad
          description: DX squad feature release
          id: dx-squad
        version: 1
      properties:
        version:
          description: The schema version used to represent the project data.
          example: 1
          type: integer
        projects:
          description: A list of projects in the Unleash instance
          items:
            $ref: '#/components/schemas/projectSchema'
          type: array
      required:
      - projects
      - version
      type: object
    roleSchema:
      additionalProperties: true
      description: A role holds permissions to allow Unleash to decide what actions
        a role holder is allowed to perform
      example:
        name: Editor
        description: Users with the editor role have access to most features in Unleash
          but can not manage users and roles in the global scope. Editors will be
          added as project owners when creating projects and get superuser rights
          within the context of these projects. Users with the editor role will also
          get access to most permissions on the default project by default.
        project: default
        id: 9
        type: root
      properties:
        id:
          description: The role id
          example: 9
          minimum: 0
          type: integer
        type:
          description: A role can either be a global root role (applies to all projects)
            or a project role
          example: root
          type: string
        name:
          description: The name of the role
          example: Editor
          type: string
        description:
          description: A more detailed description of the role and what use it's intended
            for
          example: Users with the editor role have access to most features in Unleash
            but can not manage users and roles in the global scope. Editors will be
            added as project owners when creating projects and get superuser rights
            within the context of these projects. Users with the editor role will
            also get access to most permissions on the default project by default.
          type: string
        project:
          description: What project the role belongs to
          example: default
          nullable: true
          type: string
      required:
      - id
      - name
      - type
      type: object
    updateApiTokenSchema:
      description: An object with fields to updated for a given API token.
      properties:
        expiresAt:
          description: The new time when this token should expire.
          example: 2023-09-04T11:26:24+02:00
          format: date-time
          type: string
      required:
      - expiresAt
      type: object
    updateContextFieldSchema:
      description: Data to update an existing context field configuration.
      properties:
        description:
          description: A description of the context field
          example: The user's subscription tier
          type: string
        stickiness:
          description: "`true` if this field should be available for use with [custom\
            \ stickiness](https://docs.getunleash.io/reference/stickiness#custom-stickiness),\
            \ otherwise `false`"
          example: false
          type: boolean
        sortOrder:
          description: How this context field should be sorted if no other sort order
            is selected
          example: 2
          type: integer
        legalValues:
          description: A list of allowed values for this context field
          example:
          - value: gold
          - value: silver
          - value: crystal
          items:
            $ref: '#/components/schemas/legalValueSchema'
          type: array
      type: object
    updateUserSchema:
      description: All fields that can be directly changed for the user
      properties:
        email:
          description: The user's email address. Must be provided if username is not
            provided.
          example: user@example.com
          type: string
        name:
          description: The user's name (not the user's username).
          example: Sam Seawright
          type: string
        rootRole:
          $ref: '#/components/schemas/createUserSchema_rootRole'
      type: object
    userSchema:
      additionalProperties: true
      description: An Unleash user
      example:
        loginAttempts: 3
        inviteLink: http://localhost:4242/invite-link/some-secret
        accountType: User
        isAPI: true
        scimId: 01HTMEXAMPLESCIMID7SWWGHN6
        createdAt: 2023-06-30T11:41:00.123Z
        seenAt: 2023-06-30T11:42:00.345Z
        rootRole: 1
        deletedSessions: 1
        emailSent: false
        permissions:
        - permissions
        - permissions
        activeSessions: 2
        imageUrl: https://example.com/242x200.png
        name: User
        id: 123
        email: user@example.com
        username: hunter
      properties:
        id:
          description: The user id
          example: 123
          type: integer
        isAPI:
          deprecated: true
          description: Deprecated in v5. Used internally to know which operations
            the user should be allowed to perform
          example: true
          type: boolean
        name:
          description: Name of the user
          example: User
          nullable: true
          type: string
        email:
          description: Email of the user
          example: user@example.com
          type: string
        username:
          description: A unique username for the user
          example: hunter
          nullable: true
          type: string
        imageUrl:
          description: URL used for the user profile image
          example: https://example.com/242x200.png
          type: string
        inviteLink:
          description: "If the user is actively inviting other users, this is the\
            \ link that can be shared with other users"
          example: http://localhost:4242/invite-link/some-secret
          type: string
        loginAttempts:
          description: How many unsuccessful attempts at logging in has the user made
          example: 3
          minimum: 0
          type: integer
        emailSent:
          description: Is the welcome email sent to the user or not
          example: false
          type: boolean
        rootRole:
          description: "Which [root role](https://docs.getunleash.io/reference/rbac#predefined-roles)\
            \ this user is assigned"
          example: 1
          minimum: 0
          type: integer
        seenAt:
          description: The last time this user logged in
          example: 2023-06-30T11:42:00.345Z
          format: date-time
          nullable: true
          type: string
        createdAt:
          description: The user was created at this time
          example: 2023-06-30T11:41:00.123Z
          format: date-time
          type: string
        accountType:
          description: A user is either an actual User or a Service Account
          example: User
          type: string
        permissions:
          description: Deprecated
          items:
            type: string
          type: array
        scimId:
          description: "The SCIM ID of the user, only present if managed by SCIM"
          example: 01HTMEXAMPLESCIMID7SWWGHN6
          nullable: true
          type: string
        activeSessions:
          description: Count of active browser sessions for this user
          example: 2
          nullable: true
          type: integer
        deletedSessions:
          description: Experimental. The number of deleted browser sessions after
            last login
          example: 1
          type: number
      required:
      - id
      type: object
    adminPermissionSchema:
      additionalProperties: true
      description: Describes a single permission
      example:
        environment: development
        displayName: Update feature flags
        name: UPDATE_FEATURE
        id: 3
        type: project
      properties:
        id:
          description: The identifier for this permission
          example: 3
          type: integer
        name:
          description: The name of this permission
          example: UPDATE_FEATURE
          type: string
        displayName:
          description: The name to display in listings of permissions
          example: Update feature flags
          type: string
        type:
          description: "What level this permission applies to. Either root, project\
            \ or the name of the environment it applies to"
          example: project
          type: string
        environment:
          description: Which environment this permission applies to
          example: development
          type: string
      required:
      - displayName
      - id
      - name
      - type
      type: object
    adminPermissionsSchema:
      additionalProperties: true
      description: What kind of permissions are available
      example:
        permissions:
          environments:
          - permissions:
            - environment: development
              displayName: Update feature flags
              name: UPDATE_FEATURE
              id: 3
              type: project
            - environment: development
              displayName: Update feature flags
              name: UPDATE_FEATURE
              id: 3
              type: project
            name: development
          - permissions:
            - environment: development
              displayName: Update feature flags
              name: UPDATE_FEATURE
              id: 3
              type: project
            - environment: development
              displayName: Update feature flags
              name: UPDATE_FEATURE
              id: 3
              type: project
            name: development
          root:
          - environment: development
            displayName: Update feature flags
            name: UPDATE_FEATURE
            id: 3
            type: project
          - environment: development
            displayName: Update feature flags
            name: UPDATE_FEATURE
            id: 3
            type: project
          project:
          - environment: development
            displayName: Update feature flags
            name: UPDATE_FEATURE
            id: 3
            type: project
          - environment: development
            displayName: Update feature flags
            name: UPDATE_FEATURE
            id: 3
            type: project
        version: 1
      properties:
        permissions:
          $ref: '#/components/schemas/adminPermissionsSchema_permissions'
        version:
          description: The api version of this response. A natural increasing number.
            Only increases if format changes
          enum:
          - 1
          - 2
          example: 1
          minimum: 1
          type: integer
      required:
      - permissions
      - version
      type: object
    createEnvironmentSchema:
      description: "Data required to create a new [environment](https://docs.getunleash.io/reference/environments)"
      properties:
        name:
          description: "The name of the environment. Must be a URL-friendly string\
            \ according to [RFC 3968, section 2.3](https://www.rfc-editor.org/rfc/rfc3986#section-2.3)"
          pattern: "^[a-zA-Z0-9~_.-]+$"
          type: string
        type:
          description: |-
            The [type of environment](https://docs.getunleash.io/reference/environments#environment-types) you would like to create. Unleash officially recognizes the following values:
            - `development`
            - `test`
            - `preproduction`
            - `production`

            If you pass a string that is not one of the recognized values, Unleash will accept it, but it will carry no special semantics.
          minLength: 1
          type: string
        enabled:
          description: Newly created environments are enabled by default. Set this
            property to `false` to create the environment in a disabled state.
          type: boolean
        sortOrder:
          description: "Defines where in the list of environments to place this environment.\
            \ The list uses an ascending sort, so lower numbers are shown first. You\
            \ can change this value later."
          type: integer
      required:
      - name
      - type
      type: object
    createProjectSchema:
      description: "Data used to create a new [project](https://docs.getunleash.io/reference/projects)."
      properties:
        id:
          deprecated: true
          description: "The project's identifier. If this property is not present\
            \ or is an empty string, Unleash will generate the project id automatically.\
            \ This property is deprecated."
          example: pet-shop
          pattern: "[A-Za-z0-9_~.-]*"
          type: string
        name:
          description: The project's name. The name must contain at least one non-whitespace
            character.
          example: Pet shop
          pattern: ^(?!\s*$).+
          type: string
        description:
          description: The project's description.
          example: This project contains features related to the new pet shop.
          nullable: true
          type: string
        mode:
          default: open
          description: A mode of the project affecting what actions are possible in
            this project
          enum:
          - open
          - protected
          - private
          example: open
          type: string
        defaultStickiness:
          default: default
          description: A default stickiness for the project affecting the default
            stickiness value for variants and Gradual Rollout strategy
          example: userId
          type: string
        environments:
          description: "A list of environments that should be enabled for this project.\
            \ When provided, the list must contain at least one environment. If this\
            \ property is missing, Unleash will default to enabling all non-deprecated\
            \ environments for the project."
          example:
          - production
          - development
          items:
            example: production
            type: string
          minItems: 1
          type: array
        changeRequestEnvironments:
          description: "A list of environments that should have change requests enabled.\
            \ If the list includes environments not in the `environments` list, they\
            \ will still have change requests enabled."
          items:
            $ref: '#/components/schemas/createProjectSchema_changeRequestEnvironments_inner'
          type: array
      required:
      - name
      type: object
    createRoleWithPermissionsSchema:
      anyOf:
      - $ref: '#/components/schemas/createRoleWithPermissionsSchema_anyOf'
      - $ref: '#/components/schemas/createRoleWithPermissionsSchema_anyOf_1'
      description: A write model for the custom role and permissions to allow Unleash
        to decide what actions a role holder is allowed to perform
      type: object
    oidcSettingsSchema:
      description: Settings for configuring OpenID Connect as a login provider for
        Unleash
      oneOf:
      - $ref: '#/components/schemas/oidcSettingsSchema_oneOf'
      - $ref: '#/components/schemas/oidcSettingsSchema_oneOf_1'
      type: object
    passwordAuthSchema:
      description: Does the server allow username/password authentication
      example:
        disabled: false
      properties:
        disabled:
          description: Is username/password authentication disabled
          example: false
          type: boolean
      type: object
    projectAccessConfigurationSchema:
      additionalProperties: true
      description: An object describing roles for a project and what users and groups
        are part of that role.
      properties:
        roles:
          description: A list of roles that are available within this project.
          items:
            $ref: '#/components/schemas/projectAccessConfigurationSchema_roles_inner'
          type: array
      required:
      - roles
      type: object
    projectAccessSchema:
      additionalProperties: true
      description: An object describing access permissions for a given project.
      example:
        roles:
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          project: default
          id: 9
          type: root
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          project: default
          id: 9
          type: root
        groups:
        - createdAt: 2023-06-30T11:41:00.123Z
          addedAt: 2023-08-01T14:35:16Z
          rootRole: 1
          createdBy: admin
          roleId: 5
          mappingsSSO:
          - SSOGroup1
          - SSOGroup2
          roles:
          - 5
          - 5
          name: DX team
          description: Current members of the DX squad
          id: 1
          users:
          - createdBy: admin
            joinedAt: 2023-06-30T11:41:00.123Z
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              scimId: 01HTMEXAMPLESCIMID7SWWGHN6
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              deletedSessions: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              activeSessions: 2
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
          - createdBy: admin
            joinedAt: 2023-06-30T11:41:00.123Z
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              scimId: 01HTMEXAMPLESCIMID7SWWGHN6
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              deletedSessions: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              activeSessions: 2
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
          scimId: 01HTMEXAMPLESCIMID7SWWGHN7
        - createdAt: 2023-06-30T11:41:00.123Z
          addedAt: 2023-08-01T14:35:16Z
          rootRole: 1
          createdBy: admin
          roleId: 5
          mappingsSSO:
          - SSOGroup1
          - SSOGroup2
          roles:
          - 5
          - 5
          name: DX team
          description: Current members of the DX squad
          id: 1
          users:
          - createdBy: admin
            joinedAt: 2023-06-30T11:41:00.123Z
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              scimId: 01HTMEXAMPLESCIMID7SWWGHN6
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              deletedSessions: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              activeSessions: 2
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
          - createdBy: admin
            joinedAt: 2023-06-30T11:41:00.123Z
            user:
              loginAttempts: 3
              inviteLink: http://localhost:4242/invite-link/some-secret
              accountType: User
              isAPI: true
              scimId: 01HTMEXAMPLESCIMID7SWWGHN6
              createdAt: 2023-06-30T11:41:00.123Z
              seenAt: 2023-06-30T11:42:00.345Z
              rootRole: 1
              deletedSessions: 1
              emailSent: false
              permissions:
              - permissions
              - permissions
              activeSessions: 2
              imageUrl: https://example.com/242x200.png
              name: User
              id: 123
              email: user@example.com
              username: hunter
          scimId: 01HTMEXAMPLESCIMID7SWWGHN7
        users:
        - addedAt: 2023-08-01T14:35:16Z
          roleId: 5
          imageUrl: https://openapi-generator.tech
          roles:
          - 5
          - 5
          name: Hunter Burgan
          id: 1
          isAPI: false
          email: hunter@hunter.com
        - addedAt: 2023-08-01T14:35:16Z
          roleId: 5
          imageUrl: https://openapi-generator.tech
          roles:
          - 5
          - 5
          name: Hunter Burgan
          id: 1
          isAPI: false
          email: hunter@hunter.com
      properties:
        groups:
          description: A list of groups that have access to this project
          items:
            $ref: '#/components/schemas/groupWithProjectRoleSchema'
          type: array
        users:
          description: A list of users and their roles within this project
          items:
            $ref: '#/components/schemas/userWithProjectRoleSchema'
          type: array
        roles:
          description: A list of roles that are available within this project.
          items:
            $ref: '#/components/schemas/roleSchema'
          type: array
      required:
      - groups
      - roles
      - users
      type: object
    projectCreatedSchema:
      additionalProperties: true
      description: Details about the newly created project.
      example:
        mode: open
        changeRequestEnvironments:
        - requiredApprovals: 3
          name: production
        - requiredApprovals: 3
          name: production
        environments:
        - production
        - staging
        featureLimit: 100
        name: Pet shop
        defaultStickiness: userId
        description: This project contains features related to the new pet shop.
        id: pet-shop
      properties:
        id:
          description: The project's identifier.
          example: pet-shop
          pattern: "[A-Za-z0-9_~.-]+"
          type: string
        name:
          description: The project's name.
          example: Pet shop
          minLength: 1
          type: string
        description:
          description: The project's description.
          example: This project contains features related to the new pet shop.
          nullable: true
          type: string
        featureLimit:
          description: A limit on the number of features allowed in the project. `null`
            if no limit.
          example: 100
          nullable: true
          type: integer
        mode:
          description: A mode of the project affecting what actions are possible in
            this project
          enum:
          - open
          - protected
          - private
          example: open
          type: string
        defaultStickiness:
          description: A default stickiness for the project affecting the default
            stickiness value for variants and Gradual Rollout strategy
          example: userId
          type: string
        environments:
          description: The environments enabled for the project.
          example:
          - production
          - staging
          items:
            type: string
          minItems: 1
          type: array
        changeRequestEnvironments:
          description: The list of environments that have change requests enabled.
          items:
            $ref: '#/components/schemas/projectCreatedSchema_changeRequestEnvironments_inner'
          type: array
      required:
      - id
      - name
      type: object
    roleWithPermissionsSchema:
      additionalProperties: true
      description: A read model for the role and permissions to allow Unleash to decide
        what actions a role holder is allowed to perform
      example:
        permissions:
        - environment: development
          displayName: Update feature flags
          name: UPDATE_FEATURE
          id: 3
          type: project
        - environment: development
          displayName: Update feature flags
          name: UPDATE_FEATURE
          id: 3
          type: project
        name: Editor
        description: Users with the editor role have access to most features in Unleash
          but can not manage users and roles in the global scope. Editors will be
          added as project owners when creating projects and get superuser rights
          within the context of these projects. Users with the editor role will also
          get access to most permissions on the default project by default.
        id: 9
        type: root
      properties:
        id:
          description: The role id
          example: 9
          type: number
        type:
          description: "A role can either be a global `root` role, or a `project`\
            \ role or a `custom` project role or a custom global `root-custom` role"
          example: root
          type: string
        name:
          description: The name of the role
          example: Editor
          type: string
        description:
          description: A more detailed description of the role and what use it's intended
            for
          example: Users with the editor role have access to most features in Unleash
            but can not manage users and roles in the global scope. Editors will be
            added as project owners when creating projects and get superuser rights
            within the context of these projects. Users with the editor role will
            also get access to most permissions on the default project by default.
          type: string
        permissions:
          description: A list of permissions assigned to this role
          items:
            $ref: '#/components/schemas/adminPermissionSchema'
          type: array
      required:
      - id
      - name
      - permissions
      - type
      type: object
    roleWithVersionSchema:
      additionalProperties: true
      description: A single user role received after creation or update of a role
      example:
        roles:
          name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          project: default
          id: 9
          type: root
        version: 1
      properties:
        version:
          description: The version of this schema
          example: 1
          minimum: 1
          type: integer
        roles:
          $ref: '#/components/schemas/roleSchema'
      required:
      - roles
      - version
      type: object
    rolesWithVersionSchema:
      additionalProperties: true
      description: A collection of user roles
      example:
        roles:
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          project: default
          id: 9
          type: root
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          project: default
          id: 9
          type: root
        version: 1
      properties:
        version:
          description: The version of this schema
          example: 1
          minimum: 1
          type: integer
        roles:
          description: A list of roles
          items:
            $ref: '#/components/schemas/roleSchema'
          type: array
      required:
      - roles
      - version
      type: object
    samlSettingsSchema:
      description: Settings used to authenticate via SAML
      oneOf:
      - $ref: '#/components/schemas/samlSettingsSchema_oneOf'
      - $ref: '#/components/schemas/samlSettingsSchema_oneOf_1'
      type: object
    changeRequestConfigSchema:
      description: "A list of environment-specific [change request](https://docs.getunleash.io/reference/change-requests)\
        \ configurations."
      items:
        $ref: '#/components/schemas/changeRequestEnvironmentConfigSchema'
      type: array
    changeRequestEnvironmentConfigSchema:
      additionalProperties: true
      description: "The [change request](https://docs.getunleash.io/reference/change-requests)\
        \ configuration for a specific environment."
      example:
        environment: my-dev-environment
        changeRequestEnabled: true
        requiredApprovals: 2
        type: development
      properties:
        environment:
          description: The environment that this configuration applies to.
          example: my-dev-environment
          type: string
        type:
          description: "The [type of the environment](https://docs.getunleash.io/reference/environments#environment-types)\
            \ listed in `environment`."
          example: development
          type: string
        changeRequestEnabled:
          description: "`true` if this environment has change requests enabled, otherwise\
            \ `false`."
          example: true
          type: boolean
        requiredApprovals:
          description: The number of approvals that are required for a change request
            to be fully approved and ready to be applied in this environment.
          example: 2
          nullable: true
          type: number
      required:
      - changeRequestEnabled
      - environment
      - requiredApprovals
      - type
      type: object
    updateChangeRequestEnvironmentConfigSchema:
      description: Data used to update change request in an environment
      properties:
        changeRequestsEnabled:
          description: "`true` if change requests should be enabled, otherwise `false`."
          type: boolean
        requiredApprovals:
          description: The number of approvals required before a change request can
            be applied in this environment.
          example: 3
          minimum: 0
          type: integer
      required:
      - changeRequestsEnabled
      type: object
    updateEnvironmentSchema:
      description: "Data used to update an [environment](https://docs.getunleash.io/reference/environments)."
      properties:
        type:
          description: Updates the type of environment (i.e. development or production).
          type: string
        sortOrder:
          description: Changes the sort order of this environment.
          type: integer
      type: object
    updateProjectSchema:
      description: "Data used to update a [project](https://docs.getunleash.io/reference/projects)"
      properties:
        name:
          description: The new name of the project. The name must contain at least
            one non-whitespace character.
          example: my-renamed-project
          pattern: ^(?!\s*$).+
          type: string
        description:
          description: A new description for the project
          example: Anything related to the new UI
          type: string
        mode:
          description: A mode of the project affecting what actions are possible in
            this project
          enum:
          - open
          - protected
          - private
          example: open
          type: string
        defaultStickiness:
          description: A default stickiness for the project affecting the default
            stickiness value for variants and Gradual Rollout strategy
          example: userId
          type: string
      required:
      - name
      type: object
    updateProjectEnterpriseSettingsSchema:
      description: "Data used to update a [project](https://docs.getunleash.io/reference/projects)\
        \ settings"
      properties:
        mode:
          description: A mode of the project affecting what actions are possible in
            this project
          enum:
          - open
          - protected
          - private
          example: open
          type: string
        featureNaming:
          $ref: '#/components/schemas/createFeatureNamingPatternSchema'
      type: object
    userWithProjectRoleSchema:
      description: Data about a user including their project role
      example:
        addedAt: 2023-08-01T14:35:16Z
        roleId: 5
        imageUrl: https://openapi-generator.tech
        roles:
        - 5
        - 5
        name: Hunter Burgan
        id: 1
        isAPI: false
        email: hunter@hunter.com
      properties:
        isAPI:
          deprecated: true
          description: Whether this user is authenticated through Unleash tokens or
            logged in with a session
          example: false
          type: boolean
        name:
          description: The name of the user
          example: Hunter Burgan
          type: string
        email:
          description: The user's email address
          example: hunter@hunter.com
          nullable: true
          type: string
        id:
          description: The user's ID in the Unleash system
          example: 1
          minimum: 0
          type: integer
        imageUrl:
          description: A URL pointing to the user's image.
          format: uri
          nullable: true
          type: string
        addedAt:
          description: When this user was added to the project
          example: 2023-08-01T14:35:16Z
          format: date-time
          type: string
        roleId:
          description: The ID of the role this user has in the given project
          example: 5
          minimum: 0
          type: integer
        roles:
          description: A list of roles this user has in the given project
          items:
            example: 5
            minimum: 0
            type: integer
          type: array
      required:
      - id
      type: object
    groupWithProjectRoleSchema:
      additionalProperties: true
      description: Data about a group including their project role
      example:
        createdAt: 2023-06-30T11:41:00.123Z
        addedAt: 2023-08-01T14:35:16Z
        rootRole: 1
        createdBy: admin
        roleId: 5
        mappingsSSO:
        - SSOGroup1
        - SSOGroup2
        roles:
        - 5
        - 5
        name: DX team
        description: Current members of the DX squad
        id: 1
        users:
        - createdBy: admin
          joinedAt: 2023-06-30T11:41:00.123Z
          user:
            loginAttempts: 3
            inviteLink: http://localhost:4242/invite-link/some-secret
            accountType: User
            isAPI: true
            scimId: 01HTMEXAMPLESCIMID7SWWGHN6
            createdAt: 2023-06-30T11:41:00.123Z
            seenAt: 2023-06-30T11:42:00.345Z
            rootRole: 1
            deletedSessions: 1
            emailSent: false
            permissions:
            - permissions
            - permissions
            activeSessions: 2
            imageUrl: https://example.com/242x200.png
            name: User
            id: 123
            email: user@example.com
            username: hunter
        - createdBy: admin
          joinedAt: 2023-06-30T11:41:00.123Z
          user:
            loginAttempts: 3
            inviteLink: http://localhost:4242/invite-link/some-secret
            accountType: User
            isAPI: true
            scimId: 01HTMEXAMPLESCIMID7SWWGHN6
            createdAt: 2023-06-30T11:41:00.123Z
            seenAt: 2023-06-30T11:42:00.345Z
            rootRole: 1
            deletedSessions: 1
            emailSent: false
            permissions:
            - permissions
            - permissions
            activeSessions: 2
            imageUrl: https://example.com/242x200.png
            name: User
            id: 123
            email: user@example.com
            username: hunter
        scimId: 01HTMEXAMPLESCIMID7SWWGHN7
      properties:
        name:
          description: The name of the group
          example: DX team
          type: string
        id:
          description: The group's ID in the Unleash system
          example: 1
          minimum: 0
          type: integer
        addedAt:
          description: When this group was added to the project
          example: 2023-08-01T14:35:16Z
          format: date-time
          type: string
        roleId:
          description: The ID of the role this group has in the given project
          example: 5
          minimum: 0
          type: integer
        roles:
          description: A list of roles this user has in the given project
          items:
            example: 5
            minimum: 0
            type: integer
          type: array
        description:
          description: A custom description of the group
          example: Current members of the DX squad
          nullable: true
          type: string
        mappingsSSO:
          description: A list of SSO groups that should map to this Unleash group
          example:
          - SSOGroup1
          - SSOGroup2
          items:
            type: string
          type: array
        rootRole:
          description: "A role id that is used as the root role for all users in this\
            \ group. This can be either the id of the Viewer, Editor or Admin role."
          example: 1
          nullable: true
          type: number
        createdBy:
          description: A user who created this group
          example: admin
          nullable: true
          type: string
        createdAt:
          description: When was this group created
          example: 2023-06-30T11:41:00.123Z
          format: date-time
          nullable: true
          type: string
        users:
          description: A list of users belonging to this group
          items:
            $ref: '#/components/schemas/groupUserModelSchema'
          type: array
        scimId:
          description: "The SCIM ID of the group, only present if managed by SCIM"
          example: 01HTMEXAMPLESCIMID7SWWGHN7
          nullable: true
          type: string
      required:
      - id
      type: object
    serviceAccountSchema:
      additionalProperties: true
      description: "Represents a [service account](https://docs.getunleash.io/reference/service-accounts).\
        \ Service accounts are used to let systems interact with the Unleash API."
      example:
        loginAttempts: 0
        inviteLink: https://example.com/invite-link
        isAPI: false
        createdAt: 2021-01-01T00:00:00Z
        seenAt: 2000-01-23T04:56:07.000+00:00
        rootRole: 1
        emailSent: false
        imageUrl: https://example.com/my-service-account.png
        name: My Service Account
        tokens:
        - createdAt: 2023-04-19T08:15:14Z
          seenAt: 2023-04-19T08:15:14Z
          description: user:xyzrandomstring
          id: 1
          secret: user:xyzrandomstring
          userId: 1337
          expiresAt: 2023-04-19T08:15:14Z
        - createdAt: 2023-04-19T08:15:14Z
          seenAt: 2023-04-19T08:15:14Z
          description: user:xyzrandomstring
          id: 1
          secret: user:xyzrandomstring
          userId: 1337
          expiresAt: 2023-04-19T08:15:14Z
        id: 54321
        email: noemail@getunleash.io
        username: my-service-account
      properties:
        id:
          description: The service account id
          example: 54321
          type: number
        isAPI:
          deprecated: true
          description: "Deprecated: for internal use only, should not be exposed through\
            \ the API"
          example: false
          type: boolean
        name:
          description: The name of the service account
          example: My Service Account
          type: string
        email:
          deprecated: true
          description: "Deprecated: service accounts don't have emails associated\
            \ with them"
          example: noemail@getunleash.io
          type: string
        username:
          description: The service account username
          example: my-service-account
          type: string
        imageUrl:
          description: The service account image url
          example: https://example.com/my-service-account.png
          type: string
        inviteLink:
          deprecated: true
          description: "Deprecated: service accounts cannot be invited via an invitation\
            \ link"
          example: https://example.com/invite-link
          type: string
        loginAttempts:
          deprecated: true
          description: "Deprecated: service accounts cannot log in to Unleash"
          example: 0
          type: number
        emailSent:
          deprecated: true
          description: "Deprecated: internal use only"
          example: false
          type: boolean
        rootRole:
          description: The root role id associated with the service account
          example: 1
          type: integer
        seenAt:
          deprecated: true
          description: "Deprecated. This property is always `null`. To find out when\
            \ a service account was last seen, check its `tokens` list and refer to\
            \ each token's `lastSeen` property instead."
          format: date-time
          nullable: true
          type: string
          example: null
        createdAt:
          description: The service account creation date
          example: 2021-01-01T00:00:00Z
          format: date-time
          type: string
        tokens:
          description: The list of tokens associated with the service account
          items:
            $ref: '#/components/schemas/patSchema'
          type: array
      required:
      - id
      type: object
    serviceAccountsSchema:
      additionalProperties: true
      description: "Represents a list of service accounts, and includes a list of\
        \ root roles they reference"
      example:
        rootRoles:
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          project: default
          id: 9
          type: root
        - name: Editor
          description: Users with the editor role have access to most features in
            Unleash but can not manage users and roles in the global scope. Editors
            will be added as project owners when creating projects and get superuser
            rights within the context of these projects. Users with the editor role
            will also get access to most permissions on the default project by default.
          project: default
          id: 9
          type: root
        serviceAccounts:
        - loginAttempts: 0
          inviteLink: https://example.com/invite-link
          isAPI: false
          createdAt: 2021-01-01T00:00:00Z
          seenAt: 2000-01-23T04:56:07.000+00:00
          rootRole: 1
          emailSent: false
          imageUrl: https://example.com/my-service-account.png
          name: My Service Account
          tokens:
          - createdAt: 2023-04-19T08:15:14Z
            seenAt: 2023-04-19T08:15:14Z
            description: user:xyzrandomstring
            id: 1
            secret: user:xyzrandomstring
            userId: 1337
            expiresAt: 2023-04-19T08:15:14Z
          - createdAt: 2023-04-19T08:15:14Z
            seenAt: 2023-04-19T08:15:14Z
            description: user:xyzrandomstring
            id: 1
            secret: user:xyzrandomstring
            userId: 1337
            expiresAt: 2023-04-19T08:15:14Z
          id: 54321
          email: noemail@getunleash.io
          username: my-service-account
        - loginAttempts: 0
          inviteLink: https://example.com/invite-link
          isAPI: false
          createdAt: 2021-01-01T00:00:00Z
          seenAt: 2000-01-23T04:56:07.000+00:00
          rootRole: 1
          emailSent: false
          imageUrl: https://example.com/my-service-account.png
          name: My Service Account
          tokens:
          - createdAt: 2023-04-19T08:15:14Z
            seenAt: 2023-04-19T08:15:14Z
            description: user:xyzrandomstring
            id: 1
            secret: user:xyzrandomstring
            userId: 1337
            expiresAt: 2023-04-19T08:15:14Z
          - createdAt: 2023-04-19T08:15:14Z
            seenAt: 2023-04-19T08:15:14Z
            description: user:xyzrandomstring
            id: 1
            secret: user:xyzrandomstring
            userId: 1337
            expiresAt: 2023-04-19T08:15:14Z
          id: 54321
          email: noemail@getunleash.io
          username: my-service-account
      properties:
        serviceAccounts:
          description: A list of service accounts
          items:
            $ref: '#/components/schemas/serviceAccountSchema'
          type: array
        rootRoles:
          description: A list of root roles that are referenced from service account
            objects in the `serviceAccounts` list
          items:
            $ref: '#/components/schemas/roleSchema'
          type: array
      required:
      - serviceAccounts
      type: object
    createServiceAccountSchema:
      description: Describes the properties required to create a new service account
      properties:
        username:
          description: The username of the service account
          example: service-account-1
          type: string
        name:
          description: The name of the service account
          example: Service Account 1
          type: string
        rootRole:
          description: The id of the root role for the service account
          example: 1
          type: integer
      required:
      - name
      - rootRole
      - username
      type: object
    updateServiceAccountSchema:
      additionalProperties: true
      description: Describes the properties required to update a service account
      properties:
        name:
          description: The name of the service account
          example: Service Account 1
          type: string
        rootRole:
          description: The id of the root role for the service account
          example: 1
          type: integer
      type: object
    samlSettingsResponseSchema:
      description: Response for SAML settings
      example:
        defaultRootRoleId: 2
        groupJsonPath: groups
        signOutUrl: http://localhost:8080/auth/realms/master/protocol/saml
        enableGroupSyncing: false
        spCertificate: |
          MIIE/zCCBGgCAg4CMA0GCSqGSIb3DQEBBQUAMIGbMQswCQYDVQQGEwJKUDEOMAwG
          A1UECBMFVG9reW8xEDAOBgNVBAcTB0NodW8ta3UxETAPBgNVBAoTCEZyYW5rNERE
          MRgwFgYDVQQLEw9XZWJDZXJ0IFN1cHBvcnQxGDAWBgNVBAMTD0ZyYW5rNEREIFdl
          YiBDQTEjMCEGCSqGSIb3DQEJARYUc3VwcG9ydEBmcmFuazRkZC5jb20wHhcNMTIw
          ODIyMDcyNzIyWhcNMTcwODIxMDcyNzIyWjBKMQswCQYDVQQGEwJKUDEOMAwGA1UE
          CAwFVG9reW8xETAPBgNVBAoMCEZyYW5rNEREMRgwFgYDVQQDDA93d3cuZXhhbXBs
          ZS5jb20wggNHMIICOQYHKoZIzjgEATCCAiwCggEBAMbmu6uSdZWRxnO5PteARz5I
          nrdM7vJadzJcY9Spf0cAhUDWyINCrUDn8h8QjbMiAxd+E7v5N85TbfvrW+/g7lYa
          e7DB0uX02Rw29yoK+TE/znNTNq6HdPn/H4ll77uJqpkWgQwXgAQ3qDKRv96QaTfr
          fSXYRxG9NvKzUBs9S7Woby7K6Pgh7/EmgeiOHKSX49XD+ihvkFRSFdeL5qV5hzDf
          epfk8Ghl0cyK9jpM/yKlRuUUkP1pSMwUrCrptyRpqqXmam0UfFuFhMT2SJyNTyo2
          SfnyZb78lbYcVLJQLJA+O3l469eOH3Odv/Pq7bvOstBKg96Q7imz5t0honf63EMC
          IQCw7FeY0QQbxWYy+MI8/0m2kiRzIruA8RUPcEs4il1mwwKCAQB4W3QLepQRTWhR
          69Xv+fC5JLEDyngw9KEalKorlg6o4Z9hASMbFMwECjlXZCxKd/NFjUMbtPcrMCoa
          /KuaqRvHLs2bqe94X5VR4lWCv0SgOunKBj58jnVuN/OkkLu4cSZQ/jia/yPkdcMv
          w8ZjF7zjPXGVhh9XC0QU9ipVfrreGaBSN+0zODKY5TyQI84FsZFZNetOTIT0HT2S
          fIDRGYaL/0xMfQx070Z07cdTTuibzJHVr38qjKqEDiwAUyjXVdE+GJ15ZD4d56Ef
          0qgRpzDmuvUjOtv1t8Hr2O2HTABqRMtAKZsLEVPjwnpKpcStixfg0uIPGVIKbej4
          FzHHpO6bA4IBBgACggEBAJNRaaTFe253sOVm/JmUgsO1QB5GI5hOEWLpC8KHxgwn
          nf/GQUaJLrN8TT4hXgJM2CdvdAkY6et1HpT6BUoz1cYTgsE3ToIsbH3SzPJvU7jz
          cPOvY1jQv+xVBrU8Ydw2D8pydbAcw/L6JZnGpFBqeHa1iFAQc0B8ToXEgxnmGAdP
          IOAKAHX0S4m6CrP5fKwYbmzu8WuWO4bRqvX7QJofrs2RaGFESulw0VrMFffJ/guf
          HTvhDaMW7TSCKo1tBZK9SdEbWCQN2stnfnRSyZFQ+v02oyQtLg+3vSuCx4PS9DM9
          /Uh3r9JDDH3GveUMbqw8Dmy6WH9iV3oOJt8aVF8F4CMwDQYJKoZIhvcNAQEFBQAD
          gYEAbxDoJM8vKVfhltpfG3YXmBKnoGb2UpdKpcjmxMt1/yX8lWJaRBwUDeiDqjVC
          JGi9gXO2SDAtXl7GI1cXTs/l7QlmoTmnc6kDwqk3pl6jC72rQH3E/Fpg7hBkSWL9
          3V1dbLU5id63lVD8sUEULyfWFGk3L+Uka5oiSsxwZhdIb/Q=
        certificate: |
          MIIE/zCCBGgCAg4CMA0GCSqGSIb3DQEBBQUAMIGbMQswCQYDVQQGEwJKUDEOMAwG
          A1UECBMFVG9reW8xEDAOBgNVBAcTB0NodW8ta3UxETAPBgNVBAoTCEZyYW5rNERE
          MRgwFgYDVQQLEw9XZWJDZXJ0IFN1cHBvcnQxGDAWBgNVBAMTD0ZyYW5rNEREIFdl
          YiBDQTEjMCEGCSqGSIb3DQEJARYUc3VwcG9ydEBmcmFuazRkZC5jb20wHhcNMTIw
          ODIyMDcyNzIyWhcNMTcwODIxMDcyNzIyWjBKMQswCQYDVQQGEwJKUDEOMAwGA1UE
          CAwFVG9reW8xETAPBgNVBAoMCEZyYW5rNEREMRgwFgYDVQQDDA93d3cuZXhhbXBs
          ZS5jb20wggNHMIICOQYHKoZIzjgEATCCAiwCggEBAMbmu6uSdZWRxnO5PteARz5I
          nrdM7vJadzJcY9Spf0cAhUDWyINCrUDn8h8QjbMiAxd+E7v5N85TbfvrW+/g7lYa
          e7DB0uX02Rw29yoK+TE/znNTNq6HdPn/H4ll77uJqpkWgQwXgAQ3qDKRv96QaTfr
          fSXYRxG9NvKzUBs9S7Woby7K6Pgh7/EmgeiOHKSX49XD+ihvkFRSFdeL5qV5hzDf
          epfk8Ghl0cyK9jpM/yKlRuUUkP1pSMwUrCrptyRpqqXmam0UfFuFhMT2SJyNTyo2
          SfnyZb78lbYcVLJQLJA+O3l469eOH3Odv/Pq7bvOstBKg96Q7imz5t0honf63EMC
          IQCw7FeY0QQbxWYy+MI8/0m2kiRzIruA8RUPcEs4il1mwwKCAQB4W3QLepQRTWhR
          69Xv+fC5JLEDyngw9KEalKorlg6o4Z9hASMbFMwECjlXZCxKd/NFjUMbtPcrMCoa
          /KuaqRvHLs2bqe94X5VR4lWCv0SgOunKBj58jnVuN/OkkLu4cSZQ/jia/yPkdcMv
          w8ZjF7zjPXGVhh9XC0QU9ipVfrreGaBSN+0zODKY5TyQI84FsZFZNetOTIT0HT2S
          fIDRGYaL/0xMfQx070Z07cdTTuibzJHVr38qjKqEDiwAUyjXVdE+GJ15ZD4d56Ef
          0qgRpzDmuvUjOtv1t8Hr2O2HTABqRMtAKZsLEVPjwnpKpcStixfg0uIPGVIKbej4
          FzHHpO6bA4IBBgACggEBAJNRaaTFe253sOVm/JmUgsO1QB5GI5hOEWLpC8KHxgwn
          nf/GQUaJLrN8TT4hXgJM2CdvdAkY6et1HpT6BUoz1cYTgsE3ToIsbH3SzPJvU7jz
          cPOvY1jQv+xVBrU8Ydw2D8pydbAcw/L6JZnGpFBqeHa1iFAQc0B8ToXEgxnmGAdP
          IOAKAHX0S4m6CrP5fKwYbmzu8WuWO4bRqvX7QJofrs2RaGFESulw0VrMFffJ/guf
          HTvhDaMW7TSCKo1tBZK9SdEbWCQN2stnfnRSyZFQ+v02oyQtLg+3vSuCx4PS9DM9
          /Uh3r9JDDH3GveUMbqw8Dmy6WH9iV3oOJt8aVF8F4CMwDQYJKoZIhvcNAQEFBQAD
          gYEAbxDoJM8vKVfhltpfG3YXmBKnoGb2UpdKpcjmxMt1/yX8lWJaRBwUDeiDqjVC
          JGi9gXO2SDAtXl7GI1cXTs/l7QlmoTmnc6kDwqk3pl6jC72rQH3E/Fpg7hBkSWL9
          3V1dbLU5id63lVD8sUEULyfWFGk3L+Uka5oiSsxwZhdIb/Q=
        emailDomains: "getunleash.io,unleash-hosted.com"
        entityId: http://localhost:8080/auth/realms/master
        autoCreate: true
        defaultRootRole: Editor
        enabled: true
        signOnUrl: http://localhost:8080/auth/realms/master/protocol/saml
      properties:
        enabled:
          description: Whether to enable or disable SAML 2.0 for this instance
          example: true
          type: boolean
        entityId:
          description: The SAML 2.0 entity ID
          example: http://localhost:8080/auth/realms/master
          type: string
        signOnUrl:
          description: Which URL to use for Single Sign On
          example: http://localhost:8080/auth/realms/master/protocol/saml
          type: string
        certificate:
          description: The X509 certificate used to validate requests
          example: |
            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
          type: string
        signOutUrl:
          description: Which URL to use for Single Sign Out
          example: http://localhost:8080/auth/realms/master/protocol/saml
          type: string
        spCertificate:
          description: Signing certificate for sign out requests
          example: |
            MIIE/zCCBGgCAg4CMA0GCSqGSIb3DQEBBQUAMIGbMQswCQYDVQQGEwJKUDEOMAwG
            A1UECBMFVG9reW8xEDAOBgNVBAcTB0NodW8ta3UxETAPBgNVBAoTCEZyYW5rNERE
            MRgwFgYDVQQLEw9XZWJDZXJ0IFN1cHBvcnQxGDAWBgNVBAMTD0ZyYW5rNEREIFdl
            YiBDQTEjMCEGCSqGSIb3DQEJARYUc3VwcG9ydEBmcmFuazRkZC5jb20wHhcNMTIw
            ODIyMDcyNzIyWhcNMTcwODIxMDcyNzIyWjBKMQswCQYDVQQGEwJKUDEOMAwGA1UE
            CAwFVG9reW8xETAPBgNVBAoMCEZyYW5rNEREMRgwFgYDVQQDDA93d3cuZXhhbXBs
            ZS5jb20wggNHMIICOQYHKoZIzjgEATCCAiwCggEBAMbmu6uSdZWRxnO5PteARz5I
            nrdM7vJadzJcY9Spf0cAhUDWyINCrUDn8h8QjbMiAxd+E7v5N85TbfvrW+/g7lYa
            e7DB0uX02Rw29yoK+TE/znNTNq6HdPn/H4ll77uJqpkWgQwXgAQ3qDKRv96QaTfr
            fSXYRxG9NvKzUBs9S7Woby7K6Pgh7/EmgeiOHKSX49XD+ihvkFRSFdeL5qV5hzDf
            epfk8Ghl0cyK9jpM/yKlRuUUkP1pSMwUrCrptyRpqqXmam0UfFuFhMT2SJyNTyo2
            SfnyZb78lbYcVLJQLJA+O3l469eOH3Odv/Pq7bvOstBKg96Q7imz5t0honf63EMC
            IQCw7FeY0QQbxWYy+MI8/0m2kiRzIruA8RUPcEs4il1mwwKCAQB4W3QLepQRTWhR
            69Xv+fC5JLEDyngw9KEalKorlg6o4Z9hASMbFMwECjlXZCxKd/NFjUMbtPcrMCoa
            /KuaqRvHLs2bqe94X5VR4lWCv0SgOunKBj58jnVuN/OkkLu4cSZQ/jia/yPkdcMv
            w8ZjF7zjPXGVhh9XC0QU9ipVfrreGaBSN+0zODKY5TyQI84FsZFZNetOTIT0HT2S
            fIDRGYaL/0xMfQx070Z07cdTTuibzJHVr38qjKqEDiwAUyjXVdE+GJ15ZD4d56Ef
            0qgRpzDmuvUjOtv1t8Hr2O2HTABqRMtAKZsLEVPjwnpKpcStixfg0uIPGVIKbej4
            FzHHpO6bA4IBBgACggEBAJNRaaTFe253sOVm/JmUgsO1QB5GI5hOEWLpC8KHxgwn
            nf/GQUaJLrN8TT4hXgJM2CdvdAkY6et1HpT6BUoz1cYTgsE3ToIsbH3SzPJvU7jz
            cPOvY1jQv+xVBrU8Ydw2D8pydbAcw/L6JZnGpFBqeHa1iFAQc0B8ToXEgxnmGAdP
            IOAKAHX0S4m6CrP5fKwYbmzu8WuWO4bRqvX7QJofrs2RaGFESulw0VrMFffJ/guf
            HTvhDaMW7TSCKo1tBZK9SdEbWCQN2stnfnRSyZFQ+v02oyQtLg+3vSuCx4PS9DM9
            /Uh3r9JDDH3GveUMbqw8Dmy6WH9iV3oOJt8aVF8F4CMwDQYJKoZIhvcNAQEFBQAD
            gYEAbxDoJM8vKVfhltpfG3YXmBKnoGb2UpdKpcjmxMt1/yX8lWJaRBwUDeiDqjVC
            JGi9gXO2SDAtXl7GI1cXTs/l7QlmoTmnc6kDwqk3pl6jC72rQH3E/Fpg7hBkSWL9
            3V1dbLU5id63lVD8sUEULyfWFGk3L+Uka5oiSsxwZhdIb/Q=
          type: string
        autoCreate:
          description: Should Unleash create users based on the emails coming back
            in the authentication reply from the SAML server
          example: true
          type: boolean
        emailDomains:
          description: A comma separated list of email domains that Unleash will auto
            create user accounts for.
          example: "getunleash.io,unleash-hosted.com"
          type: string
        defaultRootRole:
          description: Assign this root role to auto created users
          enum:
          - Viewer
          - Editor
          - Admin
          example: Editor
          type: string
        defaultRootRoleId:
          description: Assign this root role to auto created users. Should be a role
            ID and takes precedence over `defaultRootRole`.
          example: 2
          type: number
        enableGroupSyncing:
          description: "Should we enable group syncing. Refer to the documentation\
            \ [Group syncing](https://docs.getunleash.io/how-to/how-to-set-up-group-sso-sync)"
          example: false
          type: boolean
        groupJsonPath:
          description: Specifies the path in the SAML token response from which to
            read the groups the user belongs to.
          example: groups
          type: string
      type: object
    oidcSettingsResponseSchema:
      description: Response for OpenID Connect settings
      example:
        defaultRootRoleId: 2
        acrValues: urn:okta:loa:2fa:any phr
        clientId: FB87266D-CDDB-4BCF-BB1F-8392FD0EDC1B
        enableGroupSyncing: false
        emailDomains: "getunleash.io,getunleash.ai"
        autoCreate: true
        secret: qjcVfeFjEfoYAF3AEsX2IMUWYuUzAbXO
        enabled: true
        groupJsonPath: groups
        addGroupsScope: false
        enableSingleSignOut: true
        defaultRootRole: Viewer
        discoverUrl: https://myoidchost.azure.com/.well-known/openid-configuration
        idTokenSigningAlgorithm: RS256
      properties:
        enabled:
          description: Whether to enable or disable OpenID Connect for this instance
          example: true
          type: boolean
        discoverUrl:
          description: "The [.well-known OpenID discover URL](https://swagger.io/docs/specification/authentication/openid-connect-discovery/)"
          example: https://myoidchost.azure.com/.well-known/openid-configuration
          format: uri
          type: string
        clientId:
          description: The OIDC client ID of this application.
          example: FB87266D-CDDB-4BCF-BB1F-8392FD0EDC1B
          type: string
        secret:
          description: Shared secret from OpenID server. Used to authenticate login
            requests
          example: qjcVfeFjEfoYAF3AEsX2IMUWYuUzAbXO
          type: string
        autoCreate:
          description: Auto create users based on email addresses from login tokens
          type: boolean
        enableSingleSignOut:
          description: Support Single sign out when user clicks logout in Unleash.
            If `true` user is signed out of all OpenID Connect sessions against the
            clientId they may have active
          type: boolean
        defaultRootRole:
          description: "[Default role](https://docs.getunleash.io/reference/rbac#standard-roles)\
            \ granted to users auto-created from email. Only relevant if autoCreate\
            \ is `true`"
          enum:
          - Viewer
          - Editor
          - Admin
          type: string
        defaultRootRoleId:
          description: Assign this root role to auto created users. Should be a role
            ID and takes precedence over `defaultRootRole`.
          example: 2
          type: number
        emailDomains:
          description: Comma separated list of email domains that are automatically
            approved for an account in the server. Only relevant if autoCreate is
            `true`
          example: "getunleash.io,getunleash.ai"
          type: string
        acrValues:
          description: "Authentication Context Class Reference, used to request extra\
            \ values in the acr claim returned from the server. If multiple values\
            \ are required, they should be space separated. \n Consult [the OIDC reference](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint)\
            \ for more information \n"
          example: urn:okta:loa:2fa:any phr
          type: string
        idTokenSigningAlgorithm:
          description: "The signing algorithm used to sign our token. Refer to the\
            \ [JWT signatures](https://jwt.io/introduction) documentation for more\
            \ information."
          enum:
          - RS256
          - RS384
          - RS512
          example: RS256
          type: string
        enableGroupSyncing:
          description: "Should we enable group syncing. Refer to the documentation\
            \ [Group syncing](https://docs.getunleash.io/how-to/how-to-set-up-group-sso-sync)"
          example: false
          type: boolean
        groupJsonPath:
          description: Specifies the path in the OIDC token response to read which
            groups the user belongs to from.
          example: groups
          type: string
        addGroupsScope:
          description: When enabled Unleash will also request the 'groups' scope as
            part of the login request.
          example: false
          type: boolean
      type: object
    edgeEndpointTrafficSchema:
      additionalProperties: true
      description: Represents traffic data for a single endpoint in Edge
      properties:
        requests200:
          description: Number of 20x requests
          minimum: 0
          type: number
        requests304:
          description: Number of 30x requests
          minimum: 0
          type: number
      type: object
    edgeInstanceDataSchema:
      description: Represents Edge instance observability data.
      properties:
        identifier:
          description: "The ID of the Edge process, typically a ULID. Newly generated\
            \ for each restart of the instance."
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        appName:
          description: "The name of the application, configured by the user, typically\
            \ persistent across restarts of Edge."
          example: unleash-edge-us-east-1
          type: string
        region:
          description: Which region the Edge instance is running in. Set to AWS_REGION
            by default (if present).
          example: us-east-1
          nullable: true
          type: string
        edgeVersion:
          description: Which version (semver) of Edge is the Edge instance running.
          example: 19.6.3
          type: string
        processMetrics:
          $ref: '#/components/schemas/edgeProcessMetricsSchema'
        started:
          description: RFC3339 timestamp for when the Edge instance was started.
          format: date-time
          type: string
        traffic:
          $ref: '#/components/schemas/edgeInstanceTrafficSchema'
        latencyUpstream:
          $ref: '#/components/schemas/edgeUpstreamLatencySchema'
        connectedStreamingClients:
          description: How many streaming clients are connected to the Edge instance.
          minimum: 0
          type: number
        connectedEdges:
          description: A list of Edge instances connected to the Edge instance.
          items:
            $ref: '#/components/schemas/edgeInstanceDataSchema'
          type: array
        requestsSinceLastReport:
          $ref: '#/components/schemas/edgeRequestStatsSchema'
      required:
      - appName
      - connectedEdges
      - connectedStreamingClients
      - edgeVersion
      - identifier
      - latencyUpstream
      - started
      - traffic
      type: object
    edgeInstanceTrafficSchema:
      additionalProperties: true
      description: "Represents requests to the Edge instance (/api/client/features,\
        \ /api/frontend, etc.)"
      properties:
        get:
          additionalProperties:
            $ref: '#/components/schemas/edgeLatencyMetricsSchema'
          description: A map containing GET requests.
          type: object
        post:
          additionalProperties:
            $ref: '#/components/schemas/edgeLatencyMetricsSchema'
          description: A map containing POST requests.
          type: object
        accessDenied:
          additionalProperties:
            $ref: '#/components/schemas/edgeLatencyMetricsSchema'
          description: A map containing requests that were denied.
          type: object
        cachedResponses:
          additionalProperties:
            $ref: '#/components/schemas/edgeLatencyMetricsSchema'
          description: A map containing requests that had cached responses.
          type: object
      required:
      - accessDenied
      - cachedResponses
      - get
      - post
      type: object
    edgeLatencyMetricsSchema:
      additionalProperties: true
      description: Representing latency for an Edge operation.
      properties:
        avg:
          description: Average time per request in milliseconds.
          minimum: 0
          type: number
        count:
          description: Total number of requests made.
          minimum: 0
          type: number
        p99:
          description: 99% of requests finished within this amount of milliseconds.
          example: 34.5
          minimum: 0
          type: number
      required:
      - avg
      - count
      - p99
      type: object
    edgeProcessMetricsSchema:
      description: Represents Edge instance resource usage data.
      properties:
        cpuUsage:
          description: "CPU usage, in seconds, since start of process."
          example: 54.54
          minimum: 0
          type: number
        memoryUsage:
          description: Current process_resident_memory (in bytes) usage.
          example: 34000432
          minimum: 0
          type: number
      required:
      - cpuUsage
      - memoryUsage
      type: object
    edgeRequestStatsSchema:
      description: Represents Edge traffic data.
      properties:
        /api/client/features:
          $ref: '#/components/schemas/edgeEndpointTrafficSchema'
        /api/frontend:
          $ref: '#/components/schemas/edgeEndpointTrafficSchema'
        /api/proxy:
          $ref: '#/components/schemas/edgeEndpointTrafficSchema'
        /api/client/metrics:
          $ref: '#/components/schemas/edgeEndpointTrafficSchema'
        /api/client/metrics/bulk:
          $ref: '#/components/schemas/edgeEndpointTrafficSchema'
        /api/client/metrics/edge:
          $ref: '#/components/schemas/edgeEndpointTrafficSchema'
      type: object
    edgeUpstreamLatencySchema:
      additionalProperties: true
      description: "Latencies for upstream actions from Edge (downloading/syncing\
        \ new features, uploading metrics, uploading instance data)"
      properties:
        features:
          $ref: '#/components/schemas/edgeLatencyMetricsSchema'
        metrics:
          $ref: '#/components/schemas/edgeLatencyMetricsSchema'
        edge:
          $ref: '#/components/schemas/edgeLatencyMetricsSchema'
      required:
      - edge
      - features
      - metrics
      type: object
    getSamlSettings_400_response:
      example:
        name: ValidationError
        id: 9c40958a-daac-400e-98fb-3bb438567008
        message: "The request payload you provided doesn't conform to the schema.\
          \ The .parameters property should be object. You sent []."
      properties:
        id:
          description: The ID of the error instance
          example: 9c40958a-daac-400e-98fb-3bb438567008
          type: string
        name:
          description: The name of the error kind
          example: ValidationError
          type: string
        message:
          description: A description of what went wrong.
          example: "The request payload you provided doesn't conform to the schema.\
            \ The .parameters property should be object. You sent []."
          type: string
      type: object
    getSamlSettings_401_response:
      example:
        name: AuthenticationRequired
        id: 9c40958a-daac-400e-98fb-3bb438567008
        message: "You must log in to use Unleash. Your request had no authorization\
          \ header, so we could not authorize you. Try logging in at /auth/simple/login."
      properties:
        id:
          description: The ID of the error instance
          example: 9c40958a-daac-400e-98fb-3bb438567008
          type: string
        name:
          description: The name of the error kind
          example: AuthenticationRequired
          type: string
        message:
          description: A description of what went wrong.
          example: "You must log in to use Unleash. Your request had no authorization\
            \ header, so we could not authorize you. Try logging in at /auth/simple/login."
          type: string
      type: object
    getSamlSettings_403_response:
      example:
        name: NoAccessError
        id: 9c40958a-daac-400e-98fb-3bb438567008
        message: You need the "UPDATE_ADDON" permission to perform this action in
          the "development" environment.
      properties:
        id:
          description: The ID of the error instance
          example: 9c40958a-daac-400e-98fb-3bb438567008
          type: string
        name:
          description: The name of the error kind
          example: NoAccessError
          type: string
        message:
          description: A description of what went wrong.
          example: You need the "UPDATE_ADDON" permission to perform this action in
            the "development" environment.
          type: string
      type: object
    setSamlSettings_415_response:
      example:
        name: ContentTypeerror
        id: 9c40958a-daac-400e-98fb-3bb438567008
        message: We do not accept the content-type you provided (application/xml).
          Try using one of the content-types we do accept instead (application/json)
          and make sure the body is in the corresponding format.
      properties:
        id:
          description: The ID of the error instance
          example: 9c40958a-daac-400e-98fb-3bb438567008
          type: string
        name:
          description: The name of the error kind
          example: ContentTypeerror
          type: string
        message:
          description: A description of what went wrong.
          example: We do not accept the content-type you provided (application/xml).
            Try using one of the content-types we do accept instead (application/json)
            and make sure the body is in the corresponding format.
          type: string
      type: object
    createRole_409_response:
      example:
        name: NameExistsError
        id: 9c40958a-daac-400e-98fb-3bb438567008
        message: There is already a feature called "my-awesome-feature".
      properties:
        id:
          description: The ID of the error instance
          example: 9c40958a-daac-400e-98fb-3bb438567008
          type: string
        name:
          description: The name of the error kind
          example: NameExistsError
          type: string
        message:
          description: A description of what went wrong.
          example: There is already a feature called "my-awesome-feature".
          type: string
      type: object
    getRoleById_404_response:
      example:
        name: NotFoundError
        id: 9c40958a-daac-400e-98fb-3bb438567008
        message: Could not find the addon with ID "12345".
      properties:
        id:
          description: The ID of the error instance
          example: 9c40958a-daac-400e-98fb-3bb438567008
          type: string
        name:
          description: The name of the error kind
          example: NotFoundError
          type: string
        message:
          description: A description of what went wrong.
          example: Could not find the addon with ID "12345".
          type: string
      type: object
    createApiTokenSchema_oneOf:
      properties:
        expiresAt:
          description: The time when this token should expire.
          example: 2023-07-04T11:26:24+02:00
          format: date-time
          type: string
        type:
          description: An admin token. Must be the string "admin" (not case sensitive).
          example: admin
          pattern: "^[Aa][Dd][Mm][Ii][Nn]$"
          type: string
        tokenName:
          description: The name of the token.
          example: token-64522
          type: string
      required:
      - tokenName
      - type
      type: object
    createApiTokenSchema_oneOf_1:
      properties:
        expiresAt:
          description: The time when this token should expire.
          example: 2023-07-04T11:26:24+02:00
          format: date-time
          type: string
        type:
          description: An admin token. Must be the string "admin" (not case sensitive).
          example: admin
          pattern: "^[Aa][Dd][Mm][Ii][Nn]$"
          type: string
        username:
          deprecated: true
          description: The name of the token. This property was deprecated in v5.
            Use `tokenName` instead.
          example: token-64523
          type: string
      required:
      - type
      - username
      type: object
    createApiTokenSchema_oneOf_2:
      properties:
        expiresAt:
          description: The time when this token should expire.
          example: 2023-07-04T11:26:24+02:00
          format: date-time
          type: string
        type:
          description: A client or frontend token. Must be one of the strings "client"
            or "frontend" (not case sensitive).
          example: frontend
          pattern: "^([Cc][Ll][Ii][Ee][Nn][Tt]|[Ff][Rr][Oo][Nn][Tt][Ee][Nn][Dd])$"
          type: string
        environment:
          description: The environment that the token should be valid for. Defaults
            to "default"
          example: development
          type: string
        project:
          description: "The project that the token should be valid for. Defaults to\
            \ \"*\" meaning every project. This property is mutually incompatible\
            \ with the `projects` property. If you specify one, you cannot specify\
            \ the other."
          example: project-851
          type: string
        projects:
          description: "A list of projects that the token should be valid for. This\
            \ property is mutually incompatible with the `project` property. If you\
            \ specify one, you cannot specify the other."
          example:
          - project-851
          - project-852
          items:
            type: string
          type: array
        tokenName:
          description: The name of the token.
          example: token-64522
          type: string
      required:
      - tokenName
      - type
      type: object
    createApiTokenSchema_oneOf_3:
      properties:
        expiresAt:
          description: The time when this token should expire.
          example: 2023-07-04T11:26:24+02:00
          format: date-time
          type: string
        type:
          description: A client or frontend token. Must be one of the strings "client"
            or "frontend" (not case sensitive).
          example: frontend
          pattern: "^([Cc][Ll][Ii][Ee][Nn][Tt]|[Ff][Rr][Oo][Nn][Tt][Ee][Nn][Dd])$"
          type: string
        environment:
          description: The environment that the token should be valid for. Defaults
            to "default"
          example: development
          type: string
        project:
          description: "The project that the token should be valid for. Defaults to\
            \ \"*\" meaning every project. This property is mutually incompatible\
            \ with the `projects` property. If you specify one, you cannot specify\
            \ the other."
          example: project-851
          type: string
        projects:
          description: "A list of projects that the token should be valid for. This\
            \ property is mutually incompatible with the `project` property. If you\
            \ specify one, you cannot specify the other."
          example:
          - project-851
          - project-852
          items:
            type: string
          type: array
        username:
          deprecated: true
          description: The name of the token. This property was deprecated in v5.
            Use `tokenName` instead.
          example: token-64523
          type: string
      required:
      - type
      - username
      type: object
    createStrategyVariantSchema_payload:
      description: Extra data configured for this variant
      example:
        type: json
        value: "{\"color\": \"red\"}"
      properties:
        type:
          description: "The type of the value. Commonly used types are string, number,\
            \ json and csv."
          enum:
          - json
          - csv
          - string
          - number
          type: string
        value:
          description: The actual value of payload
          type: string
      required:
      - type
      - value
      type: object
    createUserResponseSchema_rootRole:
      description: "Which [root role](https://docs.getunleash.io/reference/rbac#predefined-roles)\
        \ this user is assigned. Usually a numeric role ID, but can be a string when\
        \ returning newly created user with an explicit string role."
      oneOf:
      - example: 1
        minimum: 0
        type: integer
      - enum:
        - Admin
        - Editor
        - Viewer
        - Owner
        - Member
        example: Admin
        type: string
    createUserSchema_rootRole:
      description: The role to assign to the user. Can be either the role's ID or
        its unique name.
      oneOf:
      - example: 1
        minimum: 0
        type: integer
      - enum:
        - Admin
        - Editor
        - Viewer
        - Owner
        - Member
        example: Admin
        type: string
    projectOverviewSchema_onboardingStatus_oneOf:
      additionalProperties: true
      example:
        status: onboarding-started
      properties:
        status:
          enum:
          - onboarding-started
          - onboarded
          example: onboarding-started
          type: string
      required:
      - status
      type: object
    projectOverviewSchema_onboardingStatus_oneOf_1:
      additionalProperties: true
      properties:
        status:
          enum:
          - first-flag-created
          example: first-flag-created
          type: string
        feature:
          description: The name of the feature flag
          example: my-feature-flag
          type: string
      required:
      - feature
      - status
      type: object
    projectOverviewSchema_onboardingStatus:
      description: The current onboarding status of the project.
      oneOf:
      - $ref: '#/components/schemas/projectOverviewSchema_onboardingStatus_oneOf'
      - $ref: '#/components/schemas/projectOverviewSchema_onboardingStatus_oneOf_1'
      type: object
    adminPermissionsSchema_permissions_environments_inner:
      additionalProperties: true
      example:
        permissions:
        - environment: development
          displayName: Update feature flags
          name: UPDATE_FEATURE
          id: 3
          type: project
        - environment: development
          displayName: Update feature flags
          name: UPDATE_FEATURE
          id: 3
          type: project
        name: development
      properties:
        name:
          description: The name of the environment
          example: development
          type: string
        permissions:
          description: Permissions available for this environment
          items:
            $ref: '#/components/schemas/adminPermissionSchema'
          type: array
      required:
      - name
      - permissions
      type: object
    adminPermissionsSchema_permissions:
      additionalProperties: true
      description: Returns permissions available at all three levels (root|project|environment)
      example:
        environments:
        - permissions:
          - environment: development
            displayName: Update feature flags
            name: UPDATE_FEATURE
            id: 3
            type: project
          - environment: development
            displayName: Update feature flags
            name: UPDATE_FEATURE
            id: 3
            type: project
          name: development
        - permissions:
          - environment: development
            displayName: Update feature flags
            name: UPDATE_FEATURE
            id: 3
            type: project
          - environment: development
            displayName: Update feature flags
            name: UPDATE_FEATURE
            id: 3
            type: project
          name: development
        root:
        - environment: development
          displayName: Update feature flags
          name: UPDATE_FEATURE
          id: 3
          type: project
        - environment: development
          displayName: Update feature flags
          name: UPDATE_FEATURE
          id: 3
          type: project
        project:
        - environment: development
          displayName: Update feature flags
          name: UPDATE_FEATURE
          id: 3
          type: project
        - environment: development
          displayName: Update feature flags
          name: UPDATE_FEATURE
          id: 3
          type: project
      properties:
        root:
          description: "Permissions available at the root level, i.e. not connected\
            \ to any specific project or environment"
          items:
            $ref: '#/components/schemas/adminPermissionSchema'
          type: array
        project:
          description: Permissions available at the project level
          items:
            $ref: '#/components/schemas/adminPermissionSchema'
          type: array
        environments:
          description: A list of environments with available permissions per environment
          items:
            $ref: '#/components/schemas/adminPermissionsSchema_permissions_environments_inner'
          type: array
      required:
      - environments
      - project
      type: object
    createProjectSchema_changeRequestEnvironments_inner:
      properties:
        name:
          description: The name of the environment to configure change requests for.
          example: production
          type: string
        requiredApprovals:
          default: 1
          description: "The number of approvals required for a change request to be\
            \ fully approved and ready to applied in this environment. If no value\
            \ is provided, it will be set to the default number, which is 1. Values\
            \ will be clamped to between 1 and 10 inclusive."
          example: 3
          type: integer
      required:
      - name
      type: object
    createRoleWithPermissionsSchema_anyOf_permissions_inner:
      properties:
        name:
          description: The name of the permission
          example: CREATE_PROJECT
          type: string
        environment:
          description: The environments of the permission if the permission is environment
            specific
          example: development
          nullable: true
          type: string
      required:
      - name
      type: object
    createRoleWithPermissionsSchema_anyOf:
      properties:
        name:
          description: The name of the custom role
          example: external-contributors
          type: string
        description:
          description: A more detailed description of the custom role and what use
            it's intended for
          example: Users with external-contributors role have limited access to most
            features in Unleash
          type: string
        type:
          description: "[Custom root roles](https://docs.getunleash.io/reference/rbac#custom-root-roles)\
            \ (type=root-custom) are root roles with a custom set of permissions.\
            \ [Custom project roles](https://docs.getunleash.io/reference/rbac#custom-project-roles)\
            \ (type=custom) contain a specific set of permissions for project resources."
          enum:
          - root-custom
          - custom
          example: root-custom
          type: string
        permissions:
          description: A list of permissions assigned to this role
          items:
            $ref: '#/components/schemas/createRoleWithPermissionsSchema_anyOf_permissions_inner'
          type: array
      required:
      - name
      type: object
    createRoleWithPermissionsSchema_anyOf_1_permissions_inner:
      properties:
        id:
          description: The id of the permission
          example: 2
          type: number
        name:
          description: The name of the permission
          example: CREATE_PROJECT
          type: string
        environment:
          description: The environments of the permission if the permission is environment
            specific
          example: development
          nullable: true
          type: string
      required:
      - id
      type: object
    createRoleWithPermissionsSchema_anyOf_1:
      properties:
        name:
          description: The name of the custom role
          example: external-contributors
          type: string
        description:
          description: A more detailed description of the custom role and what use
            it's intended for
          example: Users with external-contributors role have limited access to most
            features in Unleash
          type: string
        type:
          description: "[Custom project roles](https://docs.getunleash.io/reference/rbac#custom-project-roles)\
            \ contain a specific set of permissions for project resources."
          enum:
          - custom
          example: custom
          type: string
        permissions:
          description: A list of permissions assigned to this role
          items:
            $ref: '#/components/schemas/createRoleWithPermissionsSchema_anyOf_1_permissions_inner'
          type: array
      required:
      - name
      type: object
    oidcSettingsSchema_oneOf:
      properties:
        enabled:
          description: Whether to enable or disable OpenID Connect for this instance
          example: true
          type: boolean
        discoverUrl:
          description: "The [.well-known OpenID discover URL](https://swagger.io/docs/specification/authentication/openid-connect-discovery/)"
          example: https://myoidchost.azure.com/.well-known/openid-configuration
          format: uri
          type: string
        clientId:
          description: The OIDC client ID of this application.
          example: FB87266D-CDDB-4BCF-BB1F-8392FD0EDC1B
          type: string
        secret:
          description: Shared secret from OpenID server. Used to authenticate login
            requests
          example: qjcVfeFjEfoYAF3AEsX2IMUWYuUzAbXO
          type: string
        autoCreate:
          description: Auto create users based on email addresses from login tokens
          type: boolean
        enableSingleSignOut:
          description: Support Single sign out when user clicks logout in Unleash.
            If `true` user is signed out of all OpenID Connect sessions against the
            clientId they may have active
          type: boolean
        defaultRootRole:
          description: "[Default role](https://docs.getunleash.io/reference/rbac#standard-roles)\
            \ granted to users auto-created from email. Only relevant if autoCreate\
            \ is `true`"
          enum:
          - Viewer
          - Editor
          - Admin
          type: string
        defaultRootRoleId:
          description: Assign this root role to auto created users. Should be a role
            ID and takes precedence over `defaultRootRole`.
          example: 2
          type: number
        emailDomains:
          description: Comma separated list of email domains that are automatically
            approved for an account in the server. Only relevant if autoCreate is
            `true`
          example: "getunleash.io,getunleash.ai"
          type: string
        acrValues:
          description: "Authentication Context Class Reference, used to request extra\
            \ values in the acr claim returned from the server. If multiple values\
            \ are required, they should be space separated. \n Consult [the OIDC reference](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint)\
            \ for more information \n"
          example: urn:okta:loa:2fa:any phr
          type: string
        idTokenSigningAlgorithm:
          description: "The signing algorithm used to sign our token. Refer to the\
            \ [JWT signatures](https://jwt.io/introduction) documentation for more\
            \ information."
          enum:
          - RS256
          - RS384
          - RS512
          example: RS256
          type: string
        enableGroupSyncing:
          description: "Should we enable group syncing. Refer to the documentation\
            \ [Group syncing](https://docs.getunleash.io/how-to/how-to-set-up-group-sso-sync)"
          example: false
          type: boolean
        groupJsonPath:
          description: Specifies the path in the OIDC token response to read which
            groups the user belongs to from.
          example: groups
          type: string
        addGroupsScope:
          description: When enabled Unleash will also request the 'groups' scope as
            part of the login request.
          example: false
          type: boolean
      required:
      - clientId
      - enabled
      - secret
      type: object
    oidcSettingsSchema_oneOf_1:
      properties:
        enabled:
          description: Whether to enable or disable OpenID Connect for this instance
          example: false
          type: boolean
        discoverUrl:
          description: "The [.well-known OpenID discover URL](https://swagger.io/docs/specification/authentication/openid-connect-discovery/)"
          example: https://myoidchost.azure.com/.well-known/openid-configuration
          format: uri
          type: string
        clientId:
          description: The OIDC client ID of this application.
          example: FB87266D-CDDB-4BCF-BB1F-8392FD0EDC1B
          type: string
        secret:
          description: Shared secret from OpenID server. Used to authenticate login
            requests
          example: qjcVfeFjEfoYAF3AEsX2IMUWYuUzAbXO
          type: string
        autoCreate:
          description: Auto create users based on email addresses from login tokens
          type: boolean
        enableSingleSignOut:
          description: Support Single sign out when user clicks logout in Unleash.
            If `true` user is signed out of all OpenID Connect sessions against the
            clientId they may have active
          type: boolean
        defaultRootRole:
          description: "[Default role](https://docs.getunleash.io/reference/rbac#standard-roles)\
            \ granted to users auto-created from email. Only relevant if autoCreate\
            \ is `true`"
          enum:
          - Viewer
          - Editor
          - Admin
          type: string
        defaultRootRoleId:
          description: Assign this root role to auto created users. Should be a role
            ID and takes precedence over `defaultRootRole`.
          example: 2
          type: number
        emailDomains:
          description: Comma separated list of email domains that are automatically
            approved for an account in the server. Only relevant if autoCreate is
            `true`
          example: "getunleash.io,getunleash.ai"
          type: string
        acrValues:
          description: "Authentication Context Class Reference, used to request extra\
            \ values in the acr claim returned from the server. If multiple values\
            \ are required, they should be space separated. \n Consult [the OIDC reference](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint)\
            \ for more information \n"
          example: urn:okta:loa:2fa:any phr
          type: string
        idTokenSigningAlgorithm:
          description: "The signing algorithm used to sign our token. Refer to the\
            \ [JWT signatures](https://jwt.io/introduction) documentation for more\
            \ information."
          enum:
          - RS256
          - RS384
          - RS512
          example: RS256
          type: string
        enableGroupSyncing:
          description: "Should we enable group syncing. Refer to the documentation\
            \ [Group syncing](https://docs.getunleash.io/how-to/how-to-set-up-group-sso-sync)"
          example: false
          type: boolean
        groupJsonPath:
          description: Specifies the path in the OIDC token response to read which
            groups the user belongs to from.
          example: groups
          type: string
        addGroupsScope:
          description: When enabled Unleash will also request the 'groups' scope as
            part of the login request.
          example: false
          type: boolean
      type: object
    projectAccessConfigurationSchema_roles_inner:
      properties:
        id:
          description: The id of the role.
          example: 1
          minimum: 1
          type: integer
        groups:
          description: A list of group ids that will be assigned this role
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
          type: array
        users:
          description: A list of user ids that will be assigned this role
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
          type: array
      type: object
    projectCreatedSchema_changeRequestEnvironments_inner:
      example:
        requiredApprovals: 3
        name: production
      properties:
        name:
          description: The name of the environment this change request configuration
            applies to.
          example: production
          type: string
        requiredApprovals:
          default: 1
          description: "The number of approvals required for a change request to be\
            \ fully approved and ready to applied in this environment. If no value\
            \ is provided, it will be set to the default number, which is 1. The value\
            \ must be greater than or equal to 1."
          example: 3
          minimum: 1
          type: integer
      required:
      - name
      - requiredApprovals
      type: object
    samlSettingsSchema_oneOf:
      properties:
        enabled:
          description: Whether to enable or disable SAML 2.0 for this instance
          example: true
          type: boolean
        entityId:
          description: The SAML 2.0 entity ID
          example: http://localhost:8080/auth/realms/master
          type: string
        signOnUrl:
          description: Which URL to use for Single Sign On
          example: http://localhost:8080/auth/realms/master/protocol/saml
          type: string
        certificate:
          description: The X509 certificate used to validate requests
          example: |
            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
          type: string
        signOutUrl:
          description: Which URL to use for Single Sign Out
          example: http://localhost:8080/auth/realms/master/protocol/saml
          type: string
        spCertificate:
          description: Signing certificate for sign out requests
          example: |
            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
          type: string
        autoCreate:
          description: Should Unleash create users based on the emails coming back
            in the authentication reply from the SAML server
          example: true
          type: boolean
        emailDomains:
          description: A comma separated list of email domains that Unleash will auto
            create user accounts for.
          example: "getunleash.io,unleash-hosted.com"
          type: string
        defaultRootRole:
          description: Assign this root role to auto created users
          enum:
          - Viewer
          - Editor
          - Admin
          example: Editor
          type: string
        defaultRootRoleId:
          description: Assign this root role to auto created users. Should be a role
            ID and takes precedence over `defaultRootRole`.
          example: 2
          type: number
        enableGroupSyncing:
          description: "Should we enable group syncing. Refer to the documentation\
            \ [Group syncing](https://docs.getunleash.io/how-to/how-to-set-up-group-sso-sync)"
          example: false
          type: boolean
        groupJsonPath:
          description: Specifies the path in the SAML token response from which to
            read the groups the user belongs to.
          example: groups
          type: string
      required:
      - certificate
      - entityId
      - signOnUrl
      type: object
    samlSettingsSchema_oneOf_1:
      properties:
        enabled:
          description: Whether to enable or disable SAML 2.0 for this instance
          example: false
          type: boolean
        entityId:
          description: The SAML 2.0 entity ID
          example: http://localhost:8080/auth/realms/master
          type: string
        signOnUrl:
          description: Which URL to use for Single Sign On
          example: http://localhost:8080/auth/realms/master/protocol/saml
          type: string
        certificate:
          description: The X509 certificate used to validate requests
          example: |
            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
          type: string
        signOutUrl:
          description: Which URL to use for Single Sign Out
          example: http://localhost:8080/auth/realms/master/protocol/saml
          type: string
        spCertificate:
          description: Signing certificate for sign out requests
          example: |
            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
          type: string
        autoCreate:
          description: Should Unleash create users based on the emails coming back
            in the authentication reply from the SAML server
          example: true
          type: boolean
        emailDomains:
          description: A comma separated list of email domains that Unleash will auto
            create user accounts for.
          example: "getunleash.io,unleash-hosted.com"
          type: string
        defaultRootRole:
          description: Assign this root role to auto created users
          enum:
          - Viewer
          - Editor
          - Admin
          example: Editor
          type: string
        defaultRootRoleId:
          description: Assign this root role to auto created users. Should be a role
            ID and takes precedence over `defaultRootRole`.
          example: 2
          type: number
        enableGroupSyncing:
          description: "Should we enable group syncing. Refer to the documentation\
            \ [Group syncing](https://docs.getunleash.io/how-to/how-to-set-up-group-sso-sync)"
          example: false
          type: boolean
        groupJsonPath:
          description: Specifies the path in the SAML token response from which to
            read the groups the user belongs to.
          example: groups
          type: string
      type: object
  securitySchemes:
    apiKey:
      description: API key needed to access this API
      in: header
      name: Authorization
      type: apiKey
    bearerToken:
      description: "API key needed to access this API, in Bearer token format"
      scheme: bearer
      type: http
