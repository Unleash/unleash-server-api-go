/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 6.7.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// checks if the EdgeLatencyMetricsSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EdgeLatencyMetricsSchema{}

// EdgeLatencyMetricsSchema Representing latency for an Edge operation.
type EdgeLatencyMetricsSchema struct {
	// Average time per request in milliseconds.
	Avg float32 `json:"avg"`
	// Total number of requests made.
	Count float32 `json:"count"`
	// 99% of requests finished within this amount of milliseconds.
	P99                  float32 `json:"p99"`
	AdditionalProperties map[string]interface{}
}

type _EdgeLatencyMetricsSchema EdgeLatencyMetricsSchema

// NewEdgeLatencyMetricsSchema instantiates a new EdgeLatencyMetricsSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEdgeLatencyMetricsSchema(avg float32, count float32, p99 float32) *EdgeLatencyMetricsSchema {
	this := EdgeLatencyMetricsSchema{}
	this.Avg = avg
	this.Count = count
	this.P99 = p99
	return &this
}

// NewEdgeLatencyMetricsSchemaWithDefaults instantiates a new EdgeLatencyMetricsSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEdgeLatencyMetricsSchemaWithDefaults() *EdgeLatencyMetricsSchema {
	this := EdgeLatencyMetricsSchema{}
	return &this
}

// GetAvg returns the Avg field value
func (o *EdgeLatencyMetricsSchema) GetAvg() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Avg
}

// GetAvgOk returns a tuple with the Avg field value
// and a boolean to check if the value has been set.
func (o *EdgeLatencyMetricsSchema) GetAvgOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Avg, true
}

// SetAvg sets field value
func (o *EdgeLatencyMetricsSchema) SetAvg(v float32) {
	o.Avg = v
}

// GetCount returns the Count field value
func (o *EdgeLatencyMetricsSchema) GetCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *EdgeLatencyMetricsSchema) GetCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *EdgeLatencyMetricsSchema) SetCount(v float32) {
	o.Count = v
}

// GetP99 returns the P99 field value
func (o *EdgeLatencyMetricsSchema) GetP99() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.P99
}

// GetP99Ok returns a tuple with the P99 field value
// and a boolean to check if the value has been set.
func (o *EdgeLatencyMetricsSchema) GetP99Ok() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.P99, true
}

// SetP99 sets field value
func (o *EdgeLatencyMetricsSchema) SetP99(v float32) {
	o.P99 = v
}

func (o EdgeLatencyMetricsSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EdgeLatencyMetricsSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["avg"] = o.Avg
	toSerialize["count"] = o.Count
	toSerialize["p99"] = o.P99

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EdgeLatencyMetricsSchema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"avg",
		"count",
		"p99",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEdgeLatencyMetricsSchema := _EdgeLatencyMetricsSchema{}

	err = json.Unmarshal(data, &varEdgeLatencyMetricsSchema)

	if err != nil {
		return err
	}

	*o = EdgeLatencyMetricsSchema(varEdgeLatencyMetricsSchema)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "avg")
		delete(additionalProperties, "count")
		delete(additionalProperties, "p99")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEdgeLatencyMetricsSchema struct {
	value *EdgeLatencyMetricsSchema
	isSet bool
}

func (v NullableEdgeLatencyMetricsSchema) Get() *EdgeLatencyMetricsSchema {
	return v.value
}

func (v *NullableEdgeLatencyMetricsSchema) Set(val *EdgeLatencyMetricsSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableEdgeLatencyMetricsSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableEdgeLatencyMetricsSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdgeLatencyMetricsSchema(val *EdgeLatencyMetricsSchema) *NullableEdgeLatencyMetricsSchema {
	return &NullableEdgeLatencyMetricsSchema{value: val, isSet: true}
}

func (v NullableEdgeLatencyMetricsSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdgeLatencyMetricsSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
