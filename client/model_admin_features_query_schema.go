/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AdminFeaturesQuerySchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminFeaturesQuerySchema{}

// AdminFeaturesQuerySchema struct for AdminFeaturesQuerySchema
type AdminFeaturesQuerySchema struct {
	// Used to filter by tags. For each entry, a TAGTYPE:TAGVALUE is expected
	Tag []string `json:"tag,omitempty"`
	// A case-insensitive prefix filter for the names of feature toggles
	NamePrefix *string `json:"namePrefix,omitempty"`
}

// NewAdminFeaturesQuerySchema instantiates a new AdminFeaturesQuerySchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminFeaturesQuerySchema() *AdminFeaturesQuerySchema {
	this := AdminFeaturesQuerySchema{}
	return &this
}

// NewAdminFeaturesQuerySchemaWithDefaults instantiates a new AdminFeaturesQuerySchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminFeaturesQuerySchemaWithDefaults() *AdminFeaturesQuerySchema {
	this := AdminFeaturesQuerySchema{}
	return &this
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *AdminFeaturesQuerySchema) GetTag() []string {
	if o == nil || IsNil(o.Tag) {
		var ret []string
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminFeaturesQuerySchema) GetTagOk() ([]string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *AdminFeaturesQuerySchema) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given []string and assigns it to the Tag field.
func (o *AdminFeaturesQuerySchema) SetTag(v []string) {
	o.Tag = v
}

// GetNamePrefix returns the NamePrefix field value if set, zero value otherwise.
func (o *AdminFeaturesQuerySchema) GetNamePrefix() string {
	if o == nil || IsNil(o.NamePrefix) {
		var ret string
		return ret
	}
	return *o.NamePrefix
}

// GetNamePrefixOk returns a tuple with the NamePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminFeaturesQuerySchema) GetNamePrefixOk() (*string, bool) {
	if o == nil || IsNil(o.NamePrefix) {
		return nil, false
	}
	return o.NamePrefix, true
}

// HasNamePrefix returns a boolean if a field has been set.
func (o *AdminFeaturesQuerySchema) HasNamePrefix() bool {
	if o != nil && !IsNil(o.NamePrefix) {
		return true
	}

	return false
}

// SetNamePrefix gets a reference to the given string and assigns it to the NamePrefix field.
func (o *AdminFeaturesQuerySchema) SetNamePrefix(v string) {
	o.NamePrefix = &v
}

func (o AdminFeaturesQuerySchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminFeaturesQuerySchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if !IsNil(o.NamePrefix) {
		toSerialize["namePrefix"] = o.NamePrefix
	}
	return toSerialize, nil
}

type NullableAdminFeaturesQuerySchema struct {
	value *AdminFeaturesQuerySchema
	isSet bool
}

func (v NullableAdminFeaturesQuerySchema) Get() *AdminFeaturesQuerySchema {
	return v.value
}

func (v *NullableAdminFeaturesQuerySchema) Set(val *AdminFeaturesQuerySchema) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminFeaturesQuerySchema) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminFeaturesQuerySchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminFeaturesQuerySchema(val *AdminFeaturesQuerySchema) *NullableAdminFeaturesQuerySchema {
	return &NullableAdminFeaturesQuerySchema{value: val, isSet: true}
}

func (v NullableAdminFeaturesQuerySchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminFeaturesQuerySchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


