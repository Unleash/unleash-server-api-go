/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ChangeRequestDefaultEventSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChangeRequestDefaultEventSchema{}

// ChangeRequestDefaultEventSchema struct for ChangeRequestDefaultEventSchema
type ChangeRequestDefaultEventSchema struct {
	Action  string                 `json:"action"`
	Payload map[string]interface{} `json:"payload"`
}

// NewChangeRequestDefaultEventSchema instantiates a new ChangeRequestDefaultEventSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeRequestDefaultEventSchema(action string, payload map[string]interface{}) *ChangeRequestDefaultEventSchema {
	this := ChangeRequestDefaultEventSchema{}
	this.Action = action
	this.Payload = payload
	return &this
}

// NewChangeRequestDefaultEventSchemaWithDefaults instantiates a new ChangeRequestDefaultEventSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeRequestDefaultEventSchemaWithDefaults() *ChangeRequestDefaultEventSchema {
	this := ChangeRequestDefaultEventSchema{}
	return &this
}

// GetAction returns the Action field value
func (o *ChangeRequestDefaultEventSchema) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestDefaultEventSchema) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ChangeRequestDefaultEventSchema) SetAction(v string) {
	o.Action = v
}

// GetPayload returns the Payload field value
func (o *ChangeRequestDefaultEventSchema) GetPayload() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestDefaultEventSchema) GetPayloadOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Payload, true
}

// SetPayload sets field value
func (o *ChangeRequestDefaultEventSchema) SetPayload(v map[string]interface{}) {
	o.Payload = v
}

func (o ChangeRequestDefaultEventSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChangeRequestDefaultEventSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	toSerialize["payload"] = o.Payload
	return toSerialize, nil
}

type NullableChangeRequestDefaultEventSchema struct {
	value *ChangeRequestDefaultEventSchema
	isSet bool
}

func (v NullableChangeRequestDefaultEventSchema) Get() *ChangeRequestDefaultEventSchema {
	return v.value
}

func (v *NullableChangeRequestDefaultEventSchema) Set(val *ChangeRequestDefaultEventSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeRequestDefaultEventSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeRequestDefaultEventSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeRequestDefaultEventSchema(val *ChangeRequestDefaultEventSchema) *NullableChangeRequestDefaultEventSchema {
	return &NullableChangeRequestDefaultEventSchema{value: val, isSet: true}
}

func (v NullableChangeRequestDefaultEventSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeRequestDefaultEventSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
