/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CreateRoleWithPermissionsSchemaPermissionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRoleWithPermissionsSchemaPermissionsInner{}

// CreateRoleWithPermissionsSchemaPermissionsInner struct for CreateRoleWithPermissionsSchemaPermissionsInner
type CreateRoleWithPermissionsSchemaPermissionsInner struct {
	Id          float32 `json:"id"`
	Environment *string `json:"environment,omitempty"`
}

// NewCreateRoleWithPermissionsSchemaPermissionsInner instantiates a new CreateRoleWithPermissionsSchemaPermissionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRoleWithPermissionsSchemaPermissionsInner(id float32) *CreateRoleWithPermissionsSchemaPermissionsInner {
	this := CreateRoleWithPermissionsSchemaPermissionsInner{}
	this.Id = id
	return &this
}

// NewCreateRoleWithPermissionsSchemaPermissionsInnerWithDefaults instantiates a new CreateRoleWithPermissionsSchemaPermissionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRoleWithPermissionsSchemaPermissionsInnerWithDefaults() *CreateRoleWithPermissionsSchemaPermissionsInner {
	this := CreateRoleWithPermissionsSchemaPermissionsInner{}
	return &this
}

// GetId returns the Id field value
func (o *CreateRoleWithPermissionsSchemaPermissionsInner) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateRoleWithPermissionsSchemaPermissionsInner) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateRoleWithPermissionsSchemaPermissionsInner) SetId(v float32) {
	o.Id = v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *CreateRoleWithPermissionsSchemaPermissionsInner) GetEnvironment() string {
	if o == nil || IsNil(o.Environment) {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRoleWithPermissionsSchemaPermissionsInner) GetEnvironmentOk() (*string, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *CreateRoleWithPermissionsSchemaPermissionsInner) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *CreateRoleWithPermissionsSchemaPermissionsInner) SetEnvironment(v string) {
	o.Environment = &v
}

func (o CreateRoleWithPermissionsSchemaPermissionsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRoleWithPermissionsSchemaPermissionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	return toSerialize, nil
}

type NullableCreateRoleWithPermissionsSchemaPermissionsInner struct {
	value *CreateRoleWithPermissionsSchemaPermissionsInner
	isSet bool
}

func (v NullableCreateRoleWithPermissionsSchemaPermissionsInner) Get() *CreateRoleWithPermissionsSchemaPermissionsInner {
	return v.value
}

func (v *NullableCreateRoleWithPermissionsSchemaPermissionsInner) Set(val *CreateRoleWithPermissionsSchemaPermissionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRoleWithPermissionsSchemaPermissionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRoleWithPermissionsSchemaPermissionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRoleWithPermissionsSchemaPermissionsInner(val *CreateRoleWithPermissionsSchemaPermissionsInner) *NullableCreateRoleWithPermissionsSchemaPermissionsInner {
	return &NullableCreateRoleWithPermissionsSchemaPermissionsInner{value: val, isSet: true}
}

func (v NullableCreateRoleWithPermissionsSchemaPermissionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRoleWithPermissionsSchemaPermissionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
