/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the PublicSignupTokenSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicSignupTokenSchema{}

// PublicSignupTokenSchema Used for transporting a [public invite link](https://docs.getunleash.io/reference/public-signup#public-sign-up-tokens)
type PublicSignupTokenSchema struct {
	// The actual value of the token. This is the part that is used by Unleash to create an invite link
	Secret string `json:"secret"`
	// The public signup link for the token. Users who follow this link will be taken to a signup page where they can create an Unleash user.
	Url string `json:"url"`
	// The token's name. Only for displaying in the UI
	Name string `json:"name"`
	// Whether the token is active. This property will always be `false` for a token that has expired.
	Enabled bool `json:"enabled"`
	// The time when the token will expire.
	ExpiresAt time.Time `json:"expiresAt"`
	// When the token was created.
	CreatedAt time.Time `json:"createdAt"`
	// The creator's email or username
	CreatedBy NullableString `json:"createdBy"`
	// Array of users that have signed up using the token.
	Users []UserSchema `json:"users,omitempty"`
	Role RoleSchema `json:"role"`
}

// NewPublicSignupTokenSchema instantiates a new PublicSignupTokenSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicSignupTokenSchema(secret string, url string, name string, enabled bool, expiresAt time.Time, createdAt time.Time, createdBy NullableString, role RoleSchema) *PublicSignupTokenSchema {
	this := PublicSignupTokenSchema{}
	this.Secret = secret
	this.Url = url
	this.Name = name
	this.Enabled = enabled
	this.ExpiresAt = expiresAt
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Role = role
	return &this
}

// NewPublicSignupTokenSchemaWithDefaults instantiates a new PublicSignupTokenSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicSignupTokenSchemaWithDefaults() *PublicSignupTokenSchema {
	this := PublicSignupTokenSchema{}
	return &this
}

// GetSecret returns the Secret field value
func (o *PublicSignupTokenSchema) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *PublicSignupTokenSchema) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *PublicSignupTokenSchema) SetSecret(v string) {
	o.Secret = v
}

// GetUrl returns the Url field value
func (o *PublicSignupTokenSchema) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *PublicSignupTokenSchema) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *PublicSignupTokenSchema) SetUrl(v string) {
	o.Url = v
}

// GetName returns the Name field value
func (o *PublicSignupTokenSchema) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PublicSignupTokenSchema) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PublicSignupTokenSchema) SetName(v string) {
	o.Name = v
}

// GetEnabled returns the Enabled field value
func (o *PublicSignupTokenSchema) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *PublicSignupTokenSchema) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *PublicSignupTokenSchema) SetEnabled(v bool) {
	o.Enabled = v
}

// GetExpiresAt returns the ExpiresAt field value
func (o *PublicSignupTokenSchema) GetExpiresAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
func (o *PublicSignupTokenSchema) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresAt, true
}

// SetExpiresAt sets field value
func (o *PublicSignupTokenSchema) SetExpiresAt(v time.Time) {
	o.ExpiresAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PublicSignupTokenSchema) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PublicSignupTokenSchema) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PublicSignupTokenSchema) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PublicSignupTokenSchema) GetCreatedBy() string {
	if o == nil || o.CreatedBy.Get() == nil {
		var ret string
		return ret
	}

	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicSignupTokenSchema) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// SetCreatedBy sets field value
func (o *PublicSignupTokenSchema) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}

// GetUsers returns the Users field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PublicSignupTokenSchema) GetUsers() []UserSchema {
	if o == nil {
		var ret []UserSchema
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicSignupTokenSchema) GetUsersOk() ([]UserSchema, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *PublicSignupTokenSchema) HasUsers() bool {
	if o != nil && IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []UserSchema and assigns it to the Users field.
func (o *PublicSignupTokenSchema) SetUsers(v []UserSchema) {
	o.Users = v
}

// GetRole returns the Role field value
func (o *PublicSignupTokenSchema) GetRole() RoleSchema {
	if o == nil {
		var ret RoleSchema
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *PublicSignupTokenSchema) GetRoleOk() (*RoleSchema, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *PublicSignupTokenSchema) SetRole(v RoleSchema) {
	o.Role = v
}

func (o PublicSignupTokenSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicSignupTokenSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["secret"] = o.Secret
	toSerialize["url"] = o.Url
	toSerialize["name"] = o.Name
	toSerialize["enabled"] = o.Enabled
	toSerialize["expiresAt"] = o.ExpiresAt
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["createdBy"] = o.CreatedBy.Get()
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	toSerialize["role"] = o.Role
	return toSerialize, nil
}

type NullablePublicSignupTokenSchema struct {
	value *PublicSignupTokenSchema
	isSet bool
}

func (v NullablePublicSignupTokenSchema) Get() *PublicSignupTokenSchema {
	return v.value
}

func (v *NullablePublicSignupTokenSchema) Set(val *PublicSignupTokenSchema) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicSignupTokenSchema) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicSignupTokenSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicSignupTokenSchema(val *PublicSignupTokenSchema) *NullablePublicSignupTokenSchema {
	return &NullablePublicSignupTokenSchema{value: val, isSet: true}
}

func (v NullablePublicSignupTokenSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicSignupTokenSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


