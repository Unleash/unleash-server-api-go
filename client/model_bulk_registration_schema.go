/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BulkRegistrationSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkRegistrationSchema{}

// BulkRegistrationSchema An application registration. Defines the format POSTed by our server-side SDKs when they're starting up
type BulkRegistrationSchema struct {
	// A list of applications this app registration has been registered through. If connected directly to Unleash, this is an empty list.   This can be used in later visualizations to tell how many levels of proxy or Edge instances our SDKs have connected through
	ConnectVia []BulkRegistrationSchemaConnectViaInner `json:"connectVia,omitempty"`
	// The name of the application that is evaluating toggles
	AppName string `json:"appName"`
	// Which environment the application is running in
	Environment string `json:"environment"`
	// A [(somewhat) unique identifier](https://docs.getunleash.io/reference/sdks/node#advanced-usage) for the application
	InstanceId string `json:"instanceId"`
	// How often (in seconds) the application refreshes its features
	Interval *float32 `json:"interval,omitempty"`
	Started *DateSchema `json:"started,omitempty"`
	// Enabled [strategies](https://docs.getunleash.io/reference/activation-strategies) in the application
	Strategies []string `json:"strategies,omitempty"`
	// The version the sdk is running. Typically <client>:<version>
	SdkVersion *string `json:"sdkVersion,omitempty"`
}

// NewBulkRegistrationSchema instantiates a new BulkRegistrationSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkRegistrationSchema(appName string, environment string, instanceId string) *BulkRegistrationSchema {
	this := BulkRegistrationSchema{}
	this.AppName = appName
	this.Environment = environment
	this.InstanceId = instanceId
	return &this
}

// NewBulkRegistrationSchemaWithDefaults instantiates a new BulkRegistrationSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkRegistrationSchemaWithDefaults() *BulkRegistrationSchema {
	this := BulkRegistrationSchema{}
	return &this
}

// GetConnectVia returns the ConnectVia field value if set, zero value otherwise.
func (o *BulkRegistrationSchema) GetConnectVia() []BulkRegistrationSchemaConnectViaInner {
	if o == nil || IsNil(o.ConnectVia) {
		var ret []BulkRegistrationSchemaConnectViaInner
		return ret
	}
	return o.ConnectVia
}

// GetConnectViaOk returns a tuple with the ConnectVia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkRegistrationSchema) GetConnectViaOk() ([]BulkRegistrationSchemaConnectViaInner, bool) {
	if o == nil || IsNil(o.ConnectVia) {
		return nil, false
	}
	return o.ConnectVia, true
}

// HasConnectVia returns a boolean if a field has been set.
func (o *BulkRegistrationSchema) HasConnectVia() bool {
	if o != nil && !IsNil(o.ConnectVia) {
		return true
	}

	return false
}

// SetConnectVia gets a reference to the given []BulkRegistrationSchemaConnectViaInner and assigns it to the ConnectVia field.
func (o *BulkRegistrationSchema) SetConnectVia(v []BulkRegistrationSchemaConnectViaInner) {
	o.ConnectVia = v
}

// GetAppName returns the AppName field value
func (o *BulkRegistrationSchema) GetAppName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value
// and a boolean to check if the value has been set.
func (o *BulkRegistrationSchema) GetAppNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppName, true
}

// SetAppName sets field value
func (o *BulkRegistrationSchema) SetAppName(v string) {
	o.AppName = v
}

// GetEnvironment returns the Environment field value
func (o *BulkRegistrationSchema) GetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *BulkRegistrationSchema) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *BulkRegistrationSchema) SetEnvironment(v string) {
	o.Environment = v
}

// GetInstanceId returns the InstanceId field value
func (o *BulkRegistrationSchema) GetInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value
// and a boolean to check if the value has been set.
func (o *BulkRegistrationSchema) GetInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceId, true
}

// SetInstanceId sets field value
func (o *BulkRegistrationSchema) SetInstanceId(v string) {
	o.InstanceId = v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *BulkRegistrationSchema) GetInterval() float32 {
	if o == nil || IsNil(o.Interval) {
		var ret float32
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkRegistrationSchema) GetIntervalOk() (*float32, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *BulkRegistrationSchema) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given float32 and assigns it to the Interval field.
func (o *BulkRegistrationSchema) SetInterval(v float32) {
	o.Interval = &v
}

// GetStarted returns the Started field value if set, zero value otherwise.
func (o *BulkRegistrationSchema) GetStarted() DateSchema {
	if o == nil || IsNil(o.Started) {
		var ret DateSchema
		return ret
	}
	return *o.Started
}

// GetStartedOk returns a tuple with the Started field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkRegistrationSchema) GetStartedOk() (*DateSchema, bool) {
	if o == nil || IsNil(o.Started) {
		return nil, false
	}
	return o.Started, true
}

// HasStarted returns a boolean if a field has been set.
func (o *BulkRegistrationSchema) HasStarted() bool {
	if o != nil && !IsNil(o.Started) {
		return true
	}

	return false
}

// SetStarted gets a reference to the given DateSchema and assigns it to the Started field.
func (o *BulkRegistrationSchema) SetStarted(v DateSchema) {
	o.Started = &v
}

// GetStrategies returns the Strategies field value if set, zero value otherwise.
func (o *BulkRegistrationSchema) GetStrategies() []string {
	if o == nil || IsNil(o.Strategies) {
		var ret []string
		return ret
	}
	return o.Strategies
}

// GetStrategiesOk returns a tuple with the Strategies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkRegistrationSchema) GetStrategiesOk() ([]string, bool) {
	if o == nil || IsNil(o.Strategies) {
		return nil, false
	}
	return o.Strategies, true
}

// HasStrategies returns a boolean if a field has been set.
func (o *BulkRegistrationSchema) HasStrategies() bool {
	if o != nil && !IsNil(o.Strategies) {
		return true
	}

	return false
}

// SetStrategies gets a reference to the given []string and assigns it to the Strategies field.
func (o *BulkRegistrationSchema) SetStrategies(v []string) {
	o.Strategies = v
}

// GetSdkVersion returns the SdkVersion field value if set, zero value otherwise.
func (o *BulkRegistrationSchema) GetSdkVersion() string {
	if o == nil || IsNil(o.SdkVersion) {
		var ret string
		return ret
	}
	return *o.SdkVersion
}

// GetSdkVersionOk returns a tuple with the SdkVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkRegistrationSchema) GetSdkVersionOk() (*string, bool) {
	if o == nil || IsNil(o.SdkVersion) {
		return nil, false
	}
	return o.SdkVersion, true
}

// HasSdkVersion returns a boolean if a field has been set.
func (o *BulkRegistrationSchema) HasSdkVersion() bool {
	if o != nil && !IsNil(o.SdkVersion) {
		return true
	}

	return false
}

// SetSdkVersion gets a reference to the given string and assigns it to the SdkVersion field.
func (o *BulkRegistrationSchema) SetSdkVersion(v string) {
	o.SdkVersion = &v
}

func (o BulkRegistrationSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkRegistrationSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectVia) {
		toSerialize["connectVia"] = o.ConnectVia
	}
	toSerialize["appName"] = o.AppName
	toSerialize["environment"] = o.Environment
	toSerialize["instanceId"] = o.InstanceId
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	if !IsNil(o.Started) {
		toSerialize["started"] = o.Started
	}
	if !IsNil(o.Strategies) {
		toSerialize["strategies"] = o.Strategies
	}
	if !IsNil(o.SdkVersion) {
		toSerialize["sdkVersion"] = o.SdkVersion
	}
	return toSerialize, nil
}

type NullableBulkRegistrationSchema struct {
	value *BulkRegistrationSchema
	isSet bool
}

func (v NullableBulkRegistrationSchema) Get() *BulkRegistrationSchema {
	return v.value
}

func (v *NullableBulkRegistrationSchema) Set(val *BulkRegistrationSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkRegistrationSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkRegistrationSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkRegistrationSchema(val *BulkRegistrationSchema) *NullableBulkRegistrationSchema {
	return &NullableBulkRegistrationSchema{value: val, isSet: true}
}

func (v NullableBulkRegistrationSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkRegistrationSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


