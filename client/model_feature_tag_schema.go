/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the FeatureTagSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeatureTagSchema{}

// FeatureTagSchema Describes a tag applied to a feature
type FeatureTagSchema struct {
	// The name of the feature this tag is applied to
	FeatureName string `json:"featureName"`
	// The [type](https://docs.getunleash.io/reference/tags#tag-types tag types) of the tag
	TagType *string `json:"tagType,omitempty"`
	// The value of the tag
	TagValue string `json:"tagValue"`
	// The [type](https://docs.getunleash.io/reference/tags#tag-types tag types) of the tag. This property is deprecated and will be removed in a future version of Unleash. Superseded by the `tagType` property.
	// Deprecated
	Type *string `json:"type,omitempty"`
	// The value of the tag. This property is deprecated and will be removed in a future version of Unleash. Superseded by the `tagValue` property.
	// Deprecated
	Value *string `json:"value,omitempty"`
}

// NewFeatureTagSchema instantiates a new FeatureTagSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeatureTagSchema(featureName string, tagValue string) *FeatureTagSchema {
	this := FeatureTagSchema{}
	this.FeatureName = featureName
	this.TagValue = tagValue
	return &this
}

// NewFeatureTagSchemaWithDefaults instantiates a new FeatureTagSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeatureTagSchemaWithDefaults() *FeatureTagSchema {
	this := FeatureTagSchema{}
	return &this
}

// GetFeatureName returns the FeatureName field value
func (o *FeatureTagSchema) GetFeatureName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeatureName
}

// GetFeatureNameOk returns a tuple with the FeatureName field value
// and a boolean to check if the value has been set.
func (o *FeatureTagSchema) GetFeatureNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeatureName, true
}

// SetFeatureName sets field value
func (o *FeatureTagSchema) SetFeatureName(v string) {
	o.FeatureName = v
}

// GetTagType returns the TagType field value if set, zero value otherwise.
func (o *FeatureTagSchema) GetTagType() string {
	if o == nil || IsNil(o.TagType) {
		var ret string
		return ret
	}
	return *o.TagType
}

// GetTagTypeOk returns a tuple with the TagType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureTagSchema) GetTagTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TagType) {
		return nil, false
	}
	return o.TagType, true
}

// HasTagType returns a boolean if a field has been set.
func (o *FeatureTagSchema) HasTagType() bool {
	if o != nil && !IsNil(o.TagType) {
		return true
	}

	return false
}

// SetTagType gets a reference to the given string and assigns it to the TagType field.
func (o *FeatureTagSchema) SetTagType(v string) {
	o.TagType = &v
}

// GetTagValue returns the TagValue field value
func (o *FeatureTagSchema) GetTagValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TagValue
}

// GetTagValueOk returns a tuple with the TagValue field value
// and a boolean to check if the value has been set.
func (o *FeatureTagSchema) GetTagValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TagValue, true
}

// SetTagValue sets field value
func (o *FeatureTagSchema) SetTagValue(v string) {
	o.TagValue = v
}

// GetType returns the Type field value if set, zero value otherwise.
// Deprecated
func (o *FeatureTagSchema) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *FeatureTagSchema) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *FeatureTagSchema) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
// Deprecated
func (o *FeatureTagSchema) SetType(v string) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
// Deprecated
func (o *FeatureTagSchema) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *FeatureTagSchema) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *FeatureTagSchema) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
// Deprecated
func (o *FeatureTagSchema) SetValue(v string) {
	o.Value = &v
}

func (o FeatureTagSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeatureTagSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["featureName"] = o.FeatureName
	if !IsNil(o.TagType) {
		toSerialize["tagType"] = o.TagType
	}
	toSerialize["tagValue"] = o.TagValue
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableFeatureTagSchema struct {
	value *FeatureTagSchema
	isSet bool
}

func (v NullableFeatureTagSchema) Get() *FeatureTagSchema {
	return v.value
}

func (v *NullableFeatureTagSchema) Set(val *FeatureTagSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableFeatureTagSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableFeatureTagSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeatureTagSchema(val *FeatureTagSchema) *NullableFeatureTagSchema {
	return &NullableFeatureTagSchema{value: val, isSet: true}
}

func (v NullableFeatureTagSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeatureTagSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
