/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the SamlSettingsSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SamlSettingsSchema{}

// SamlSettingsSchema Settings used to authenticate via SAML
type SamlSettingsSchema struct {
	// Is SAML authentication enabled
	Enabled *bool `json:"enabled,omitempty"`
	// The SAML 2.0 entity ID
	EntityId string `json:"entityId"`
	// Which URL to use for Single Sign On
	SignOnUrl string `json:"signOnUrl"`
	// The X509 certificate used to validate requests
	Certificate string `json:"certificate"`
	// Which URL to use for Single Sign Out
	SignOutUrl *string `json:"signOutUrl,omitempty"`
	// Signing certificate for sign out requests
	SpCertificate *string `json:"spCertificate,omitempty"`
	// Should Unleash create users based on the emails coming back in the authentication reply from the SAML server
	AutoCreate *bool `json:"autoCreate,omitempty"`
	// A comma separated list of email domains that Unleash will auto create user accounts for.
	EmailDomains *string `json:"emailDomains,omitempty"`
	// Assign this root role to auto created users
	DefaultRootRole *string `json:"defaultRootRole,omitempty"`
}

// NewSamlSettingsSchema instantiates a new SamlSettingsSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSamlSettingsSchema(entityId string, signOnUrl string, certificate string) *SamlSettingsSchema {
	this := SamlSettingsSchema{}
	this.EntityId = entityId
	this.SignOnUrl = signOnUrl
	this.Certificate = certificate
	return &this
}

// NewSamlSettingsSchemaWithDefaults instantiates a new SamlSettingsSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSamlSettingsSchemaWithDefaults() *SamlSettingsSchema {
	this := SamlSettingsSchema{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *SamlSettingsSchema) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlSettingsSchema) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *SamlSettingsSchema) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *SamlSettingsSchema) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetEntityId returns the EntityId field value
func (o *SamlSettingsSchema) GetEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value
// and a boolean to check if the value has been set.
func (o *SamlSettingsSchema) GetEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityId, true
}

// SetEntityId sets field value
func (o *SamlSettingsSchema) SetEntityId(v string) {
	o.EntityId = v
}

// GetSignOnUrl returns the SignOnUrl field value
func (o *SamlSettingsSchema) GetSignOnUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignOnUrl
}

// GetSignOnUrlOk returns a tuple with the SignOnUrl field value
// and a boolean to check if the value has been set.
func (o *SamlSettingsSchema) GetSignOnUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignOnUrl, true
}

// SetSignOnUrl sets field value
func (o *SamlSettingsSchema) SetSignOnUrl(v string) {
	o.SignOnUrl = v
}

// GetCertificate returns the Certificate field value
func (o *SamlSettingsSchema) GetCertificate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value
// and a boolean to check if the value has been set.
func (o *SamlSettingsSchema) GetCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Certificate, true
}

// SetCertificate sets field value
func (o *SamlSettingsSchema) SetCertificate(v string) {
	o.Certificate = v
}

// GetSignOutUrl returns the SignOutUrl field value if set, zero value otherwise.
func (o *SamlSettingsSchema) GetSignOutUrl() string {
	if o == nil || IsNil(o.SignOutUrl) {
		var ret string
		return ret
	}
	return *o.SignOutUrl
}

// GetSignOutUrlOk returns a tuple with the SignOutUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlSettingsSchema) GetSignOutUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SignOutUrl) {
		return nil, false
	}
	return o.SignOutUrl, true
}

// HasSignOutUrl returns a boolean if a field has been set.
func (o *SamlSettingsSchema) HasSignOutUrl() bool {
	if o != nil && !IsNil(o.SignOutUrl) {
		return true
	}

	return false
}

// SetSignOutUrl gets a reference to the given string and assigns it to the SignOutUrl field.
func (o *SamlSettingsSchema) SetSignOutUrl(v string) {
	o.SignOutUrl = &v
}

// GetSpCertificate returns the SpCertificate field value if set, zero value otherwise.
func (o *SamlSettingsSchema) GetSpCertificate() string {
	if o == nil || IsNil(o.SpCertificate) {
		var ret string
		return ret
	}
	return *o.SpCertificate
}

// GetSpCertificateOk returns a tuple with the SpCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlSettingsSchema) GetSpCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.SpCertificate) {
		return nil, false
	}
	return o.SpCertificate, true
}

// HasSpCertificate returns a boolean if a field has been set.
func (o *SamlSettingsSchema) HasSpCertificate() bool {
	if o != nil && !IsNil(o.SpCertificate) {
		return true
	}

	return false
}

// SetSpCertificate gets a reference to the given string and assigns it to the SpCertificate field.
func (o *SamlSettingsSchema) SetSpCertificate(v string) {
	o.SpCertificate = &v
}

// GetAutoCreate returns the AutoCreate field value if set, zero value otherwise.
func (o *SamlSettingsSchema) GetAutoCreate() bool {
	if o == nil || IsNil(o.AutoCreate) {
		var ret bool
		return ret
	}
	return *o.AutoCreate
}

// GetAutoCreateOk returns a tuple with the AutoCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlSettingsSchema) GetAutoCreateOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoCreate) {
		return nil, false
	}
	return o.AutoCreate, true
}

// HasAutoCreate returns a boolean if a field has been set.
func (o *SamlSettingsSchema) HasAutoCreate() bool {
	if o != nil && !IsNil(o.AutoCreate) {
		return true
	}

	return false
}

// SetAutoCreate gets a reference to the given bool and assigns it to the AutoCreate field.
func (o *SamlSettingsSchema) SetAutoCreate(v bool) {
	o.AutoCreate = &v
}

// GetEmailDomains returns the EmailDomains field value if set, zero value otherwise.
func (o *SamlSettingsSchema) GetEmailDomains() string {
	if o == nil || IsNil(o.EmailDomains) {
		var ret string
		return ret
	}
	return *o.EmailDomains
}

// GetEmailDomainsOk returns a tuple with the EmailDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlSettingsSchema) GetEmailDomainsOk() (*string, bool) {
	if o == nil || IsNil(o.EmailDomains) {
		return nil, false
	}
	return o.EmailDomains, true
}

// HasEmailDomains returns a boolean if a field has been set.
func (o *SamlSettingsSchema) HasEmailDomains() bool {
	if o != nil && !IsNil(o.EmailDomains) {
		return true
	}

	return false
}

// SetEmailDomains gets a reference to the given string and assigns it to the EmailDomains field.
func (o *SamlSettingsSchema) SetEmailDomains(v string) {
	o.EmailDomains = &v
}

// GetDefaultRootRole returns the DefaultRootRole field value if set, zero value otherwise.
func (o *SamlSettingsSchema) GetDefaultRootRole() string {
	if o == nil || IsNil(o.DefaultRootRole) {
		var ret string
		return ret
	}
	return *o.DefaultRootRole
}

// GetDefaultRootRoleOk returns a tuple with the DefaultRootRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlSettingsSchema) GetDefaultRootRoleOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultRootRole) {
		return nil, false
	}
	return o.DefaultRootRole, true
}

// HasDefaultRootRole returns a boolean if a field has been set.
func (o *SamlSettingsSchema) HasDefaultRootRole() bool {
	if o != nil && !IsNil(o.DefaultRootRole) {
		return true
	}

	return false
}

// SetDefaultRootRole gets a reference to the given string and assigns it to the DefaultRootRole field.
func (o *SamlSettingsSchema) SetDefaultRootRole(v string) {
	o.DefaultRootRole = &v
}

func (o SamlSettingsSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SamlSettingsSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	toSerialize["entityId"] = o.EntityId
	toSerialize["signOnUrl"] = o.SignOnUrl
	toSerialize["certificate"] = o.Certificate
	if !IsNil(o.SignOutUrl) {
		toSerialize["signOutUrl"] = o.SignOutUrl
	}
	if !IsNil(o.SpCertificate) {
		toSerialize["spCertificate"] = o.SpCertificate
	}
	if !IsNil(o.AutoCreate) {
		toSerialize["autoCreate"] = o.AutoCreate
	}
	if !IsNil(o.EmailDomains) {
		toSerialize["emailDomains"] = o.EmailDomains
	}
	if !IsNil(o.DefaultRootRole) {
		toSerialize["defaultRootRole"] = o.DefaultRootRole
	}
	return toSerialize, nil
}

type NullableSamlSettingsSchema struct {
	value *SamlSettingsSchema
	isSet bool
}

func (v NullableSamlSettingsSchema) Get() *SamlSettingsSchema {
	return v.value
}

func (v *NullableSamlSettingsSchema) Set(val *SamlSettingsSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableSamlSettingsSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableSamlSettingsSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSamlSettingsSchema(val *SamlSettingsSchema) *NullableSamlSettingsSchema {
	return &NullableSamlSettingsSchema{value: val, isSet: true}
}

func (v NullableSamlSettingsSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSamlSettingsSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
