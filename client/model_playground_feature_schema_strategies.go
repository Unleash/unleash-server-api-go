/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PlaygroundFeatureSchemaStrategies type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlaygroundFeatureSchemaStrategies{}

// PlaygroundFeatureSchemaStrategies The feature's applicable strategies and cumulative results of the strategies
type PlaygroundFeatureSchemaStrategies struct {
	Result AdvancedPlaygroundEnvironmentFeatureSchemaStrategiesResult `json:"result"`
	// The strategies that apply to this feature.
	Data []PlaygroundStrategySchema `json:"data"`
}

// NewPlaygroundFeatureSchemaStrategies instantiates a new PlaygroundFeatureSchemaStrategies object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaygroundFeatureSchemaStrategies(result AdvancedPlaygroundEnvironmentFeatureSchemaStrategiesResult, data []PlaygroundStrategySchema) *PlaygroundFeatureSchemaStrategies {
	this := PlaygroundFeatureSchemaStrategies{}
	this.Result = result
	this.Data = data
	return &this
}

// NewPlaygroundFeatureSchemaStrategiesWithDefaults instantiates a new PlaygroundFeatureSchemaStrategies object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaygroundFeatureSchemaStrategiesWithDefaults() *PlaygroundFeatureSchemaStrategies {
	this := PlaygroundFeatureSchemaStrategies{}
	return &this
}

// GetResult returns the Result field value
func (o *PlaygroundFeatureSchemaStrategies) GetResult() AdvancedPlaygroundEnvironmentFeatureSchemaStrategiesResult {
	if o == nil {
		var ret AdvancedPlaygroundEnvironmentFeatureSchemaStrategiesResult
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *PlaygroundFeatureSchemaStrategies) GetResultOk() (*AdvancedPlaygroundEnvironmentFeatureSchemaStrategiesResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *PlaygroundFeatureSchemaStrategies) SetResult(v AdvancedPlaygroundEnvironmentFeatureSchemaStrategiesResult) {
	o.Result = v
}

// GetData returns the Data field value
func (o *PlaygroundFeatureSchemaStrategies) GetData() []PlaygroundStrategySchema {
	if o == nil {
		var ret []PlaygroundStrategySchema
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *PlaygroundFeatureSchemaStrategies) GetDataOk() ([]PlaygroundStrategySchema, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *PlaygroundFeatureSchemaStrategies) SetData(v []PlaygroundStrategySchema) {
	o.Data = v
}

func (o PlaygroundFeatureSchemaStrategies) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlaygroundFeatureSchemaStrategies) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["result"] = o.Result
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullablePlaygroundFeatureSchemaStrategies struct {
	value *PlaygroundFeatureSchemaStrategies
	isSet bool
}

func (v NullablePlaygroundFeatureSchemaStrategies) Get() *PlaygroundFeatureSchemaStrategies {
	return v.value
}

func (v *NullablePlaygroundFeatureSchemaStrategies) Set(val *PlaygroundFeatureSchemaStrategies) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaygroundFeatureSchemaStrategies) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaygroundFeatureSchemaStrategies) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaygroundFeatureSchemaStrategies(val *PlaygroundFeatureSchemaStrategies) *NullablePlaygroundFeatureSchemaStrategies {
	return &NullablePlaygroundFeatureSchemaStrategies{value: val, isSet: true}
}

func (v NullablePlaygroundFeatureSchemaStrategies) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaygroundFeatureSchemaStrategies) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
