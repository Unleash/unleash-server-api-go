/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the TokenUserSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenUserSchema{}

// TokenUserSchema struct for TokenUserSchema
type TokenUserSchema struct {
	Id        float32        `json:"id"`
	Name      string         `json:"name"`
	Email     string         `json:"email"`
	Token     string         `json:"token"`
	CreatedBy NullableString `json:"createdBy"`
	Role      RoleSchema     `json:"role"`
}

// NewTokenUserSchema instantiates a new TokenUserSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenUserSchema(id float32, name string, email string, token string, createdBy NullableString, role RoleSchema) *TokenUserSchema {
	this := TokenUserSchema{}
	this.Id = id
	this.Name = name
	this.Email = email
	this.Token = token
	this.CreatedBy = createdBy
	this.Role = role
	return &this
}

// NewTokenUserSchemaWithDefaults instantiates a new TokenUserSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenUserSchemaWithDefaults() *TokenUserSchema {
	this := TokenUserSchema{}
	return &this
}

// GetId returns the Id field value
func (o *TokenUserSchema) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TokenUserSchema) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TokenUserSchema) SetId(v float32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *TokenUserSchema) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TokenUserSchema) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TokenUserSchema) SetName(v string) {
	o.Name = v
}

// GetEmail returns the Email field value
func (o *TokenUserSchema) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *TokenUserSchema) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *TokenUserSchema) SetEmail(v string) {
	o.Email = v
}

// GetToken returns the Token field value
func (o *TokenUserSchema) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *TokenUserSchema) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *TokenUserSchema) SetToken(v string) {
	o.Token = v
}

// GetCreatedBy returns the CreatedBy field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TokenUserSchema) GetCreatedBy() string {
	if o == nil || o.CreatedBy.Get() == nil {
		var ret string
		return ret
	}

	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenUserSchema) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// SetCreatedBy sets field value
func (o *TokenUserSchema) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}

// GetRole returns the Role field value
func (o *TokenUserSchema) GetRole() RoleSchema {
	if o == nil {
		var ret RoleSchema
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *TokenUserSchema) GetRoleOk() (*RoleSchema, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *TokenUserSchema) SetRole(v RoleSchema) {
	o.Role = v
}

func (o TokenUserSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenUserSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["email"] = o.Email
	toSerialize["token"] = o.Token
	toSerialize["createdBy"] = o.CreatedBy.Get()
	toSerialize["role"] = o.Role
	return toSerialize, nil
}

type NullableTokenUserSchema struct {
	value *TokenUserSchema
	isSet bool
}

func (v NullableTokenUserSchema) Get() *TokenUserSchema {
	return v.value
}

func (v *NullableTokenUserSchema) Set(val *TokenUserSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenUserSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenUserSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenUserSchema(val *TokenUserSchema) *NullableTokenUserSchema {
	return &NullableTokenUserSchema{value: val, isSet: true}
}

func (v NullableTokenUserSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenUserSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
