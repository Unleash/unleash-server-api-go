/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the TagsBulkAddSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagsBulkAddSchema{}

// TagsBulkAddSchema Represents tag changes to be applied to a list of features.
type TagsBulkAddSchema struct {
	// The list of features that will be affected by the tag changes.
	Features []string         `json:"features"`
	Tags     UpdateTagsSchema `json:"tags"`
}

// NewTagsBulkAddSchema instantiates a new TagsBulkAddSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagsBulkAddSchema(features []string, tags UpdateTagsSchema) *TagsBulkAddSchema {
	this := TagsBulkAddSchema{}
	this.Features = features
	this.Tags = tags
	return &this
}

// NewTagsBulkAddSchemaWithDefaults instantiates a new TagsBulkAddSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagsBulkAddSchemaWithDefaults() *TagsBulkAddSchema {
	this := TagsBulkAddSchema{}
	return &this
}

// GetFeatures returns the Features field value
func (o *TagsBulkAddSchema) GetFeatures() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value
// and a boolean to check if the value has been set.
func (o *TagsBulkAddSchema) GetFeaturesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Features, true
}

// SetFeatures sets field value
func (o *TagsBulkAddSchema) SetFeatures(v []string) {
	o.Features = v
}

// GetTags returns the Tags field value
func (o *TagsBulkAddSchema) GetTags() UpdateTagsSchema {
	if o == nil {
		var ret UpdateTagsSchema
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *TagsBulkAddSchema) GetTagsOk() (*UpdateTagsSchema, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *TagsBulkAddSchema) SetTags(v UpdateTagsSchema) {
	o.Tags = v
}

func (o TagsBulkAddSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagsBulkAddSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["features"] = o.Features
	toSerialize["tags"] = o.Tags
	return toSerialize, nil
}

type NullableTagsBulkAddSchema struct {
	value *TagsBulkAddSchema
	isSet bool
}

func (v NullableTagsBulkAddSchema) Get() *TagsBulkAddSchema {
	return v.value
}

func (v *NullableTagsBulkAddSchema) Set(val *TagsBulkAddSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableTagsBulkAddSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableTagsBulkAddSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagsBulkAddSchema(val *TagsBulkAddSchema) *NullableTagsBulkAddSchema {
	return &NullableTagsBulkAddSchema{value: val, isSet: true}
}

func (v NullableTagsBulkAddSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagsBulkAddSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
