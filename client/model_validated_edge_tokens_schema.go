/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.4.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ValidatedEdgeTokensSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidatedEdgeTokensSchema{}

// ValidatedEdgeTokensSchema A object containing a list of valid Unleash tokens.
type ValidatedEdgeTokensSchema struct {
	// The list of Unleash token objects. Each object contains the token itself and some additional metadata.
	Tokens []EdgeTokenSchema `json:"tokens"`
}

// NewValidatedEdgeTokensSchema instantiates a new ValidatedEdgeTokensSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidatedEdgeTokensSchema(tokens []EdgeTokenSchema) *ValidatedEdgeTokensSchema {
	this := ValidatedEdgeTokensSchema{}
	this.Tokens = tokens
	return &this
}

// NewValidatedEdgeTokensSchemaWithDefaults instantiates a new ValidatedEdgeTokensSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidatedEdgeTokensSchemaWithDefaults() *ValidatedEdgeTokensSchema {
	this := ValidatedEdgeTokensSchema{}
	return &this
}

// GetTokens returns the Tokens field value
func (o *ValidatedEdgeTokensSchema) GetTokens() []EdgeTokenSchema {
	if o == nil {
		var ret []EdgeTokenSchema
		return ret
	}

	return o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value
// and a boolean to check if the value has been set.
func (o *ValidatedEdgeTokensSchema) GetTokensOk() ([]EdgeTokenSchema, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tokens, true
}

// SetTokens sets field value
func (o *ValidatedEdgeTokensSchema) SetTokens(v []EdgeTokenSchema) {
	o.Tokens = v
}

func (o ValidatedEdgeTokensSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidatedEdgeTokensSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tokens"] = o.Tokens
	return toSerialize, nil
}

type NullableValidatedEdgeTokensSchema struct {
	value *ValidatedEdgeTokensSchema
	isSet bool
}

func (v NullableValidatedEdgeTokensSchema) Get() *ValidatedEdgeTokensSchema {
	return v.value
}

func (v *NullableValidatedEdgeTokensSchema) Set(val *ValidatedEdgeTokensSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableValidatedEdgeTokensSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableValidatedEdgeTokensSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidatedEdgeTokensSchema(val *ValidatedEdgeTokensSchema) *NullableValidatedEdgeTokensSchema {
	return &NullableValidatedEdgeTokensSchema{value: val, isSet: true}
}

func (v NullableValidatedEdgeTokensSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidatedEdgeTokensSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
