/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ValidateFeatureSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidateFeatureSchema{}

// ValidateFeatureSchema Data used to validate a feature toggle's name.
type ValidateFeatureSchema struct {
	// The feature name to validate.
	Name string `json:"name"`
}

// NewValidateFeatureSchema instantiates a new ValidateFeatureSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidateFeatureSchema(name string) *ValidateFeatureSchema {
	this := ValidateFeatureSchema{}
	this.Name = name
	return &this
}

// NewValidateFeatureSchemaWithDefaults instantiates a new ValidateFeatureSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidateFeatureSchemaWithDefaults() *ValidateFeatureSchema {
	this := ValidateFeatureSchema{}
	return &this
}

// GetName returns the Name field value
func (o *ValidateFeatureSchema) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ValidateFeatureSchema) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ValidateFeatureSchema) SetName(v string) {
	o.Name = v
}

func (o ValidateFeatureSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidateFeatureSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableValidateFeatureSchema struct {
	value *ValidateFeatureSchema
	isSet bool
}

func (v NullableValidateFeatureSchema) Get() *ValidateFeatureSchema {
	return v.value
}

func (v *NullableValidateFeatureSchema) Set(val *ValidateFeatureSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableValidateFeatureSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableValidateFeatureSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidateFeatureSchema(val *ValidateFeatureSchema) *NullableValidateFeatureSchema {
	return &NullableValidateFeatureSchema{value: val, isSet: true}
}

func (v NullableValidateFeatureSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidateFeatureSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
