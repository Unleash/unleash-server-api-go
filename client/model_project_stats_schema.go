/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ProjectStatsSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectStatsSchema{}

// ProjectStatsSchema Statistics for a project, including the average time to production, number of features created, the project activity and more.  Stats are divided into current and previous **windows**. - The **current window** is the past 30 days. - The **previous window** is the 30 days **before** the current window (from 60 to 30 days ago)
type ProjectStatsSchema struct {
	// The average time from when a feature was created to when it was enabled in the \"production\" environment during the current window
	AvgTimeToProdCurrentWindow float32 `json:"avgTimeToProdCurrentWindow"`
	// The number of feature toggles created during the current window
	CreatedCurrentWindow float32 `json:"createdCurrentWindow"`
	// The number of feature toggles created during the previous window
	CreatedPastWindow float32 `json:"createdPastWindow"`
	// The number of feature toggles that were archived during the current window
	ArchivedCurrentWindow float32 `json:"archivedCurrentWindow"`
	// The number of feature toggles that were archived during the previous window
	ArchivedPastWindow float32 `json:"archivedPastWindow"`
	// The number of project events that occurred during the current window
	ProjectActivityCurrentWindow float32 `json:"projectActivityCurrentWindow"`
	// The number of project events that occurred during the previous window
	ProjectActivityPastWindow float32 `json:"projectActivityPastWindow"`
	// The number of members that were added to the project during the current window
	ProjectMembersAddedCurrentWindow float32 `json:"projectMembersAddedCurrentWindow"`
}

// NewProjectStatsSchema instantiates a new ProjectStatsSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectStatsSchema(avgTimeToProdCurrentWindow float32, createdCurrentWindow float32, createdPastWindow float32, archivedCurrentWindow float32, archivedPastWindow float32, projectActivityCurrentWindow float32, projectActivityPastWindow float32, projectMembersAddedCurrentWindow float32) *ProjectStatsSchema {
	this := ProjectStatsSchema{}
	this.AvgTimeToProdCurrentWindow = avgTimeToProdCurrentWindow
	this.CreatedCurrentWindow = createdCurrentWindow
	this.CreatedPastWindow = createdPastWindow
	this.ArchivedCurrentWindow = archivedCurrentWindow
	this.ArchivedPastWindow = archivedPastWindow
	this.ProjectActivityCurrentWindow = projectActivityCurrentWindow
	this.ProjectActivityPastWindow = projectActivityPastWindow
	this.ProjectMembersAddedCurrentWindow = projectMembersAddedCurrentWindow
	return &this
}

// NewProjectStatsSchemaWithDefaults instantiates a new ProjectStatsSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectStatsSchemaWithDefaults() *ProjectStatsSchema {
	this := ProjectStatsSchema{}
	return &this
}

// GetAvgTimeToProdCurrentWindow returns the AvgTimeToProdCurrentWindow field value
func (o *ProjectStatsSchema) GetAvgTimeToProdCurrentWindow() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AvgTimeToProdCurrentWindow
}

// GetAvgTimeToProdCurrentWindowOk returns a tuple with the AvgTimeToProdCurrentWindow field value
// and a boolean to check if the value has been set.
func (o *ProjectStatsSchema) GetAvgTimeToProdCurrentWindowOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvgTimeToProdCurrentWindow, true
}

// SetAvgTimeToProdCurrentWindow sets field value
func (o *ProjectStatsSchema) SetAvgTimeToProdCurrentWindow(v float32) {
	o.AvgTimeToProdCurrentWindow = v
}

// GetCreatedCurrentWindow returns the CreatedCurrentWindow field value
func (o *ProjectStatsSchema) GetCreatedCurrentWindow() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CreatedCurrentWindow
}

// GetCreatedCurrentWindowOk returns a tuple with the CreatedCurrentWindow field value
// and a boolean to check if the value has been set.
func (o *ProjectStatsSchema) GetCreatedCurrentWindowOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedCurrentWindow, true
}

// SetCreatedCurrentWindow sets field value
func (o *ProjectStatsSchema) SetCreatedCurrentWindow(v float32) {
	o.CreatedCurrentWindow = v
}

// GetCreatedPastWindow returns the CreatedPastWindow field value
func (o *ProjectStatsSchema) GetCreatedPastWindow() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CreatedPastWindow
}

// GetCreatedPastWindowOk returns a tuple with the CreatedPastWindow field value
// and a boolean to check if the value has been set.
func (o *ProjectStatsSchema) GetCreatedPastWindowOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedPastWindow, true
}

// SetCreatedPastWindow sets field value
func (o *ProjectStatsSchema) SetCreatedPastWindow(v float32) {
	o.CreatedPastWindow = v
}

// GetArchivedCurrentWindow returns the ArchivedCurrentWindow field value
func (o *ProjectStatsSchema) GetArchivedCurrentWindow() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ArchivedCurrentWindow
}

// GetArchivedCurrentWindowOk returns a tuple with the ArchivedCurrentWindow field value
// and a boolean to check if the value has been set.
func (o *ProjectStatsSchema) GetArchivedCurrentWindowOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ArchivedCurrentWindow, true
}

// SetArchivedCurrentWindow sets field value
func (o *ProjectStatsSchema) SetArchivedCurrentWindow(v float32) {
	o.ArchivedCurrentWindow = v
}

// GetArchivedPastWindow returns the ArchivedPastWindow field value
func (o *ProjectStatsSchema) GetArchivedPastWindow() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ArchivedPastWindow
}

// GetArchivedPastWindowOk returns a tuple with the ArchivedPastWindow field value
// and a boolean to check if the value has been set.
func (o *ProjectStatsSchema) GetArchivedPastWindowOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ArchivedPastWindow, true
}

// SetArchivedPastWindow sets field value
func (o *ProjectStatsSchema) SetArchivedPastWindow(v float32) {
	o.ArchivedPastWindow = v
}

// GetProjectActivityCurrentWindow returns the ProjectActivityCurrentWindow field value
func (o *ProjectStatsSchema) GetProjectActivityCurrentWindow() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ProjectActivityCurrentWindow
}

// GetProjectActivityCurrentWindowOk returns a tuple with the ProjectActivityCurrentWindow field value
// and a boolean to check if the value has been set.
func (o *ProjectStatsSchema) GetProjectActivityCurrentWindowOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectActivityCurrentWindow, true
}

// SetProjectActivityCurrentWindow sets field value
func (o *ProjectStatsSchema) SetProjectActivityCurrentWindow(v float32) {
	o.ProjectActivityCurrentWindow = v
}

// GetProjectActivityPastWindow returns the ProjectActivityPastWindow field value
func (o *ProjectStatsSchema) GetProjectActivityPastWindow() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ProjectActivityPastWindow
}

// GetProjectActivityPastWindowOk returns a tuple with the ProjectActivityPastWindow field value
// and a boolean to check if the value has been set.
func (o *ProjectStatsSchema) GetProjectActivityPastWindowOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectActivityPastWindow, true
}

// SetProjectActivityPastWindow sets field value
func (o *ProjectStatsSchema) SetProjectActivityPastWindow(v float32) {
	o.ProjectActivityPastWindow = v
}

// GetProjectMembersAddedCurrentWindow returns the ProjectMembersAddedCurrentWindow field value
func (o *ProjectStatsSchema) GetProjectMembersAddedCurrentWindow() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ProjectMembersAddedCurrentWindow
}

// GetProjectMembersAddedCurrentWindowOk returns a tuple with the ProjectMembersAddedCurrentWindow field value
// and a boolean to check if the value has been set.
func (o *ProjectStatsSchema) GetProjectMembersAddedCurrentWindowOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectMembersAddedCurrentWindow, true
}

// SetProjectMembersAddedCurrentWindow sets field value
func (o *ProjectStatsSchema) SetProjectMembersAddedCurrentWindow(v float32) {
	o.ProjectMembersAddedCurrentWindow = v
}

func (o ProjectStatsSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectStatsSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["avgTimeToProdCurrentWindow"] = o.AvgTimeToProdCurrentWindow
	toSerialize["createdCurrentWindow"] = o.CreatedCurrentWindow
	toSerialize["createdPastWindow"] = o.CreatedPastWindow
	toSerialize["archivedCurrentWindow"] = o.ArchivedCurrentWindow
	toSerialize["archivedPastWindow"] = o.ArchivedPastWindow
	toSerialize["projectActivityCurrentWindow"] = o.ProjectActivityCurrentWindow
	toSerialize["projectActivityPastWindow"] = o.ProjectActivityPastWindow
	toSerialize["projectMembersAddedCurrentWindow"] = o.ProjectMembersAddedCurrentWindow
	return toSerialize, nil
}

type NullableProjectStatsSchema struct {
	value *ProjectStatsSchema
	isSet bool
}

func (v NullableProjectStatsSchema) Get() *ProjectStatsSchema {
	return v.value
}

func (v *NullableProjectStatsSchema) Set(val *ProjectStatsSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectStatsSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectStatsSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectStatsSchema(val *ProjectStatsSchema) *NullableProjectStatsSchema {
	return &NullableProjectStatsSchema{value: val, isSet: true}
}

func (v NullableProjectStatsSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectStatsSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
