/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the CreateApiTokenSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApiTokenSchema{}

// CreateApiTokenSchema struct for CreateApiTokenSchema
type CreateApiTokenSchema struct {
	Secret *string `json:"secret,omitempty"`
	// One of client, admin, frontend
	Type        string       `json:"type"`
	Environment *string      `json:"environment,omitempty"`
	Project     *string      `json:"project,omitempty"`
	Projects    []string     `json:"projects,omitempty"`
	ExpiresAt   NullableTime `json:"expiresAt,omitempty"`
}

// NewCreateApiTokenSchema instantiates a new CreateApiTokenSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApiTokenSchema(type_ string) *CreateApiTokenSchema {
	this := CreateApiTokenSchema{}
	return &this
}

// NewCreateApiTokenSchemaWithDefaults instantiates a new CreateApiTokenSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApiTokenSchemaWithDefaults() *CreateApiTokenSchema {
	this := CreateApiTokenSchema{}
	return &this
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *CreateApiTokenSchema) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApiTokenSchema) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *CreateApiTokenSchema) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *CreateApiTokenSchema) SetSecret(v string) {
	o.Secret = &v
}

// GetType returns the Type field value
func (o *CreateApiTokenSchema) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateApiTokenSchema) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateApiTokenSchema) SetType(v string) {
	o.Type = v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *CreateApiTokenSchema) GetEnvironment() string {
	if o == nil || IsNil(o.Environment) {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApiTokenSchema) GetEnvironmentOk() (*string, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *CreateApiTokenSchema) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *CreateApiTokenSchema) SetEnvironment(v string) {
	o.Environment = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *CreateApiTokenSchema) GetProject() string {
	if o == nil || IsNil(o.Project) {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApiTokenSchema) GetProjectOk() (*string, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *CreateApiTokenSchema) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *CreateApiTokenSchema) SetProject(v string) {
	o.Project = &v
}

// GetProjects returns the Projects field value if set, zero value otherwise.
func (o *CreateApiTokenSchema) GetProjects() []string {
	if o == nil || IsNil(o.Projects) {
		var ret []string
		return ret
	}
	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApiTokenSchema) GetProjectsOk() ([]string, bool) {
	if o == nil || IsNil(o.Projects) {
		return nil, false
	}
	return o.Projects, true
}

// HasProjects returns a boolean if a field has been set.
func (o *CreateApiTokenSchema) HasProjects() bool {
	if o != nil && !IsNil(o.Projects) {
		return true
	}

	return false
}

// SetProjects gets a reference to the given []string and assigns it to the Projects field.
func (o *CreateApiTokenSchema) SetProjects(v []string) {
	o.Projects = v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApiTokenSchema) GetExpiresAt() time.Time {
	if o == nil || IsNil(o.ExpiresAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt.Get()
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApiTokenSchema) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresAt.Get(), o.ExpiresAt.IsSet()
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *CreateApiTokenSchema) HasExpiresAt() bool {
	if o != nil && o.ExpiresAt.IsSet() {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given NullableTime and assigns it to the ExpiresAt field.
func (o *CreateApiTokenSchema) SetExpiresAt(v time.Time) {
	o.ExpiresAt.Set(&v)
}

// SetExpiresAtNil sets the value for ExpiresAt to be an explicit nil
func (o *CreateApiTokenSchema) SetExpiresAtNil() {
	o.ExpiresAt.Set(nil)
}

// UnsetExpiresAt ensures that no value is present for ExpiresAt, not even an explicit nil
func (o *CreateApiTokenSchema) UnsetExpiresAt() {
	o.ExpiresAt.Unset()
}

func (o CreateApiTokenSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApiTokenSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.Projects) {
		toSerialize["projects"] = o.Projects
	}
	if o.ExpiresAt.IsSet() {
		toSerialize["expiresAt"] = o.ExpiresAt.Get()
	}
	return toSerialize, nil
}

type NullableCreateApiTokenSchema struct {
	value *CreateApiTokenSchema
	isSet bool
}

func (v NullableCreateApiTokenSchema) Get() *CreateApiTokenSchema {
	return v.value
}

func (v *NullableCreateApiTokenSchema) Set(val *CreateApiTokenSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApiTokenSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApiTokenSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApiTokenSchema(val *CreateApiTokenSchema) *NullableCreateApiTokenSchema {
	return &NullableCreateApiTokenSchema{value: val, isSet: true}
}

func (v NullableCreateApiTokenSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApiTokenSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
