/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.4.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ProjectAddRoleAccessSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectAddRoleAccessSchema{}

// ProjectAddRoleAccessSchema An object containing a collection of users and a collection of groups.
type ProjectAddRoleAccessSchema struct {
	// A list of groups IDs
	Groups []ProjectAddRoleAccessSchemaGroupsInner `json:"groups"`
	// A list of user IDs
	Users []ProjectAddRoleAccessSchemaUsersInner `json:"users"`
}

// NewProjectAddRoleAccessSchema instantiates a new ProjectAddRoleAccessSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectAddRoleAccessSchema(groups []ProjectAddRoleAccessSchemaGroupsInner, users []ProjectAddRoleAccessSchemaUsersInner) *ProjectAddRoleAccessSchema {
	this := ProjectAddRoleAccessSchema{}
	this.Groups = groups
	this.Users = users
	return &this
}

// NewProjectAddRoleAccessSchemaWithDefaults instantiates a new ProjectAddRoleAccessSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectAddRoleAccessSchemaWithDefaults() *ProjectAddRoleAccessSchema {
	this := ProjectAddRoleAccessSchema{}
	return &this
}

// GetGroups returns the Groups field value
func (o *ProjectAddRoleAccessSchema) GetGroups() []ProjectAddRoleAccessSchemaGroupsInner {
	if o == nil {
		var ret []ProjectAddRoleAccessSchemaGroupsInner
		return ret
	}

	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value
// and a boolean to check if the value has been set.
func (o *ProjectAddRoleAccessSchema) GetGroupsOk() ([]ProjectAddRoleAccessSchemaGroupsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Groups, true
}

// SetGroups sets field value
func (o *ProjectAddRoleAccessSchema) SetGroups(v []ProjectAddRoleAccessSchemaGroupsInner) {
	o.Groups = v
}

// GetUsers returns the Users field value
func (o *ProjectAddRoleAccessSchema) GetUsers() []ProjectAddRoleAccessSchemaUsersInner {
	if o == nil {
		var ret []ProjectAddRoleAccessSchemaUsersInner
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *ProjectAddRoleAccessSchema) GetUsersOk() ([]ProjectAddRoleAccessSchemaUsersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *ProjectAddRoleAccessSchema) SetUsers(v []ProjectAddRoleAccessSchemaUsersInner) {
	o.Users = v
}

func (o ProjectAddRoleAccessSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectAddRoleAccessSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["groups"] = o.Groups
	toSerialize["users"] = o.Users
	return toSerialize, nil
}

type NullableProjectAddRoleAccessSchema struct {
	value *ProjectAddRoleAccessSchema
	isSet bool
}

func (v NullableProjectAddRoleAccessSchema) Get() *ProjectAddRoleAccessSchema {
	return v.value
}

func (v *NullableProjectAddRoleAccessSchema) Set(val *ProjectAddRoleAccessSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectAddRoleAccessSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectAddRoleAccessSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectAddRoleAccessSchema(val *ProjectAddRoleAccessSchema) *NullableProjectAddRoleAccessSchema {
	return &NullableProjectAddRoleAccessSchema{value: val, isSet: true}
}

func (v NullableProjectAddRoleAccessSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectAddRoleAccessSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
