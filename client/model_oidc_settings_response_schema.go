/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 6.1.12+main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the OidcSettingsResponseSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OidcSettingsResponseSchema{}

// OidcSettingsResponseSchema Response for OpenID Connect settings
type OidcSettingsResponseSchema struct {
	// Whether to enable or disable OpenID Connect for this instance
	Enabled *bool `json:"enabled,omitempty"`
	// The [.well-known OpenID discover URL](https://swagger.io/docs/specification/authentication/openid-connect-discovery/)
	DiscoverUrl *string `json:"discoverUrl,omitempty"`
	// The OIDC client ID of this application.
	ClientId *string `json:"clientId,omitempty"`
	// Shared secret from OpenID server. Used to authenticate login requests
	Secret *string `json:"secret,omitempty"`
	// Auto create users based on email addresses from login tokens
	AutoCreate *bool `json:"autoCreate,omitempty"`
	// Support Single sign out when user clicks logout in Unleash. If `true` user is signed out of all OpenID Connect sessions against the clientId they may have active
	EnableSingleSignOut *bool `json:"enableSingleSignOut,omitempty"`
	// [Default role](https://docs.getunleash.io/reference/rbac#standard-roles) granted to users auto-created from email. Only relevant if autoCreate is `true`
	DefaultRootRole *string `json:"defaultRootRole,omitempty"`
	// Assign this root role to auto created users. Should be a role ID and takes precedence over `defaultRootRole`.
	DefaultRootRoleId *float32 `json:"defaultRootRoleId,omitempty"`
	// Comma separated list of email domains that are automatically approved for an account in the server. Only relevant if autoCreate is `true`
	EmailDomains *string `json:"emailDomains,omitempty"`
	// Authentication Context Class Reference, used to request extra values in the acr claim returned from the server. If multiple values are required, they should be space separated.   Consult [the OIDC reference](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) for more information
	AcrValues *string `json:"acrValues,omitempty"`
	// The signing algorithm used to sign our token. Refer to the [JWT signatures](https://jwt.io/introduction) documentation for more information.
	IdTokenSigningAlgorithm *string `json:"idTokenSigningAlgorithm,omitempty"`
	// Should we enable group syncing. Refer to the documentation [Group syncing](https://docs.getunleash.io/how-to/how-to-set-up-group-sso-sync)
	EnableGroupSyncing *bool `json:"enableGroupSyncing,omitempty"`
	// Specifies the path in the OIDC token response to read which groups the user belongs to from.
	GroupJsonPath *string `json:"groupJsonPath,omitempty"`
	// When enabled Unleash will also request the 'groups' scope as part of the login request.
	AddGroupsScope       *bool `json:"addGroupsScope,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OidcSettingsResponseSchema OidcSettingsResponseSchema

// NewOidcSettingsResponseSchema instantiates a new OidcSettingsResponseSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOidcSettingsResponseSchema() *OidcSettingsResponseSchema {
	this := OidcSettingsResponseSchema{}
	return &this
}

// NewOidcSettingsResponseSchemaWithDefaults instantiates a new OidcSettingsResponseSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOidcSettingsResponseSchemaWithDefaults() *OidcSettingsResponseSchema {
	this := OidcSettingsResponseSchema{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *OidcSettingsResponseSchema) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcSettingsResponseSchema) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *OidcSettingsResponseSchema) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *OidcSettingsResponseSchema) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetDiscoverUrl returns the DiscoverUrl field value if set, zero value otherwise.
func (o *OidcSettingsResponseSchema) GetDiscoverUrl() string {
	if o == nil || IsNil(o.DiscoverUrl) {
		var ret string
		return ret
	}
	return *o.DiscoverUrl
}

// GetDiscoverUrlOk returns a tuple with the DiscoverUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcSettingsResponseSchema) GetDiscoverUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DiscoverUrl) {
		return nil, false
	}
	return o.DiscoverUrl, true
}

// HasDiscoverUrl returns a boolean if a field has been set.
func (o *OidcSettingsResponseSchema) HasDiscoverUrl() bool {
	if o != nil && !IsNil(o.DiscoverUrl) {
		return true
	}

	return false
}

// SetDiscoverUrl gets a reference to the given string and assigns it to the DiscoverUrl field.
func (o *OidcSettingsResponseSchema) SetDiscoverUrl(v string) {
	o.DiscoverUrl = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *OidcSettingsResponseSchema) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcSettingsResponseSchema) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *OidcSettingsResponseSchema) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *OidcSettingsResponseSchema) SetClientId(v string) {
	o.ClientId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *OidcSettingsResponseSchema) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcSettingsResponseSchema) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *OidcSettingsResponseSchema) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *OidcSettingsResponseSchema) SetSecret(v string) {
	o.Secret = &v
}

// GetAutoCreate returns the AutoCreate field value if set, zero value otherwise.
func (o *OidcSettingsResponseSchema) GetAutoCreate() bool {
	if o == nil || IsNil(o.AutoCreate) {
		var ret bool
		return ret
	}
	return *o.AutoCreate
}

// GetAutoCreateOk returns a tuple with the AutoCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcSettingsResponseSchema) GetAutoCreateOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoCreate) {
		return nil, false
	}
	return o.AutoCreate, true
}

// HasAutoCreate returns a boolean if a field has been set.
func (o *OidcSettingsResponseSchema) HasAutoCreate() bool {
	if o != nil && !IsNil(o.AutoCreate) {
		return true
	}

	return false
}

// SetAutoCreate gets a reference to the given bool and assigns it to the AutoCreate field.
func (o *OidcSettingsResponseSchema) SetAutoCreate(v bool) {
	o.AutoCreate = &v
}

// GetEnableSingleSignOut returns the EnableSingleSignOut field value if set, zero value otherwise.
func (o *OidcSettingsResponseSchema) GetEnableSingleSignOut() bool {
	if o == nil || IsNil(o.EnableSingleSignOut) {
		var ret bool
		return ret
	}
	return *o.EnableSingleSignOut
}

// GetEnableSingleSignOutOk returns a tuple with the EnableSingleSignOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcSettingsResponseSchema) GetEnableSingleSignOutOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSingleSignOut) {
		return nil, false
	}
	return o.EnableSingleSignOut, true
}

// HasEnableSingleSignOut returns a boolean if a field has been set.
func (o *OidcSettingsResponseSchema) HasEnableSingleSignOut() bool {
	if o != nil && !IsNil(o.EnableSingleSignOut) {
		return true
	}

	return false
}

// SetEnableSingleSignOut gets a reference to the given bool and assigns it to the EnableSingleSignOut field.
func (o *OidcSettingsResponseSchema) SetEnableSingleSignOut(v bool) {
	o.EnableSingleSignOut = &v
}

// GetDefaultRootRole returns the DefaultRootRole field value if set, zero value otherwise.
func (o *OidcSettingsResponseSchema) GetDefaultRootRole() string {
	if o == nil || IsNil(o.DefaultRootRole) {
		var ret string
		return ret
	}
	return *o.DefaultRootRole
}

// GetDefaultRootRoleOk returns a tuple with the DefaultRootRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcSettingsResponseSchema) GetDefaultRootRoleOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultRootRole) {
		return nil, false
	}
	return o.DefaultRootRole, true
}

// HasDefaultRootRole returns a boolean if a field has been set.
func (o *OidcSettingsResponseSchema) HasDefaultRootRole() bool {
	if o != nil && !IsNil(o.DefaultRootRole) {
		return true
	}

	return false
}

// SetDefaultRootRole gets a reference to the given string and assigns it to the DefaultRootRole field.
func (o *OidcSettingsResponseSchema) SetDefaultRootRole(v string) {
	o.DefaultRootRole = &v
}

// GetDefaultRootRoleId returns the DefaultRootRoleId field value if set, zero value otherwise.
func (o *OidcSettingsResponseSchema) GetDefaultRootRoleId() float32 {
	if o == nil || IsNil(o.DefaultRootRoleId) {
		var ret float32
		return ret
	}
	return *o.DefaultRootRoleId
}

// GetDefaultRootRoleIdOk returns a tuple with the DefaultRootRoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcSettingsResponseSchema) GetDefaultRootRoleIdOk() (*float32, bool) {
	if o == nil || IsNil(o.DefaultRootRoleId) {
		return nil, false
	}
	return o.DefaultRootRoleId, true
}

// HasDefaultRootRoleId returns a boolean if a field has been set.
func (o *OidcSettingsResponseSchema) HasDefaultRootRoleId() bool {
	if o != nil && !IsNil(o.DefaultRootRoleId) {
		return true
	}

	return false
}

// SetDefaultRootRoleId gets a reference to the given float32 and assigns it to the DefaultRootRoleId field.
func (o *OidcSettingsResponseSchema) SetDefaultRootRoleId(v float32) {
	o.DefaultRootRoleId = &v
}

// GetEmailDomains returns the EmailDomains field value if set, zero value otherwise.
func (o *OidcSettingsResponseSchema) GetEmailDomains() string {
	if o == nil || IsNil(o.EmailDomains) {
		var ret string
		return ret
	}
	return *o.EmailDomains
}

// GetEmailDomainsOk returns a tuple with the EmailDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcSettingsResponseSchema) GetEmailDomainsOk() (*string, bool) {
	if o == nil || IsNil(o.EmailDomains) {
		return nil, false
	}
	return o.EmailDomains, true
}

// HasEmailDomains returns a boolean if a field has been set.
func (o *OidcSettingsResponseSchema) HasEmailDomains() bool {
	if o != nil && !IsNil(o.EmailDomains) {
		return true
	}

	return false
}

// SetEmailDomains gets a reference to the given string and assigns it to the EmailDomains field.
func (o *OidcSettingsResponseSchema) SetEmailDomains(v string) {
	o.EmailDomains = &v
}

// GetAcrValues returns the AcrValues field value if set, zero value otherwise.
func (o *OidcSettingsResponseSchema) GetAcrValues() string {
	if o == nil || IsNil(o.AcrValues) {
		var ret string
		return ret
	}
	return *o.AcrValues
}

// GetAcrValuesOk returns a tuple with the AcrValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcSettingsResponseSchema) GetAcrValuesOk() (*string, bool) {
	if o == nil || IsNil(o.AcrValues) {
		return nil, false
	}
	return o.AcrValues, true
}

// HasAcrValues returns a boolean if a field has been set.
func (o *OidcSettingsResponseSchema) HasAcrValues() bool {
	if o != nil && !IsNil(o.AcrValues) {
		return true
	}

	return false
}

// SetAcrValues gets a reference to the given string and assigns it to the AcrValues field.
func (o *OidcSettingsResponseSchema) SetAcrValues(v string) {
	o.AcrValues = &v
}

// GetIdTokenSigningAlgorithm returns the IdTokenSigningAlgorithm field value if set, zero value otherwise.
func (o *OidcSettingsResponseSchema) GetIdTokenSigningAlgorithm() string {
	if o == nil || IsNil(o.IdTokenSigningAlgorithm) {
		var ret string
		return ret
	}
	return *o.IdTokenSigningAlgorithm
}

// GetIdTokenSigningAlgorithmOk returns a tuple with the IdTokenSigningAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcSettingsResponseSchema) GetIdTokenSigningAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.IdTokenSigningAlgorithm) {
		return nil, false
	}
	return o.IdTokenSigningAlgorithm, true
}

// HasIdTokenSigningAlgorithm returns a boolean if a field has been set.
func (o *OidcSettingsResponseSchema) HasIdTokenSigningAlgorithm() bool {
	if o != nil && !IsNil(o.IdTokenSigningAlgorithm) {
		return true
	}

	return false
}

// SetIdTokenSigningAlgorithm gets a reference to the given string and assigns it to the IdTokenSigningAlgorithm field.
func (o *OidcSettingsResponseSchema) SetIdTokenSigningAlgorithm(v string) {
	o.IdTokenSigningAlgorithm = &v
}

// GetEnableGroupSyncing returns the EnableGroupSyncing field value if set, zero value otherwise.
func (o *OidcSettingsResponseSchema) GetEnableGroupSyncing() bool {
	if o == nil || IsNil(o.EnableGroupSyncing) {
		var ret bool
		return ret
	}
	return *o.EnableGroupSyncing
}

// GetEnableGroupSyncingOk returns a tuple with the EnableGroupSyncing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcSettingsResponseSchema) GetEnableGroupSyncingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableGroupSyncing) {
		return nil, false
	}
	return o.EnableGroupSyncing, true
}

// HasEnableGroupSyncing returns a boolean if a field has been set.
func (o *OidcSettingsResponseSchema) HasEnableGroupSyncing() bool {
	if o != nil && !IsNil(o.EnableGroupSyncing) {
		return true
	}

	return false
}

// SetEnableGroupSyncing gets a reference to the given bool and assigns it to the EnableGroupSyncing field.
func (o *OidcSettingsResponseSchema) SetEnableGroupSyncing(v bool) {
	o.EnableGroupSyncing = &v
}

// GetGroupJsonPath returns the GroupJsonPath field value if set, zero value otherwise.
func (o *OidcSettingsResponseSchema) GetGroupJsonPath() string {
	if o == nil || IsNil(o.GroupJsonPath) {
		var ret string
		return ret
	}
	return *o.GroupJsonPath
}

// GetGroupJsonPathOk returns a tuple with the GroupJsonPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcSettingsResponseSchema) GetGroupJsonPathOk() (*string, bool) {
	if o == nil || IsNil(o.GroupJsonPath) {
		return nil, false
	}
	return o.GroupJsonPath, true
}

// HasGroupJsonPath returns a boolean if a field has been set.
func (o *OidcSettingsResponseSchema) HasGroupJsonPath() bool {
	if o != nil && !IsNil(o.GroupJsonPath) {
		return true
	}

	return false
}

// SetGroupJsonPath gets a reference to the given string and assigns it to the GroupJsonPath field.
func (o *OidcSettingsResponseSchema) SetGroupJsonPath(v string) {
	o.GroupJsonPath = &v
}

// GetAddGroupsScope returns the AddGroupsScope field value if set, zero value otherwise.
func (o *OidcSettingsResponseSchema) GetAddGroupsScope() bool {
	if o == nil || IsNil(o.AddGroupsScope) {
		var ret bool
		return ret
	}
	return *o.AddGroupsScope
}

// GetAddGroupsScopeOk returns a tuple with the AddGroupsScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcSettingsResponseSchema) GetAddGroupsScopeOk() (*bool, bool) {
	if o == nil || IsNil(o.AddGroupsScope) {
		return nil, false
	}
	return o.AddGroupsScope, true
}

// HasAddGroupsScope returns a boolean if a field has been set.
func (o *OidcSettingsResponseSchema) HasAddGroupsScope() bool {
	if o != nil && !IsNil(o.AddGroupsScope) {
		return true
	}

	return false
}

// SetAddGroupsScope gets a reference to the given bool and assigns it to the AddGroupsScope field.
func (o *OidcSettingsResponseSchema) SetAddGroupsScope(v bool) {
	o.AddGroupsScope = &v
}

func (o OidcSettingsResponseSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OidcSettingsResponseSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.DiscoverUrl) {
		toSerialize["discoverUrl"] = o.DiscoverUrl
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !IsNil(o.AutoCreate) {
		toSerialize["autoCreate"] = o.AutoCreate
	}
	if !IsNil(o.EnableSingleSignOut) {
		toSerialize["enableSingleSignOut"] = o.EnableSingleSignOut
	}
	if !IsNil(o.DefaultRootRole) {
		toSerialize["defaultRootRole"] = o.DefaultRootRole
	}
	if !IsNil(o.DefaultRootRoleId) {
		toSerialize["defaultRootRoleId"] = o.DefaultRootRoleId
	}
	if !IsNil(o.EmailDomains) {
		toSerialize["emailDomains"] = o.EmailDomains
	}
	if !IsNil(o.AcrValues) {
		toSerialize["acrValues"] = o.AcrValues
	}
	if !IsNil(o.IdTokenSigningAlgorithm) {
		toSerialize["idTokenSigningAlgorithm"] = o.IdTokenSigningAlgorithm
	}
	if !IsNil(o.EnableGroupSyncing) {
		toSerialize["enableGroupSyncing"] = o.EnableGroupSyncing
	}
	if !IsNil(o.GroupJsonPath) {
		toSerialize["groupJsonPath"] = o.GroupJsonPath
	}
	if !IsNil(o.AddGroupsScope) {
		toSerialize["addGroupsScope"] = o.AddGroupsScope
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OidcSettingsResponseSchema) UnmarshalJSON(data []byte) (err error) {
	varOidcSettingsResponseSchema := _OidcSettingsResponseSchema{}

	err = json.Unmarshal(data, &varOidcSettingsResponseSchema)

	if err != nil {
		return err
	}

	*o = OidcSettingsResponseSchema(varOidcSettingsResponseSchema)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "discoverUrl")
		delete(additionalProperties, "clientId")
		delete(additionalProperties, "secret")
		delete(additionalProperties, "autoCreate")
		delete(additionalProperties, "enableSingleSignOut")
		delete(additionalProperties, "defaultRootRole")
		delete(additionalProperties, "defaultRootRoleId")
		delete(additionalProperties, "emailDomains")
		delete(additionalProperties, "acrValues")
		delete(additionalProperties, "idTokenSigningAlgorithm")
		delete(additionalProperties, "enableGroupSyncing")
		delete(additionalProperties, "groupJsonPath")
		delete(additionalProperties, "addGroupsScope")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOidcSettingsResponseSchema struct {
	value *OidcSettingsResponseSchema
	isSet bool
}

func (v NullableOidcSettingsResponseSchema) Get() *OidcSettingsResponseSchema {
	return v.value
}

func (v *NullableOidcSettingsResponseSchema) Set(val *OidcSettingsResponseSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableOidcSettingsResponseSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableOidcSettingsResponseSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOidcSettingsResponseSchema(val *OidcSettingsResponseSchema) *NullableOidcSettingsResponseSchema {
	return &NullableOidcSettingsResponseSchema{value: val, isSet: true}
}

func (v NullableOidcSettingsResponseSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOidcSettingsResponseSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
