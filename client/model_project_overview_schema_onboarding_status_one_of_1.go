/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 6.7.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// checks if the ProjectOverviewSchemaOnboardingStatusOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectOverviewSchemaOnboardingStatusOneOf1{}

// ProjectOverviewSchemaOnboardingStatusOneOf1 struct for ProjectOverviewSchemaOnboardingStatusOneOf1
type ProjectOverviewSchemaOnboardingStatusOneOf1 struct {
	Status string `json:"status"`
	// The name of the feature flag
	Feature              string `json:"feature"`
	AdditionalProperties map[string]interface{}
}

type _ProjectOverviewSchemaOnboardingStatusOneOf1 ProjectOverviewSchemaOnboardingStatusOneOf1

// NewProjectOverviewSchemaOnboardingStatusOneOf1 instantiates a new ProjectOverviewSchemaOnboardingStatusOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectOverviewSchemaOnboardingStatusOneOf1(status string, feature string) *ProjectOverviewSchemaOnboardingStatusOneOf1 {
	this := ProjectOverviewSchemaOnboardingStatusOneOf1{}
	this.Status = status
	this.Feature = feature
	return &this
}

// NewProjectOverviewSchemaOnboardingStatusOneOf1WithDefaults instantiates a new ProjectOverviewSchemaOnboardingStatusOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectOverviewSchemaOnboardingStatusOneOf1WithDefaults() *ProjectOverviewSchemaOnboardingStatusOneOf1 {
	this := ProjectOverviewSchemaOnboardingStatusOneOf1{}
	return &this
}

// GetStatus returns the Status field value
func (o *ProjectOverviewSchemaOnboardingStatusOneOf1) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ProjectOverviewSchemaOnboardingStatusOneOf1) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ProjectOverviewSchemaOnboardingStatusOneOf1) SetStatus(v string) {
	o.Status = v
}

// GetFeature returns the Feature field value
func (o *ProjectOverviewSchemaOnboardingStatusOneOf1) GetFeature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Feature
}

// GetFeatureOk returns a tuple with the Feature field value
// and a boolean to check if the value has been set.
func (o *ProjectOverviewSchemaOnboardingStatusOneOf1) GetFeatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Feature, true
}

// SetFeature sets field value
func (o *ProjectOverviewSchemaOnboardingStatusOneOf1) SetFeature(v string) {
	o.Feature = v
}

func (o ProjectOverviewSchemaOnboardingStatusOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectOverviewSchemaOnboardingStatusOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["feature"] = o.Feature

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProjectOverviewSchemaOnboardingStatusOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
		"feature",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProjectOverviewSchemaOnboardingStatusOneOf1 := _ProjectOverviewSchemaOnboardingStatusOneOf1{}

	err = json.Unmarshal(data, &varProjectOverviewSchemaOnboardingStatusOneOf1)

	if err != nil {
		return err
	}

	*o = ProjectOverviewSchemaOnboardingStatusOneOf1(varProjectOverviewSchemaOnboardingStatusOneOf1)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "status")
		delete(additionalProperties, "feature")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProjectOverviewSchemaOnboardingStatusOneOf1 struct {
	value *ProjectOverviewSchemaOnboardingStatusOneOf1
	isSet bool
}

func (v NullableProjectOverviewSchemaOnboardingStatusOneOf1) Get() *ProjectOverviewSchemaOnboardingStatusOneOf1 {
	return v.value
}

func (v *NullableProjectOverviewSchemaOnboardingStatusOneOf1) Set(val *ProjectOverviewSchemaOnboardingStatusOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectOverviewSchemaOnboardingStatusOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectOverviewSchemaOnboardingStatusOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectOverviewSchemaOnboardingStatusOneOf1(val *ProjectOverviewSchemaOnboardingStatusOneOf1) *NullableProjectOverviewSchemaOnboardingStatusOneOf1 {
	return &NullableProjectOverviewSchemaOnboardingStatusOneOf1{value: val, isSet: true}
}

func (v NullableProjectOverviewSchemaOnboardingStatusOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectOverviewSchemaOnboardingStatusOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
