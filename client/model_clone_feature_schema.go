/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CloneFeatureSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloneFeatureSchema{}

// CloneFeatureSchema Copy of a feature with a new name
type CloneFeatureSchema struct {
	// The name of the new feature
	Name string `json:"name"`
	// Whether to use the new feature name as its group ID or not. Group ID is used for calculating [stickiness](https://docs.getunleash.io/reference/stickiness#calculation). Defaults to true.
	ReplaceGroupId *bool `json:"replaceGroupId,omitempty"`
}

// NewCloneFeatureSchema instantiates a new CloneFeatureSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloneFeatureSchema(name string) *CloneFeatureSchema {
	this := CloneFeatureSchema{}
	this.Name = name
	return &this
}

// NewCloneFeatureSchemaWithDefaults instantiates a new CloneFeatureSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloneFeatureSchemaWithDefaults() *CloneFeatureSchema {
	this := CloneFeatureSchema{}
	return &this
}

// GetName returns the Name field value
func (o *CloneFeatureSchema) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CloneFeatureSchema) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CloneFeatureSchema) SetName(v string) {
	o.Name = v
}

// GetReplaceGroupId returns the ReplaceGroupId field value if set, zero value otherwise.
func (o *CloneFeatureSchema) GetReplaceGroupId() bool {
	if o == nil || IsNil(o.ReplaceGroupId) {
		var ret bool
		return ret
	}
	return *o.ReplaceGroupId
}

// GetReplaceGroupIdOk returns a tuple with the ReplaceGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneFeatureSchema) GetReplaceGroupIdOk() (*bool, bool) {
	if o == nil || IsNil(o.ReplaceGroupId) {
		return nil, false
	}
	return o.ReplaceGroupId, true
}

// HasReplaceGroupId returns a boolean if a field has been set.
func (o *CloneFeatureSchema) HasReplaceGroupId() bool {
	if o != nil && !IsNil(o.ReplaceGroupId) {
		return true
	}

	return false
}

// SetReplaceGroupId gets a reference to the given bool and assigns it to the ReplaceGroupId field.
func (o *CloneFeatureSchema) SetReplaceGroupId(v bool) {
	o.ReplaceGroupId = &v
}

func (o CloneFeatureSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloneFeatureSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.ReplaceGroupId) {
		toSerialize["replaceGroupId"] = o.ReplaceGroupId
	}
	return toSerialize, nil
}

type NullableCloneFeatureSchema struct {
	value *CloneFeatureSchema
	isSet bool
}

func (v NullableCloneFeatureSchema) Get() *CloneFeatureSchema {
	return v.value
}

func (v *NullableCloneFeatureSchema) Set(val *CloneFeatureSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableCloneFeatureSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableCloneFeatureSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloneFeatureSchema(val *CloneFeatureSchema) *NullableCloneFeatureSchema {
	return &NullableCloneFeatureSchema{value: val, isSet: true}
}

func (v NullableCloneFeatureSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloneFeatureSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
