/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the ChangeRequestEventSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChangeRequestEventSchema{}

// ChangeRequestEventSchema struct for ChangeRequestEventSchema
type ChangeRequestEventSchema struct {
	Id        float32                            `json:"id"`
	Action    string                             `json:"action"`
	Conflict  *string                            `json:"conflict,omitempty"`
	Payload   ChangeRequestEventSchemaPayload    `json:"payload"`
	UpdatedBy *string                            `json:"updatedBy,omitempty"`
	CreatedBy *ChangeRequestEventSchemaCreatedBy `json:"createdBy,omitempty"`
	CreatedAt *time.Time                         `json:"createdAt,omitempty"`
}

// NewChangeRequestEventSchema instantiates a new ChangeRequestEventSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeRequestEventSchema(id float32, action string, payload ChangeRequestEventSchemaPayload) *ChangeRequestEventSchema {
	this := ChangeRequestEventSchema{}
	this.Id = id
	this.Action = action
	this.Payload = payload
	return &this
}

// NewChangeRequestEventSchemaWithDefaults instantiates a new ChangeRequestEventSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeRequestEventSchemaWithDefaults() *ChangeRequestEventSchema {
	this := ChangeRequestEventSchema{}
	return &this
}

// GetId returns the Id field value
func (o *ChangeRequestEventSchema) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestEventSchema) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ChangeRequestEventSchema) SetId(v float32) {
	o.Id = v
}

// GetAction returns the Action field value
func (o *ChangeRequestEventSchema) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestEventSchema) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ChangeRequestEventSchema) SetAction(v string) {
	o.Action = v
}

// GetConflict returns the Conflict field value if set, zero value otherwise.
func (o *ChangeRequestEventSchema) GetConflict() string {
	if o == nil || IsNil(o.Conflict) {
		var ret string
		return ret
	}
	return *o.Conflict
}

// GetConflictOk returns a tuple with the Conflict field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeRequestEventSchema) GetConflictOk() (*string, bool) {
	if o == nil || IsNil(o.Conflict) {
		return nil, false
	}
	return o.Conflict, true
}

// HasConflict returns a boolean if a field has been set.
func (o *ChangeRequestEventSchema) HasConflict() bool {
	if o != nil && !IsNil(o.Conflict) {
		return true
	}

	return false
}

// SetConflict gets a reference to the given string and assigns it to the Conflict field.
func (o *ChangeRequestEventSchema) SetConflict(v string) {
	o.Conflict = &v
}

// GetPayload returns the Payload field value
func (o *ChangeRequestEventSchema) GetPayload() ChangeRequestEventSchemaPayload {
	if o == nil {
		var ret ChangeRequestEventSchemaPayload
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestEventSchema) GetPayloadOk() (*ChangeRequestEventSchemaPayload, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *ChangeRequestEventSchema) SetPayload(v ChangeRequestEventSchemaPayload) {
	o.Payload = v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *ChangeRequestEventSchema) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeRequestEventSchema) GetUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *ChangeRequestEventSchema) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *ChangeRequestEventSchema) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ChangeRequestEventSchema) GetCreatedBy() ChangeRequestEventSchemaCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret ChangeRequestEventSchemaCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeRequestEventSchema) GetCreatedByOk() (*ChangeRequestEventSchemaCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ChangeRequestEventSchema) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given ChangeRequestEventSchemaCreatedBy and assigns it to the CreatedBy field.
func (o *ChangeRequestEventSchema) SetCreatedBy(v ChangeRequestEventSchemaCreatedBy) {
	o.CreatedBy = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ChangeRequestEventSchema) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeRequestEventSchema) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ChangeRequestEventSchema) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ChangeRequestEventSchema) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o ChangeRequestEventSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChangeRequestEventSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["action"] = o.Action
	if !IsNil(o.Conflict) {
		toSerialize["conflict"] = o.Conflict
	}
	toSerialize["payload"] = o.Payload
	if !IsNil(o.UpdatedBy) {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableChangeRequestEventSchema struct {
	value *ChangeRequestEventSchema
	isSet bool
}

func (v NullableChangeRequestEventSchema) Get() *ChangeRequestEventSchema {
	return v.value
}

func (v *NullableChangeRequestEventSchema) Set(val *ChangeRequestEventSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeRequestEventSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeRequestEventSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeRequestEventSchema(val *ChangeRequestEventSchema) *NullableChangeRequestEventSchema {
	return &NullableChangeRequestEventSchema{value: val, isSet: true}
}

func (v NullableChangeRequestEventSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeRequestEventSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
