/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.4.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the TelemetrySettingsSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TelemetrySettingsSchema{}

// TelemetrySettingsSchema Contains information about which settings are configured for version info collection and feature usage collection.
type TelemetrySettingsSchema struct {
	// Whether collection of version info is enabled/active.
	VersionInfoCollectionEnabled bool `json:"versionInfoCollectionEnabled"`
	// Whether collection of feature usage metrics is enabled/active.
	FeatureInfoCollectionEnabled bool `json:"featureInfoCollectionEnabled"`
}

// NewTelemetrySettingsSchema instantiates a new TelemetrySettingsSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTelemetrySettingsSchema(versionInfoCollectionEnabled bool, featureInfoCollectionEnabled bool) *TelemetrySettingsSchema {
	this := TelemetrySettingsSchema{}
	this.VersionInfoCollectionEnabled = versionInfoCollectionEnabled
	this.FeatureInfoCollectionEnabled = featureInfoCollectionEnabled
	return &this
}

// NewTelemetrySettingsSchemaWithDefaults instantiates a new TelemetrySettingsSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTelemetrySettingsSchemaWithDefaults() *TelemetrySettingsSchema {
	this := TelemetrySettingsSchema{}
	return &this
}

// GetVersionInfoCollectionEnabled returns the VersionInfoCollectionEnabled field value
func (o *TelemetrySettingsSchema) GetVersionInfoCollectionEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.VersionInfoCollectionEnabled
}

// GetVersionInfoCollectionEnabledOk returns a tuple with the VersionInfoCollectionEnabled field value
// and a boolean to check if the value has been set.
func (o *TelemetrySettingsSchema) GetVersionInfoCollectionEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VersionInfoCollectionEnabled, true
}

// SetVersionInfoCollectionEnabled sets field value
func (o *TelemetrySettingsSchema) SetVersionInfoCollectionEnabled(v bool) {
	o.VersionInfoCollectionEnabled = v
}

// GetFeatureInfoCollectionEnabled returns the FeatureInfoCollectionEnabled field value
func (o *TelemetrySettingsSchema) GetFeatureInfoCollectionEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.FeatureInfoCollectionEnabled
}

// GetFeatureInfoCollectionEnabledOk returns a tuple with the FeatureInfoCollectionEnabled field value
// and a boolean to check if the value has been set.
func (o *TelemetrySettingsSchema) GetFeatureInfoCollectionEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeatureInfoCollectionEnabled, true
}

// SetFeatureInfoCollectionEnabled sets field value
func (o *TelemetrySettingsSchema) SetFeatureInfoCollectionEnabled(v bool) {
	o.FeatureInfoCollectionEnabled = v
}

func (o TelemetrySettingsSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TelemetrySettingsSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["versionInfoCollectionEnabled"] = o.VersionInfoCollectionEnabled
	toSerialize["featureInfoCollectionEnabled"] = o.FeatureInfoCollectionEnabled
	return toSerialize, nil
}

type NullableTelemetrySettingsSchema struct {
	value *TelemetrySettingsSchema
	isSet bool
}

func (v NullableTelemetrySettingsSchema) Get() *TelemetrySettingsSchema {
	return v.value
}

func (v *NullableTelemetrySettingsSchema) Set(val *TelemetrySettingsSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableTelemetrySettingsSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableTelemetrySettingsSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTelemetrySettingsSchema(val *TelemetrySettingsSchema) *NullableTelemetrySettingsSchema {
	return &NullableTelemetrySettingsSchema{value: val, isSet: true}
}

func (v NullableTelemetrySettingsSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTelemetrySettingsSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
