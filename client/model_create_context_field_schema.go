/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.4.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CreateContextFieldSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateContextFieldSchema{}

// CreateContextFieldSchema Data used to create a context field configuration.
type CreateContextFieldSchema struct {
	// A description of the context field
	Description *string `json:"description,omitempty"`
	// `true` if this field should be available for use with [custom stickiness](https://docs.getunleash.io/reference/stickiness#custom-stickiness), otherwise `false`
	Stickiness *bool `json:"stickiness,omitempty"`
	// How this context field should be sorted if no other sort order is selected
	SortOrder *int32 `json:"sortOrder,omitempty"`
	// A list of allowed values for this context field
	LegalValues []LegalValueSchema `json:"legalValues,omitempty"`
	// The name of the context field.
	Name string `json:"name"`
}

// NewCreateContextFieldSchema instantiates a new CreateContextFieldSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateContextFieldSchema(name string) *CreateContextFieldSchema {
	this := CreateContextFieldSchema{}
	this.Name = name
	return &this
}

// NewCreateContextFieldSchemaWithDefaults instantiates a new CreateContextFieldSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateContextFieldSchemaWithDefaults() *CreateContextFieldSchema {
	this := CreateContextFieldSchema{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateContextFieldSchema) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContextFieldSchema) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateContextFieldSchema) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateContextFieldSchema) SetDescription(v string) {
	o.Description = &v
}

// GetStickiness returns the Stickiness field value if set, zero value otherwise.
func (o *CreateContextFieldSchema) GetStickiness() bool {
	if o == nil || IsNil(o.Stickiness) {
		var ret bool
		return ret
	}
	return *o.Stickiness
}

// GetStickinessOk returns a tuple with the Stickiness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContextFieldSchema) GetStickinessOk() (*bool, bool) {
	if o == nil || IsNil(o.Stickiness) {
		return nil, false
	}
	return o.Stickiness, true
}

// HasStickiness returns a boolean if a field has been set.
func (o *CreateContextFieldSchema) HasStickiness() bool {
	if o != nil && !IsNil(o.Stickiness) {
		return true
	}

	return false
}

// SetStickiness gets a reference to the given bool and assigns it to the Stickiness field.
func (o *CreateContextFieldSchema) SetStickiness(v bool) {
	o.Stickiness = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *CreateContextFieldSchema) GetSortOrder() int32 {
	if o == nil || IsNil(o.SortOrder) {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContextFieldSchema) GetSortOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *CreateContextFieldSchema) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *CreateContextFieldSchema) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetLegalValues returns the LegalValues field value if set, zero value otherwise.
func (o *CreateContextFieldSchema) GetLegalValues() []LegalValueSchema {
	if o == nil || IsNil(o.LegalValues) {
		var ret []LegalValueSchema
		return ret
	}
	return o.LegalValues
}

// GetLegalValuesOk returns a tuple with the LegalValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContextFieldSchema) GetLegalValuesOk() ([]LegalValueSchema, bool) {
	if o == nil || IsNil(o.LegalValues) {
		return nil, false
	}
	return o.LegalValues, true
}

// HasLegalValues returns a boolean if a field has been set.
func (o *CreateContextFieldSchema) HasLegalValues() bool {
	if o != nil && !IsNil(o.LegalValues) {
		return true
	}

	return false
}

// SetLegalValues gets a reference to the given []LegalValueSchema and assigns it to the LegalValues field.
func (o *CreateContextFieldSchema) SetLegalValues(v []LegalValueSchema) {
	o.LegalValues = v
}

// GetName returns the Name field value
func (o *CreateContextFieldSchema) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateContextFieldSchema) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateContextFieldSchema) SetName(v string) {
	o.Name = v
}

func (o CreateContextFieldSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateContextFieldSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Stickiness) {
		toSerialize["stickiness"] = o.Stickiness
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sortOrder"] = o.SortOrder
	}
	if !IsNil(o.LegalValues) {
		toSerialize["legalValues"] = o.LegalValues
	}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableCreateContextFieldSchema struct {
	value *CreateContextFieldSchema
	isSet bool
}

func (v NullableCreateContextFieldSchema) Get() *CreateContextFieldSchema {
	return v.value
}

func (v *NullableCreateContextFieldSchema) Set(val *CreateContextFieldSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateContextFieldSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateContextFieldSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateContextFieldSchema(val *CreateContextFieldSchema) *NullableCreateContextFieldSchema {
	return &NullableCreateContextFieldSchema{value: val, isSet: true}
}

func (v NullableCreateContextFieldSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateContextFieldSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
