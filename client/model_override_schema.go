/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.4.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the OverrideSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OverrideSchema{}

// OverrideSchema An override for deciding which variant should be assigned to a user based on the context name
type OverrideSchema struct {
	// The name of the context field used to determine overrides
	ContextName string `json:"contextName"`
	// Which values that should be overriden
	Values []string `json:"values"`
}

// NewOverrideSchema instantiates a new OverrideSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOverrideSchema(contextName string, values []string) *OverrideSchema {
	this := OverrideSchema{}
	this.ContextName = contextName
	this.Values = values
	return &this
}

// NewOverrideSchemaWithDefaults instantiates a new OverrideSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOverrideSchemaWithDefaults() *OverrideSchema {
	this := OverrideSchema{}
	return &this
}

// GetContextName returns the ContextName field value
func (o *OverrideSchema) GetContextName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContextName
}

// GetContextNameOk returns a tuple with the ContextName field value
// and a boolean to check if the value has been set.
func (o *OverrideSchema) GetContextNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContextName, true
}

// SetContextName sets field value
func (o *OverrideSchema) SetContextName(v string) {
	o.ContextName = v
}

// GetValues returns the Values field value
func (o *OverrideSchema) GetValues() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *OverrideSchema) GetValuesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Values, true
}

// SetValues sets field value
func (o *OverrideSchema) SetValues(v []string) {
	o.Values = v
}

func (o OverrideSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OverrideSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contextName"] = o.ContextName
	toSerialize["values"] = o.Values
	return toSerialize, nil
}

type NullableOverrideSchema struct {
	value *OverrideSchema
	isSet bool
}

func (v NullableOverrideSchema) Get() *OverrideSchema {
	return v.value
}

func (v *NullableOverrideSchema) Set(val *OverrideSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableOverrideSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableOverrideSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOverrideSchema(val *OverrideSchema) *NullableOverrideSchema {
	return &NullableOverrideSchema{value: val, isSet: true}
}

func (v NullableOverrideSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOverrideSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
