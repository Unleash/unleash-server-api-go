/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PlaygroundRequestSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlaygroundRequestSchema{}

// PlaygroundRequestSchema Data for the playground API to evaluate toggles
type PlaygroundRequestSchema struct {
	// The environment to evaluate toggles in.
	Environment string                                   `json:"environment"`
	Projects    *AdvancedPlaygroundRequestSchemaProjects `json:"projects,omitempty"`
	Context     SdkContextSchema                         `json:"context"`
}

// NewPlaygroundRequestSchema instantiates a new PlaygroundRequestSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaygroundRequestSchema(environment string, context SdkContextSchema) *PlaygroundRequestSchema {
	this := PlaygroundRequestSchema{}
	this.Environment = environment
	this.Context = context
	return &this
}

// NewPlaygroundRequestSchemaWithDefaults instantiates a new PlaygroundRequestSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaygroundRequestSchemaWithDefaults() *PlaygroundRequestSchema {
	this := PlaygroundRequestSchema{}
	return &this
}

// GetEnvironment returns the Environment field value
func (o *PlaygroundRequestSchema) GetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *PlaygroundRequestSchema) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *PlaygroundRequestSchema) SetEnvironment(v string) {
	o.Environment = v
}

// GetProjects returns the Projects field value if set, zero value otherwise.
func (o *PlaygroundRequestSchema) GetProjects() AdvancedPlaygroundRequestSchemaProjects {
	if o == nil || IsNil(o.Projects) {
		var ret AdvancedPlaygroundRequestSchemaProjects
		return ret
	}
	return *o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaygroundRequestSchema) GetProjectsOk() (*AdvancedPlaygroundRequestSchemaProjects, bool) {
	if o == nil || IsNil(o.Projects) {
		return nil, false
	}
	return o.Projects, true
}

// HasProjects returns a boolean if a field has been set.
func (o *PlaygroundRequestSchema) HasProjects() bool {
	if o != nil && !IsNil(o.Projects) {
		return true
	}

	return false
}

// SetProjects gets a reference to the given AdvancedPlaygroundRequestSchemaProjects and assigns it to the Projects field.
func (o *PlaygroundRequestSchema) SetProjects(v AdvancedPlaygroundRequestSchemaProjects) {
	o.Projects = &v
}

// GetContext returns the Context field value
func (o *PlaygroundRequestSchema) GetContext() SdkContextSchema {
	if o == nil {
		var ret SdkContextSchema
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *PlaygroundRequestSchema) GetContextOk() (*SdkContextSchema, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *PlaygroundRequestSchema) SetContext(v SdkContextSchema) {
	o.Context = v
}

func (o PlaygroundRequestSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlaygroundRequestSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["environment"] = o.Environment
	if !IsNil(o.Projects) {
		toSerialize["projects"] = o.Projects
	}
	toSerialize["context"] = o.Context
	return toSerialize, nil
}

type NullablePlaygroundRequestSchema struct {
	value *PlaygroundRequestSchema
	isSet bool
}

func (v NullablePlaygroundRequestSchema) Get() *PlaygroundRequestSchema {
	return v.value
}

func (v *NullablePlaygroundRequestSchema) Set(val *PlaygroundRequestSchema) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaygroundRequestSchema) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaygroundRequestSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaygroundRequestSchema(val *PlaygroundRequestSchema) *NullablePlaygroundRequestSchema {
	return &NullablePlaygroundRequestSchema{value: val, isSet: true}
}

func (v NullablePlaygroundRequestSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaygroundRequestSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
