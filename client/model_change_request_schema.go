/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the ChangeRequestSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChangeRequestSchema{}

// ChangeRequestSchema struct for ChangeRequestSchema
type ChangeRequestSchema struct {
	Id           float32                           `json:"id"`
	Title        *string                           `json:"title,omitempty"`
	Environment  string                            `json:"environment"`
	State        string                            `json:"state"`
	MinApprovals float32                           `json:"minApprovals"`
	Project      string                            `json:"project"`
	Features     []ChangeRequestFeatureSchema      `json:"features"`
	Approvals    []ChangeRequestApprovalSchema     `json:"approvals,omitempty"`
	Comments     []ChangeRequestCommentSchema      `json:"comments,omitempty"`
	CreatedBy    ChangeRequestEventSchemaCreatedBy `json:"createdBy"`
	CreatedAt    time.Time                         `json:"createdAt"`
}

// NewChangeRequestSchema instantiates a new ChangeRequestSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeRequestSchema(id float32, environment string, state string, minApprovals float32, project string, features []ChangeRequestFeatureSchema, createdBy ChangeRequestEventSchemaCreatedBy, createdAt time.Time) *ChangeRequestSchema {
	this := ChangeRequestSchema{}
	this.Id = id
	this.Environment = environment
	this.State = state
	this.MinApprovals = minApprovals
	this.Project = project
	this.Features = features
	this.CreatedBy = createdBy
	this.CreatedAt = createdAt
	return &this
}

// NewChangeRequestSchemaWithDefaults instantiates a new ChangeRequestSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeRequestSchemaWithDefaults() *ChangeRequestSchema {
	this := ChangeRequestSchema{}
	return &this
}

// GetId returns the Id field value
func (o *ChangeRequestSchema) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestSchema) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ChangeRequestSchema) SetId(v float32) {
	o.Id = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ChangeRequestSchema) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeRequestSchema) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ChangeRequestSchema) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ChangeRequestSchema) SetTitle(v string) {
	o.Title = &v
}

// GetEnvironment returns the Environment field value
func (o *ChangeRequestSchema) GetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestSchema) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *ChangeRequestSchema) SetEnvironment(v string) {
	o.Environment = v
}

// GetState returns the State field value
func (o *ChangeRequestSchema) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestSchema) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ChangeRequestSchema) SetState(v string) {
	o.State = v
}

// GetMinApprovals returns the MinApprovals field value
func (o *ChangeRequestSchema) GetMinApprovals() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MinApprovals
}

// GetMinApprovalsOk returns a tuple with the MinApprovals field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestSchema) GetMinApprovalsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinApprovals, true
}

// SetMinApprovals sets field value
func (o *ChangeRequestSchema) SetMinApprovals(v float32) {
	o.MinApprovals = v
}

// GetProject returns the Project field value
func (o *ChangeRequestSchema) GetProject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestSchema) GetProjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Project, true
}

// SetProject sets field value
func (o *ChangeRequestSchema) SetProject(v string) {
	o.Project = v
}

// GetFeatures returns the Features field value
func (o *ChangeRequestSchema) GetFeatures() []ChangeRequestFeatureSchema {
	if o == nil {
		var ret []ChangeRequestFeatureSchema
		return ret
	}

	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestSchema) GetFeaturesOk() ([]ChangeRequestFeatureSchema, bool) {
	if o == nil {
		return nil, false
	}
	return o.Features, true
}

// SetFeatures sets field value
func (o *ChangeRequestSchema) SetFeatures(v []ChangeRequestFeatureSchema) {
	o.Features = v
}

// GetApprovals returns the Approvals field value if set, zero value otherwise.
func (o *ChangeRequestSchema) GetApprovals() []ChangeRequestApprovalSchema {
	if o == nil || IsNil(o.Approvals) {
		var ret []ChangeRequestApprovalSchema
		return ret
	}
	return o.Approvals
}

// GetApprovalsOk returns a tuple with the Approvals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeRequestSchema) GetApprovalsOk() ([]ChangeRequestApprovalSchema, bool) {
	if o == nil || IsNil(o.Approvals) {
		return nil, false
	}
	return o.Approvals, true
}

// HasApprovals returns a boolean if a field has been set.
func (o *ChangeRequestSchema) HasApprovals() bool {
	if o != nil && !IsNil(o.Approvals) {
		return true
	}

	return false
}

// SetApprovals gets a reference to the given []ChangeRequestApprovalSchema and assigns it to the Approvals field.
func (o *ChangeRequestSchema) SetApprovals(v []ChangeRequestApprovalSchema) {
	o.Approvals = v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *ChangeRequestSchema) GetComments() []ChangeRequestCommentSchema {
	if o == nil || IsNil(o.Comments) {
		var ret []ChangeRequestCommentSchema
		return ret
	}
	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeRequestSchema) GetCommentsOk() ([]ChangeRequestCommentSchema, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *ChangeRequestSchema) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given []ChangeRequestCommentSchema and assigns it to the Comments field.
func (o *ChangeRequestSchema) SetComments(v []ChangeRequestCommentSchema) {
	o.Comments = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *ChangeRequestSchema) GetCreatedBy() ChangeRequestEventSchemaCreatedBy {
	if o == nil {
		var ret ChangeRequestEventSchemaCreatedBy
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestSchema) GetCreatedByOk() (*ChangeRequestEventSchemaCreatedBy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *ChangeRequestSchema) SetCreatedBy(v ChangeRequestEventSchemaCreatedBy) {
	o.CreatedBy = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ChangeRequestSchema) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestSchema) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ChangeRequestSchema) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o ChangeRequestSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChangeRequestSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	toSerialize["environment"] = o.Environment
	toSerialize["state"] = o.State
	toSerialize["minApprovals"] = o.MinApprovals
	toSerialize["project"] = o.Project
	toSerialize["features"] = o.Features
	if !IsNil(o.Approvals) {
		toSerialize["approvals"] = o.Approvals
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["createdAt"] = o.CreatedAt
	return toSerialize, nil
}

type NullableChangeRequestSchema struct {
	value *ChangeRequestSchema
	isSet bool
}

func (v NullableChangeRequestSchema) Get() *ChangeRequestSchema {
	return v.value
}

func (v *NullableChangeRequestSchema) Set(val *ChangeRequestSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeRequestSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeRequestSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeRequestSchema(val *ChangeRequestSchema) *NullableChangeRequestSchema {
	return &NullableChangeRequestSchema{value: val, isSet: true}
}

func (v NullableChangeRequestSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeRequestSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
