/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 6.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// checks if the EdgeInstanceTrafficSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EdgeInstanceTrafficSchema{}

// EdgeInstanceTrafficSchema Represents requests to the Edge instance (/api/client/features, /api/frontend, etc.)
type EdgeInstanceTrafficSchema struct {
	// A map containing GET requests.
	Get map[string]EdgeLatencyMetricsSchema `json:"get"`
	// A map containing POST requests.
	Post map[string]EdgeLatencyMetricsSchema `json:"post"`
	// A map containing requests that were denied.
	AccessDenied map[string]EdgeLatencyMetricsSchema `json:"accessDenied"`
	// A map containing requests that had cached responses.
	CachedResponses      map[string]EdgeLatencyMetricsSchema `json:"cachedResponses"`
	AdditionalProperties map[string]interface{}
}

type _EdgeInstanceTrafficSchema EdgeInstanceTrafficSchema

// NewEdgeInstanceTrafficSchema instantiates a new EdgeInstanceTrafficSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEdgeInstanceTrafficSchema(get map[string]EdgeLatencyMetricsSchema, post map[string]EdgeLatencyMetricsSchema, accessDenied map[string]EdgeLatencyMetricsSchema, cachedResponses map[string]EdgeLatencyMetricsSchema) *EdgeInstanceTrafficSchema {
	this := EdgeInstanceTrafficSchema{}
	this.Get = get
	this.Post = post
	this.AccessDenied = accessDenied
	this.CachedResponses = cachedResponses
	return &this
}

// NewEdgeInstanceTrafficSchemaWithDefaults instantiates a new EdgeInstanceTrafficSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEdgeInstanceTrafficSchemaWithDefaults() *EdgeInstanceTrafficSchema {
	this := EdgeInstanceTrafficSchema{}
	return &this
}

// GetGet returns the Get field value
func (o *EdgeInstanceTrafficSchema) GetGet() map[string]EdgeLatencyMetricsSchema {
	if o == nil {
		var ret map[string]EdgeLatencyMetricsSchema
		return ret
	}

	return o.Get
}

// GetGetOk returns a tuple with the Get field value
// and a boolean to check if the value has been set.
func (o *EdgeInstanceTrafficSchema) GetGetOk() (map[string]EdgeLatencyMetricsSchema, bool) {
	if o == nil {
		return map[string]EdgeLatencyMetricsSchema{}, false
	}
	return o.Get, true
}

// SetGet sets field value
func (o *EdgeInstanceTrafficSchema) SetGet(v map[string]EdgeLatencyMetricsSchema) {
	o.Get = v
}

// GetPost returns the Post field value
func (o *EdgeInstanceTrafficSchema) GetPost() map[string]EdgeLatencyMetricsSchema {
	if o == nil {
		var ret map[string]EdgeLatencyMetricsSchema
		return ret
	}

	return o.Post
}

// GetPostOk returns a tuple with the Post field value
// and a boolean to check if the value has been set.
func (o *EdgeInstanceTrafficSchema) GetPostOk() (map[string]EdgeLatencyMetricsSchema, bool) {
	if o == nil {
		return map[string]EdgeLatencyMetricsSchema{}, false
	}
	return o.Post, true
}

// SetPost sets field value
func (o *EdgeInstanceTrafficSchema) SetPost(v map[string]EdgeLatencyMetricsSchema) {
	o.Post = v
}

// GetAccessDenied returns the AccessDenied field value
func (o *EdgeInstanceTrafficSchema) GetAccessDenied() map[string]EdgeLatencyMetricsSchema {
	if o == nil {
		var ret map[string]EdgeLatencyMetricsSchema
		return ret
	}

	return o.AccessDenied
}

// GetAccessDeniedOk returns a tuple with the AccessDenied field value
// and a boolean to check if the value has been set.
func (o *EdgeInstanceTrafficSchema) GetAccessDeniedOk() (map[string]EdgeLatencyMetricsSchema, bool) {
	if o == nil {
		return map[string]EdgeLatencyMetricsSchema{}, false
	}
	return o.AccessDenied, true
}

// SetAccessDenied sets field value
func (o *EdgeInstanceTrafficSchema) SetAccessDenied(v map[string]EdgeLatencyMetricsSchema) {
	o.AccessDenied = v
}

// GetCachedResponses returns the CachedResponses field value
func (o *EdgeInstanceTrafficSchema) GetCachedResponses() map[string]EdgeLatencyMetricsSchema {
	if o == nil {
		var ret map[string]EdgeLatencyMetricsSchema
		return ret
	}

	return o.CachedResponses
}

// GetCachedResponsesOk returns a tuple with the CachedResponses field value
// and a boolean to check if the value has been set.
func (o *EdgeInstanceTrafficSchema) GetCachedResponsesOk() (map[string]EdgeLatencyMetricsSchema, bool) {
	if o == nil {
		return map[string]EdgeLatencyMetricsSchema{}, false
	}
	return o.CachedResponses, true
}

// SetCachedResponses sets field value
func (o *EdgeInstanceTrafficSchema) SetCachedResponses(v map[string]EdgeLatencyMetricsSchema) {
	o.CachedResponses = v
}

func (o EdgeInstanceTrafficSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EdgeInstanceTrafficSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["get"] = o.Get
	toSerialize["post"] = o.Post
	toSerialize["accessDenied"] = o.AccessDenied
	toSerialize["cachedResponses"] = o.CachedResponses

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EdgeInstanceTrafficSchema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"get",
		"post",
		"accessDenied",
		"cachedResponses",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEdgeInstanceTrafficSchema := _EdgeInstanceTrafficSchema{}

	err = json.Unmarshal(data, &varEdgeInstanceTrafficSchema)

	if err != nil {
		return err
	}

	*o = EdgeInstanceTrafficSchema(varEdgeInstanceTrafficSchema)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "get")
		delete(additionalProperties, "post")
		delete(additionalProperties, "accessDenied")
		delete(additionalProperties, "cachedResponses")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEdgeInstanceTrafficSchema struct {
	value *EdgeInstanceTrafficSchema
	isSet bool
}

func (v NullableEdgeInstanceTrafficSchema) Get() *EdgeInstanceTrafficSchema {
	return v.value
}

func (v *NullableEdgeInstanceTrafficSchema) Set(val *EdgeInstanceTrafficSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableEdgeInstanceTrafficSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableEdgeInstanceTrafficSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdgeInstanceTrafficSchema(val *EdgeInstanceTrafficSchema) *NullableEdgeInstanceTrafficSchema {
	return &NullableEdgeInstanceTrafficSchema{value: val, isSet: true}
}

func (v NullableEdgeInstanceTrafficSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdgeInstanceTrafficSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
