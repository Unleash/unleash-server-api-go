/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ExportQuerySchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportQuerySchema{}

// ExportQuerySchema Available query parameters for  the [deprecated export/import](https://docs.getunleash.io/reference/deploy/import-export) functionality.
type ExportQuerySchema struct {
	// The environment to export from
	Environment string `json:"environment"`
	// Whether to return a downloadable file
	DownloadFile         *bool `json:"downloadFile,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExportQuerySchema ExportQuerySchema

// NewExportQuerySchema instantiates a new ExportQuerySchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportQuerySchema(environment string) *ExportQuerySchema {
	this := ExportQuerySchema{}
	return &this
}

// NewExportQuerySchemaWithDefaults instantiates a new ExportQuerySchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportQuerySchemaWithDefaults() *ExportQuerySchema {
	this := ExportQuerySchema{}
	return &this
}

// GetEnvironment returns the Environment field value
func (o *ExportQuerySchema) GetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *ExportQuerySchema) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *ExportQuerySchema) SetEnvironment(v string) {
	o.Environment = v
}

// GetDownloadFile returns the DownloadFile field value if set, zero value otherwise.
func (o *ExportQuerySchema) GetDownloadFile() bool {
	if o == nil || IsNil(o.DownloadFile) {
		var ret bool
		return ret
	}
	return *o.DownloadFile
}

// GetDownloadFileOk returns a tuple with the DownloadFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportQuerySchema) GetDownloadFileOk() (*bool, bool) {
	if o == nil || IsNil(o.DownloadFile) {
		return nil, false
	}
	return o.DownloadFile, true
}

// HasDownloadFile returns a boolean if a field has been set.
func (o *ExportQuerySchema) HasDownloadFile() bool {
	if o != nil && !IsNil(o.DownloadFile) {
		return true
	}

	return false
}

// SetDownloadFile gets a reference to the given bool and assigns it to the DownloadFile field.
func (o *ExportQuerySchema) SetDownloadFile(v bool) {
	o.DownloadFile = &v
}

func (o ExportQuerySchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportQuerySchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["environment"] = o.Environment
	if !IsNil(o.DownloadFile) {
		toSerialize["downloadFile"] = o.DownloadFile
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExportQuerySchema) UnmarshalJSON(bytes []byte) (err error) {
	varExportQuerySchema := _ExportQuerySchema{}

	if err = json.Unmarshal(bytes, &varExportQuerySchema); err == nil {
		*o = ExportQuerySchema(varExportQuerySchema)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "environment")
		delete(additionalProperties, "downloadFile")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExportQuerySchema struct {
	value *ExportQuerySchema
	isSet bool
}

func (v NullableExportQuerySchema) Get() *ExportQuerySchema {
	return v.value
}

func (v *NullableExportQuerySchema) Set(val *ExportQuerySchema) {
	v.value = val
	v.isSet = true
}

func (v NullableExportQuerySchema) IsSet() bool {
	return v.isSet
}

func (v *NullableExportQuerySchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportQuerySchema(val *ExportQuerySchema) *NullableExportQuerySchema {
	return &NullableExportQuerySchema{value: val, isSet: true}
}

func (v NullableExportQuerySchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportQuerySchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
