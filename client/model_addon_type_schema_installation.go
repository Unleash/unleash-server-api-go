/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AddonTypeSchemaInstallation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddonTypeSchemaInstallation{}

// AddonTypeSchemaInstallation The installation configuration for this addon type.
type AddonTypeSchemaInstallation struct {
	// A URL to where the addon configuration should redirect to install addons of this type.
	Url string `json:"url"`
	// The title of the installation configuration. This will be displayed to the user when installing addons of this type.
	Title *string `json:"title,omitempty"`
	// The help text of the installation configuration. This will be displayed to the user when installing addons of this type.
	HelpText *string `json:"helpText,omitempty"`
}

// NewAddonTypeSchemaInstallation instantiates a new AddonTypeSchemaInstallation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonTypeSchemaInstallation(url string) *AddonTypeSchemaInstallation {
	this := AddonTypeSchemaInstallation{}
	this.Url = url
	return &this
}

// NewAddonTypeSchemaInstallationWithDefaults instantiates a new AddonTypeSchemaInstallation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonTypeSchemaInstallationWithDefaults() *AddonTypeSchemaInstallation {
	this := AddonTypeSchemaInstallation{}
	return &this
}

// GetUrl returns the Url field value
func (o *AddonTypeSchemaInstallation) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *AddonTypeSchemaInstallation) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *AddonTypeSchemaInstallation) SetUrl(v string) {
	o.Url = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AddonTypeSchemaInstallation) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonTypeSchemaInstallation) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AddonTypeSchemaInstallation) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AddonTypeSchemaInstallation) SetTitle(v string) {
	o.Title = &v
}

// GetHelpText returns the HelpText field value if set, zero value otherwise.
func (o *AddonTypeSchemaInstallation) GetHelpText() string {
	if o == nil || IsNil(o.HelpText) {
		var ret string
		return ret
	}
	return *o.HelpText
}

// GetHelpTextOk returns a tuple with the HelpText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonTypeSchemaInstallation) GetHelpTextOk() (*string, bool) {
	if o == nil || IsNil(o.HelpText) {
		return nil, false
	}
	return o.HelpText, true
}

// HasHelpText returns a boolean if a field has been set.
func (o *AddonTypeSchemaInstallation) HasHelpText() bool {
	if o != nil && !IsNil(o.HelpText) {
		return true
	}

	return false
}

// SetHelpText gets a reference to the given string and assigns it to the HelpText field.
func (o *AddonTypeSchemaInstallation) SetHelpText(v string) {
	o.HelpText = &v
}

func (o AddonTypeSchemaInstallation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddonTypeSchemaInstallation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.HelpText) {
		toSerialize["helpText"] = o.HelpText
	}
	return toSerialize, nil
}

type NullableAddonTypeSchemaInstallation struct {
	value *AddonTypeSchemaInstallation
	isSet bool
}

func (v NullableAddonTypeSchemaInstallation) Get() *AddonTypeSchemaInstallation {
	return v.value
}

func (v *NullableAddonTypeSchemaInstallation) Set(val *AddonTypeSchemaInstallation) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonTypeSchemaInstallation) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonTypeSchemaInstallation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonTypeSchemaInstallation(val *AddonTypeSchemaInstallation) *NullableAddonTypeSchemaInstallation {
	return &NullableAddonTypeSchemaInstallation{value: val, isSet: true}
}

func (v NullableAddonTypeSchemaInstallation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonTypeSchemaInstallation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
