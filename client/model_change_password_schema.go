/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ChangePasswordSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChangePasswordSchema{}

// ChangePasswordSchema Change password as long as the token is a valid token
type ChangePasswordSchema struct {
	// A reset token used to validate that the user is allowed to change the password.
	Token string `json:"token"`
	// The new password for the user
	Password string `json:"password"`
}

// NewChangePasswordSchema instantiates a new ChangePasswordSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangePasswordSchema(token string, password string) *ChangePasswordSchema {
	this := ChangePasswordSchema{}
	this.Token = token
	this.Password = password
	return &this
}

// NewChangePasswordSchemaWithDefaults instantiates a new ChangePasswordSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangePasswordSchemaWithDefaults() *ChangePasswordSchema {
	this := ChangePasswordSchema{}
	return &this
}

// GetToken returns the Token field value
func (o *ChangePasswordSchema) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ChangePasswordSchema) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ChangePasswordSchema) SetToken(v string) {
	o.Token = v
}

// GetPassword returns the Password field value
func (o *ChangePasswordSchema) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *ChangePasswordSchema) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *ChangePasswordSchema) SetPassword(v string) {
	o.Password = v
}

func (o ChangePasswordSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChangePasswordSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["token"] = o.Token
	toSerialize["password"] = o.Password
	return toSerialize, nil
}

type NullableChangePasswordSchema struct {
	value *ChangePasswordSchema
	isSet bool
}

func (v NullableChangePasswordSchema) Get() *ChangePasswordSchema {
	return v.value
}

func (v *NullableChangePasswordSchema) Set(val *ChangePasswordSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableChangePasswordSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableChangePasswordSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangePasswordSchema(val *ChangePasswordSchema) *NullableChangePasswordSchema {
	return &NullableChangePasswordSchema{value: val, isSet: true}
}

func (v NullableChangePasswordSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangePasswordSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


