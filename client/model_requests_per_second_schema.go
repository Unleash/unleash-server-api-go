/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the RequestsPerSecondSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestsPerSecondSchema{}

// RequestsPerSecondSchema Statistics for usage of Unleash, formatted so it can easily be used in a graph
type RequestsPerSecondSchema struct {
	// Whether the query against prometheus succeeded or failed
	Status *string                      `json:"status,omitempty"`
	Data   *RequestsPerSecondSchemaData `json:"data,omitempty"`
}

// NewRequestsPerSecondSchema instantiates a new RequestsPerSecondSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestsPerSecondSchema() *RequestsPerSecondSchema {
	this := RequestsPerSecondSchema{}
	return &this
}

// NewRequestsPerSecondSchemaWithDefaults instantiates a new RequestsPerSecondSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestsPerSecondSchemaWithDefaults() *RequestsPerSecondSchema {
	this := RequestsPerSecondSchema{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RequestsPerSecondSchema) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestsPerSecondSchema) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RequestsPerSecondSchema) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *RequestsPerSecondSchema) SetStatus(v string) {
	o.Status = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *RequestsPerSecondSchema) GetData() RequestsPerSecondSchemaData {
	if o == nil || IsNil(o.Data) {
		var ret RequestsPerSecondSchemaData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestsPerSecondSchema) GetDataOk() (*RequestsPerSecondSchemaData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *RequestsPerSecondSchema) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given RequestsPerSecondSchemaData and assigns it to the Data field.
func (o *RequestsPerSecondSchema) SetData(v RequestsPerSecondSchemaData) {
	o.Data = &v
}

func (o RequestsPerSecondSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestsPerSecondSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableRequestsPerSecondSchema struct {
	value *RequestsPerSecondSchema
	isSet bool
}

func (v NullableRequestsPerSecondSchema) Get() *RequestsPerSecondSchema {
	return v.value
}

func (v *NullableRequestsPerSecondSchema) Set(val *RequestsPerSecondSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestsPerSecondSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestsPerSecondSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestsPerSecondSchema(val *RequestsPerSecondSchema) *NullableRequestsPerSecondSchema {
	return &NullableRequestsPerSecondSchema{value: val, isSet: true}
}

func (v NullableRequestsPerSecondSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestsPerSecondSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
