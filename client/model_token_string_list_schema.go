/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TokenStringListSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenStringListSchema{}

// TokenStringListSchema A list of unleash tokens to validate against known tokens
type TokenStringListSchema struct {
	// Tokens that we want to get access information about
	Tokens []string `json:"tokens"`
	AdditionalProperties map[string]interface{}
}

type _TokenStringListSchema TokenStringListSchema

// NewTokenStringListSchema instantiates a new TokenStringListSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenStringListSchema(tokens []string) *TokenStringListSchema {
	this := TokenStringListSchema{}
	this.Tokens = tokens
	return &this
}

// NewTokenStringListSchemaWithDefaults instantiates a new TokenStringListSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenStringListSchemaWithDefaults() *TokenStringListSchema {
	this := TokenStringListSchema{}
	return &this
}

// GetTokens returns the Tokens field value
func (o *TokenStringListSchema) GetTokens() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value
// and a boolean to check if the value has been set.
func (o *TokenStringListSchema) GetTokensOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tokens, true
}

// SetTokens sets field value
func (o *TokenStringListSchema) SetTokens(v []string) {
	o.Tokens = v
}

func (o TokenStringListSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenStringListSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tokens"] = o.Tokens

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TokenStringListSchema) UnmarshalJSON(bytes []byte) (err error) {
	varTokenStringListSchema := _TokenStringListSchema{}

	if err = json.Unmarshal(bytes, &varTokenStringListSchema); err == nil {
		*o = TokenStringListSchema(varTokenStringListSchema)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "tokens")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTokenStringListSchema struct {
	value *TokenStringListSchema
	isSet bool
}

func (v NullableTokenStringListSchema) Get() *TokenStringListSchema {
	return v.value
}

func (v *NullableTokenStringListSchema) Set(val *TokenStringListSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenStringListSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenStringListSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenStringListSchema(val *TokenStringListSchema) *NullableTokenStringListSchema {
	return &NullableTokenStringListSchema{value: val, isSet: true}
}

func (v NullableTokenStringListSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenStringListSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


