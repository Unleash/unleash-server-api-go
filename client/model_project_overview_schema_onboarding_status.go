/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 6.7.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// ProjectOverviewSchemaOnboardingStatus - The current onboarding status of the project.
type ProjectOverviewSchemaOnboardingStatus struct {
	ProjectOverviewSchemaOnboardingStatusOneOf  *ProjectOverviewSchemaOnboardingStatusOneOf
	ProjectOverviewSchemaOnboardingStatusOneOf1 *ProjectOverviewSchemaOnboardingStatusOneOf1
}

// ProjectOverviewSchemaOnboardingStatusOneOfAsProjectOverviewSchemaOnboardingStatus is a convenience function that returns ProjectOverviewSchemaOnboardingStatusOneOf wrapped in ProjectOverviewSchemaOnboardingStatus
func ProjectOverviewSchemaOnboardingStatusOneOfAsProjectOverviewSchemaOnboardingStatus(v *ProjectOverviewSchemaOnboardingStatusOneOf) ProjectOverviewSchemaOnboardingStatus {
	return ProjectOverviewSchemaOnboardingStatus{
		ProjectOverviewSchemaOnboardingStatusOneOf: v,
	}
}

// ProjectOverviewSchemaOnboardingStatusOneOf1AsProjectOverviewSchemaOnboardingStatus is a convenience function that returns ProjectOverviewSchemaOnboardingStatusOneOf1 wrapped in ProjectOverviewSchemaOnboardingStatus
func ProjectOverviewSchemaOnboardingStatusOneOf1AsProjectOverviewSchemaOnboardingStatus(v *ProjectOverviewSchemaOnboardingStatusOneOf1) ProjectOverviewSchemaOnboardingStatus {
	return ProjectOverviewSchemaOnboardingStatus{
		ProjectOverviewSchemaOnboardingStatusOneOf1: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ProjectOverviewSchemaOnboardingStatus) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ProjectOverviewSchemaOnboardingStatusOneOf
	err = newStrictDecoder(data).Decode(&dst.ProjectOverviewSchemaOnboardingStatusOneOf)
	if err == nil {
		jsonProjectOverviewSchemaOnboardingStatusOneOf, _ := json.Marshal(dst.ProjectOverviewSchemaOnboardingStatusOneOf)
		if string(jsonProjectOverviewSchemaOnboardingStatusOneOf) == "{}" { // empty struct
			dst.ProjectOverviewSchemaOnboardingStatusOneOf = nil
		} else {
			if err = validator.Validate(dst.ProjectOverviewSchemaOnboardingStatusOneOf); err != nil {
				dst.ProjectOverviewSchemaOnboardingStatusOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.ProjectOverviewSchemaOnboardingStatusOneOf = nil
	}

	// try to unmarshal data into ProjectOverviewSchemaOnboardingStatusOneOf1
	err = newStrictDecoder(data).Decode(&dst.ProjectOverviewSchemaOnboardingStatusOneOf1)
	if err == nil {
		jsonProjectOverviewSchemaOnboardingStatusOneOf1, _ := json.Marshal(dst.ProjectOverviewSchemaOnboardingStatusOneOf1)
		if string(jsonProjectOverviewSchemaOnboardingStatusOneOf1) == "{}" { // empty struct
			dst.ProjectOverviewSchemaOnboardingStatusOneOf1 = nil
		} else {
			if err = validator.Validate(dst.ProjectOverviewSchemaOnboardingStatusOneOf1); err != nil {
				dst.ProjectOverviewSchemaOnboardingStatusOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.ProjectOverviewSchemaOnboardingStatusOneOf1 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ProjectOverviewSchemaOnboardingStatusOneOf = nil
		dst.ProjectOverviewSchemaOnboardingStatusOneOf1 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ProjectOverviewSchemaOnboardingStatus)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ProjectOverviewSchemaOnboardingStatus)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ProjectOverviewSchemaOnboardingStatus) MarshalJSON() ([]byte, error) {
	if src.ProjectOverviewSchemaOnboardingStatusOneOf != nil {
		return json.Marshal(&src.ProjectOverviewSchemaOnboardingStatusOneOf)
	}

	if src.ProjectOverviewSchemaOnboardingStatusOneOf1 != nil {
		return json.Marshal(&src.ProjectOverviewSchemaOnboardingStatusOneOf1)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ProjectOverviewSchemaOnboardingStatus) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ProjectOverviewSchemaOnboardingStatusOneOf != nil {
		return obj.ProjectOverviewSchemaOnboardingStatusOneOf
	}

	if obj.ProjectOverviewSchemaOnboardingStatusOneOf1 != nil {
		return obj.ProjectOverviewSchemaOnboardingStatusOneOf1
	}

	// all schemas are nil
	return nil
}

type NullableProjectOverviewSchemaOnboardingStatus struct {
	value *ProjectOverviewSchemaOnboardingStatus
	isSet bool
}

func (v NullableProjectOverviewSchemaOnboardingStatus) Get() *ProjectOverviewSchemaOnboardingStatus {
	return v.value
}

func (v *NullableProjectOverviewSchemaOnboardingStatus) Set(val *ProjectOverviewSchemaOnboardingStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectOverviewSchemaOnboardingStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectOverviewSchemaOnboardingStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectOverviewSchemaOnboardingStatus(val *ProjectOverviewSchemaOnboardingStatus) *NullableProjectOverviewSchemaOnboardingStatus {
	return &NullableProjectOverviewSchemaOnboardingStatus{value: val, isSet: true}
}

func (v NullableProjectOverviewSchemaOnboardingStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectOverviewSchemaOnboardingStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
