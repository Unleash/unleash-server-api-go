/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 6.7.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpdateServiceAccountSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateServiceAccountSchema{}

// UpdateServiceAccountSchema Describes the properties required to update a service account
type UpdateServiceAccountSchema struct {
	// The name of the service account
	Name *string `json:"name,omitempty"`
	// The id of the root role for the service account
	RootRole             *int32 `json:"rootRole,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateServiceAccountSchema UpdateServiceAccountSchema

// NewUpdateServiceAccountSchema instantiates a new UpdateServiceAccountSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateServiceAccountSchema() *UpdateServiceAccountSchema {
	this := UpdateServiceAccountSchema{}
	return &this
}

// NewUpdateServiceAccountSchemaWithDefaults instantiates a new UpdateServiceAccountSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateServiceAccountSchemaWithDefaults() *UpdateServiceAccountSchema {
	this := UpdateServiceAccountSchema{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateServiceAccountSchema) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceAccountSchema) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateServiceAccountSchema) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateServiceAccountSchema) SetName(v string) {
	o.Name = &v
}

// GetRootRole returns the RootRole field value if set, zero value otherwise.
func (o *UpdateServiceAccountSchema) GetRootRole() int32 {
	if o == nil || IsNil(o.RootRole) {
		var ret int32
		return ret
	}
	return *o.RootRole
}

// GetRootRoleOk returns a tuple with the RootRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceAccountSchema) GetRootRoleOk() (*int32, bool) {
	if o == nil || IsNil(o.RootRole) {
		return nil, false
	}
	return o.RootRole, true
}

// HasRootRole returns a boolean if a field has been set.
func (o *UpdateServiceAccountSchema) HasRootRole() bool {
	if o != nil && !IsNil(o.RootRole) {
		return true
	}

	return false
}

// SetRootRole gets a reference to the given int32 and assigns it to the RootRole field.
func (o *UpdateServiceAccountSchema) SetRootRole(v int32) {
	o.RootRole = &v
}

func (o UpdateServiceAccountSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateServiceAccountSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RootRole) {
		toSerialize["rootRole"] = o.RootRole
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateServiceAccountSchema) UnmarshalJSON(data []byte) (err error) {
	varUpdateServiceAccountSchema := _UpdateServiceAccountSchema{}

	err = json.Unmarshal(data, &varUpdateServiceAccountSchema)

	if err != nil {
		return err
	}

	*o = UpdateServiceAccountSchema(varUpdateServiceAccountSchema)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "rootRole")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateServiceAccountSchema struct {
	value *UpdateServiceAccountSchema
	isSet bool
}

func (v NullableUpdateServiceAccountSchema) Get() *UpdateServiceAccountSchema {
	return v.value
}

func (v *NullableUpdateServiceAccountSchema) Set(val *UpdateServiceAccountSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateServiceAccountSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateServiceAccountSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateServiceAccountSchema(val *UpdateServiceAccountSchema) *NullableUpdateServiceAccountSchema {
	return &NullableUpdateServiceAccountSchema{value: val, isSet: true}
}

func (v NullableUpdateServiceAccountSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateServiceAccountSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
