/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 6.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// checks if the EdgeProcessMetricsSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EdgeProcessMetricsSchema{}

// EdgeProcessMetricsSchema Represents Edge instance resource usage data.
type EdgeProcessMetricsSchema struct {
	// CPU usage, in seconds, since start of process.
	CpuUsage float32 `json:"cpuUsage"`
	// Current process_resident_memory (in bytes) usage.
	MemoryUsage          float32 `json:"memoryUsage"`
	AdditionalProperties map[string]interface{}
}

type _EdgeProcessMetricsSchema EdgeProcessMetricsSchema

// NewEdgeProcessMetricsSchema instantiates a new EdgeProcessMetricsSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEdgeProcessMetricsSchema(cpuUsage float32, memoryUsage float32) *EdgeProcessMetricsSchema {
	this := EdgeProcessMetricsSchema{}
	this.CpuUsage = cpuUsage
	this.MemoryUsage = memoryUsage
	return &this
}

// NewEdgeProcessMetricsSchemaWithDefaults instantiates a new EdgeProcessMetricsSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEdgeProcessMetricsSchemaWithDefaults() *EdgeProcessMetricsSchema {
	this := EdgeProcessMetricsSchema{}
	return &this
}

// GetCpuUsage returns the CpuUsage field value
func (o *EdgeProcessMetricsSchema) GetCpuUsage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CpuUsage
}

// GetCpuUsageOk returns a tuple with the CpuUsage field value
// and a boolean to check if the value has been set.
func (o *EdgeProcessMetricsSchema) GetCpuUsageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CpuUsage, true
}

// SetCpuUsage sets field value
func (o *EdgeProcessMetricsSchema) SetCpuUsage(v float32) {
	o.CpuUsage = v
}

// GetMemoryUsage returns the MemoryUsage field value
func (o *EdgeProcessMetricsSchema) GetMemoryUsage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MemoryUsage
}

// GetMemoryUsageOk returns a tuple with the MemoryUsage field value
// and a boolean to check if the value has been set.
func (o *EdgeProcessMetricsSchema) GetMemoryUsageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemoryUsage, true
}

// SetMemoryUsage sets field value
func (o *EdgeProcessMetricsSchema) SetMemoryUsage(v float32) {
	o.MemoryUsage = v
}

func (o EdgeProcessMetricsSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EdgeProcessMetricsSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cpuUsage"] = o.CpuUsage
	toSerialize["memoryUsage"] = o.MemoryUsage

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EdgeProcessMetricsSchema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cpuUsage",
		"memoryUsage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEdgeProcessMetricsSchema := _EdgeProcessMetricsSchema{}

	err = json.Unmarshal(data, &varEdgeProcessMetricsSchema)

	if err != nil {
		return err
	}

	*o = EdgeProcessMetricsSchema(varEdgeProcessMetricsSchema)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cpuUsage")
		delete(additionalProperties, "memoryUsage")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEdgeProcessMetricsSchema struct {
	value *EdgeProcessMetricsSchema
	isSet bool
}

func (v NullableEdgeProcessMetricsSchema) Get() *EdgeProcessMetricsSchema {
	return v.value
}

func (v *NullableEdgeProcessMetricsSchema) Set(val *EdgeProcessMetricsSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableEdgeProcessMetricsSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableEdgeProcessMetricsSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdgeProcessMetricsSchema(val *EdgeProcessMetricsSchema) *NullableEdgeProcessMetricsSchema {
	return &NullableEdgeProcessMetricsSchema{value: val, isSet: true}
}

func (v NullableEdgeProcessMetricsSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdgeProcessMetricsSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
