/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the SplashRequestSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SplashRequestSchema{}

// SplashRequestSchema Data related to a user having seen a splash screen.
type SplashRequestSchema struct {
	// The ID of the user that was shown the splash screen.
	UserId int32 `json:"userId"`
	// The ID of the splash screen that was shown.
	SplashId string `json:"splashId"`
}

// NewSplashRequestSchema instantiates a new SplashRequestSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSplashRequestSchema(userId int32, splashId string) *SplashRequestSchema {
	this := SplashRequestSchema{}
	this.UserId = userId
	this.SplashId = splashId
	return &this
}

// NewSplashRequestSchemaWithDefaults instantiates a new SplashRequestSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSplashRequestSchemaWithDefaults() *SplashRequestSchema {
	this := SplashRequestSchema{}
	return &this
}

// GetUserId returns the UserId field value
func (o *SplashRequestSchema) GetUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *SplashRequestSchema) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *SplashRequestSchema) SetUserId(v int32) {
	o.UserId = v
}

// GetSplashId returns the SplashId field value
func (o *SplashRequestSchema) GetSplashId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SplashId
}

// GetSplashIdOk returns a tuple with the SplashId field value
// and a boolean to check if the value has been set.
func (o *SplashRequestSchema) GetSplashIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SplashId, true
}

// SetSplashId sets field value
func (o *SplashRequestSchema) SetSplashId(v string) {
	o.SplashId = v
}

func (o SplashRequestSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SplashRequestSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userId"] = o.UserId
	toSerialize["splashId"] = o.SplashId
	return toSerialize, nil
}

type NullableSplashRequestSchema struct {
	value *SplashRequestSchema
	isSet bool
}

func (v NullableSplashRequestSchema) Get() *SplashRequestSchema {
	return v.value
}

func (v *NullableSplashRequestSchema) Set(val *SplashRequestSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableSplashRequestSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableSplashRequestSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSplashRequestSchema(val *SplashRequestSchema) *NullableSplashRequestSchema {
	return &NullableSplashRequestSchema{value: val, isSet: true}
}

func (v NullableSplashRequestSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSplashRequestSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
