/*
Unleash API

Testing ArchiveAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package client

import (
	"context"
	"github.com/Unleash/unleash-server-api-go/client"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_client_ArchiveAPIService(t *testing.T) {

	configuration := client.NewConfiguration()
	apiClient := client.NewAPIClient(configuration)

	t.Run("Test ArchiveAPIService DeleteFeature", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var featureName string

		httpRes, err := apiClient.ArchiveAPI.DeleteFeature(context.Background(), featureName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ArchiveAPIService DeleteFeatures", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var projectId string

		httpRes, err := apiClient.ArchiveAPI.DeleteFeatures(context.Background(), projectId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ArchiveAPIService GetArchivedFeatures", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.ArchiveAPI.GetArchivedFeatures(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ArchiveAPIService GetArchivedFeaturesByProjectId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var projectId string

		resp, httpRes, err := apiClient.ArchiveAPI.GetArchivedFeaturesByProjectId(context.Background(), projectId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ArchiveAPIService ReviveFeature", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var featureName string

		httpRes, err := apiClient.ArchiveAPI.ReviveFeature(context.Background(), featureName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ArchiveAPIService ReviveFeatures", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var projectId string

		httpRes, err := apiClient.ArchiveAPI.ReviveFeatures(context.Background(), projectId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
