/*
Unleash API

Testing ClientAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package client

import (
	"context"
	"github.com/Unleash/unleash-server-api-go/client"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_client_ClientAPIService(t *testing.T) {

	configuration := client.NewConfiguration()
	apiClient := client.NewAPIClient(configuration)

	t.Run("Test ClientAPIService GetAllClientFeatures", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.ClientAPI.GetAllClientFeatures(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ClientAPIService GetClientFeature", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var featureName string

		resp, httpRes, err := apiClient.ClientAPI.GetClientFeature(context.Background(), featureName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ClientAPIService RegisterClientApplication", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.ClientAPI.RegisterClientApplication(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ClientAPIService RegisterClientMetrics", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.ClientAPI.RegisterClientMetrics(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
