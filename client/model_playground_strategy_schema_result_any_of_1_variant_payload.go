/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PlaygroundStrategySchemaResultAnyOf1VariantPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlaygroundStrategySchemaResultAnyOf1VariantPayload{}

// PlaygroundStrategySchemaResultAnyOf1VariantPayload An optional payload attached to the variant.
type PlaygroundStrategySchemaResultAnyOf1VariantPayload struct {
	// The format of the payload.
	Type string `json:"type"`
	// The payload value stringified.
	Value string `json:"value"`
}

// NewPlaygroundStrategySchemaResultAnyOf1VariantPayload instantiates a new PlaygroundStrategySchemaResultAnyOf1VariantPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaygroundStrategySchemaResultAnyOf1VariantPayload(type_ string, value string) *PlaygroundStrategySchemaResultAnyOf1VariantPayload {
	this := PlaygroundStrategySchemaResultAnyOf1VariantPayload{}
	this.Type = type_
	this.Value = value
	return &this
}

// NewPlaygroundStrategySchemaResultAnyOf1VariantPayloadWithDefaults instantiates a new PlaygroundStrategySchemaResultAnyOf1VariantPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaygroundStrategySchemaResultAnyOf1VariantPayloadWithDefaults() *PlaygroundStrategySchemaResultAnyOf1VariantPayload {
	this := PlaygroundStrategySchemaResultAnyOf1VariantPayload{}
	return &this
}

// GetType returns the Type field value
func (o *PlaygroundStrategySchemaResultAnyOf1VariantPayload) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PlaygroundStrategySchemaResultAnyOf1VariantPayload) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PlaygroundStrategySchemaResultAnyOf1VariantPayload) SetType(v string) {
	o.Type = v
}

// GetValue returns the Value field value
func (o *PlaygroundStrategySchemaResultAnyOf1VariantPayload) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *PlaygroundStrategySchemaResultAnyOf1VariantPayload) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *PlaygroundStrategySchemaResultAnyOf1VariantPayload) SetValue(v string) {
	o.Value = v
}

func (o PlaygroundStrategySchemaResultAnyOf1VariantPayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlaygroundStrategySchemaResultAnyOf1VariantPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullablePlaygroundStrategySchemaResultAnyOf1VariantPayload struct {
	value *PlaygroundStrategySchemaResultAnyOf1VariantPayload
	isSet bool
}

func (v NullablePlaygroundStrategySchemaResultAnyOf1VariantPayload) Get() *PlaygroundStrategySchemaResultAnyOf1VariantPayload {
	return v.value
}

func (v *NullablePlaygroundStrategySchemaResultAnyOf1VariantPayload) Set(val *PlaygroundStrategySchemaResultAnyOf1VariantPayload) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaygroundStrategySchemaResultAnyOf1VariantPayload) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaygroundStrategySchemaResultAnyOf1VariantPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaygroundStrategySchemaResultAnyOf1VariantPayload(val *PlaygroundStrategySchemaResultAnyOf1VariantPayload) *NullablePlaygroundStrategySchemaResultAnyOf1VariantPayload {
	return &NullablePlaygroundStrategySchemaResultAnyOf1VariantPayload{value: val, isSet: true}
}

func (v NullablePlaygroundStrategySchemaResultAnyOf1VariantPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaygroundStrategySchemaResultAnyOf1VariantPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
