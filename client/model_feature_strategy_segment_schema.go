/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the FeatureStrategySegmentSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeatureStrategySegmentSchema{}

// FeatureStrategySegmentSchema struct for FeatureStrategySegmentSchema
type FeatureStrategySegmentSchema struct {
	SegmentId         int32  `json:"segmentId"`
	FeatureStrategyId string `json:"featureStrategyId"`
}

// NewFeatureStrategySegmentSchema instantiates a new FeatureStrategySegmentSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeatureStrategySegmentSchema(segmentId int32, featureStrategyId string) *FeatureStrategySegmentSchema {
	this := FeatureStrategySegmentSchema{}
	this.SegmentId = segmentId
	this.FeatureStrategyId = featureStrategyId
	return &this
}

// NewFeatureStrategySegmentSchemaWithDefaults instantiates a new FeatureStrategySegmentSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeatureStrategySegmentSchemaWithDefaults() *FeatureStrategySegmentSchema {
	this := FeatureStrategySegmentSchema{}
	return &this
}

// GetSegmentId returns the SegmentId field value
func (o *FeatureStrategySegmentSchema) GetSegmentId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SegmentId
}

// GetSegmentIdOk returns a tuple with the SegmentId field value
// and a boolean to check if the value has been set.
func (o *FeatureStrategySegmentSchema) GetSegmentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SegmentId, true
}

// SetSegmentId sets field value
func (o *FeatureStrategySegmentSchema) SetSegmentId(v int32) {
	o.SegmentId = v
}

// GetFeatureStrategyId returns the FeatureStrategyId field value
func (o *FeatureStrategySegmentSchema) GetFeatureStrategyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeatureStrategyId
}

// GetFeatureStrategyIdOk returns a tuple with the FeatureStrategyId field value
// and a boolean to check if the value has been set.
func (o *FeatureStrategySegmentSchema) GetFeatureStrategyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeatureStrategyId, true
}

// SetFeatureStrategyId sets field value
func (o *FeatureStrategySegmentSchema) SetFeatureStrategyId(v string) {
	o.FeatureStrategyId = v
}

func (o FeatureStrategySegmentSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeatureStrategySegmentSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["segmentId"] = o.SegmentId
	toSerialize["featureStrategyId"] = o.FeatureStrategyId
	return toSerialize, nil
}

type NullableFeatureStrategySegmentSchema struct {
	value *FeatureStrategySegmentSchema
	isSet bool
}

func (v NullableFeatureStrategySegmentSchema) Get() *FeatureStrategySegmentSchema {
	return v.value
}

func (v *NullableFeatureStrategySegmentSchema) Set(val *FeatureStrategySegmentSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableFeatureStrategySegmentSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableFeatureStrategySegmentSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeatureStrategySegmentSchema(val *FeatureStrategySegmentSchema) *NullableFeatureStrategySegmentSchema {
	return &NullableFeatureStrategySegmentSchema{value: val, isSet: true}
}

func (v NullableFeatureStrategySegmentSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeatureStrategySegmentSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
