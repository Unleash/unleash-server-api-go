/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpsertStrategySchemaParametersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpsertStrategySchemaParametersInner{}

// UpsertStrategySchemaParametersInner struct for UpsertStrategySchemaParametersInner
type UpsertStrategySchemaParametersInner struct {
	Name        *string `json:"name,omitempty"`
	Type        *string `json:"type,omitempty"`
	Description *string `json:"description,omitempty"`
	Required    *bool   `json:"required,omitempty"`
}

// NewUpsertStrategySchemaParametersInner instantiates a new UpsertStrategySchemaParametersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpsertStrategySchemaParametersInner() *UpsertStrategySchemaParametersInner {
	this := UpsertStrategySchemaParametersInner{}
	return &this
}

// NewUpsertStrategySchemaParametersInnerWithDefaults instantiates a new UpsertStrategySchemaParametersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpsertStrategySchemaParametersInnerWithDefaults() *UpsertStrategySchemaParametersInner {
	this := UpsertStrategySchemaParametersInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpsertStrategySchemaParametersInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertStrategySchemaParametersInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpsertStrategySchemaParametersInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpsertStrategySchemaParametersInner) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpsertStrategySchemaParametersInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertStrategySchemaParametersInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UpsertStrategySchemaParametersInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UpsertStrategySchemaParametersInner) SetType(v string) {
	o.Type = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpsertStrategySchemaParametersInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertStrategySchemaParametersInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpsertStrategySchemaParametersInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpsertStrategySchemaParametersInner) SetDescription(v string) {
	o.Description = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *UpsertStrategySchemaParametersInner) GetRequired() bool {
	if o == nil || IsNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertStrategySchemaParametersInner) GetRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *UpsertStrategySchemaParametersInner) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *UpsertStrategySchemaParametersInner) SetRequired(v bool) {
	o.Required = &v
}

func (o UpsertStrategySchemaParametersInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpsertStrategySchemaParametersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	return toSerialize, nil
}

type NullableUpsertStrategySchemaParametersInner struct {
	value *UpsertStrategySchemaParametersInner
	isSet bool
}

func (v NullableUpsertStrategySchemaParametersInner) Get() *UpsertStrategySchemaParametersInner {
	return v.value
}

func (v *NullableUpsertStrategySchemaParametersInner) Set(val *UpsertStrategySchemaParametersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpsertStrategySchemaParametersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpsertStrategySchemaParametersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpsertStrategySchemaParametersInner(val *UpsertStrategySchemaParametersInner) *NullableUpsertStrategySchemaParametersInner {
	return &NullableUpsertStrategySchemaParametersInner{value: val, isSet: true}
}

func (v NullableUpsertStrategySchemaParametersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpsertStrategySchemaParametersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
