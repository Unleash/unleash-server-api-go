/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.0-main
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CloneEnvironmentSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloneEnvironmentSchema{}

// CloneEnvironmentSchema struct for CloneEnvironmentSchema
type CloneEnvironmentSchema struct {
	// The name of the new cloned environment, this cannot be changed later
	Name string `json:"name"`
	// Updates the type of environment (i.e. development or production).
	Type string `json:"type"`
	// A list of projects that should be included in the cloned environment.
	Projects []string `json:"projects,omitempty"`
	// Copies the RBAC permissions from the source environment if true. Defaults to true
	ClonePermissions *bool `json:"clonePermissions,omitempty"`
}

// NewCloneEnvironmentSchema instantiates a new CloneEnvironmentSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloneEnvironmentSchema(name string, type_ string) *CloneEnvironmentSchema {
	this := CloneEnvironmentSchema{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewCloneEnvironmentSchemaWithDefaults instantiates a new CloneEnvironmentSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloneEnvironmentSchemaWithDefaults() *CloneEnvironmentSchema {
	this := CloneEnvironmentSchema{}
	return &this
}

// GetName returns the Name field value
func (o *CloneEnvironmentSchema) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CloneEnvironmentSchema) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CloneEnvironmentSchema) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *CloneEnvironmentSchema) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CloneEnvironmentSchema) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CloneEnvironmentSchema) SetType(v string) {
	o.Type = v
}

// GetProjects returns the Projects field value if set, zero value otherwise.
func (o *CloneEnvironmentSchema) GetProjects() []string {
	if o == nil || IsNil(o.Projects) {
		var ret []string
		return ret
	}
	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneEnvironmentSchema) GetProjectsOk() ([]string, bool) {
	if o == nil || IsNil(o.Projects) {
		return nil, false
	}
	return o.Projects, true
}

// HasProjects returns a boolean if a field has been set.
func (o *CloneEnvironmentSchema) HasProjects() bool {
	if o != nil && !IsNil(o.Projects) {
		return true
	}

	return false
}

// SetProjects gets a reference to the given []string and assigns it to the Projects field.
func (o *CloneEnvironmentSchema) SetProjects(v []string) {
	o.Projects = v
}

// GetClonePermissions returns the ClonePermissions field value if set, zero value otherwise.
func (o *CloneEnvironmentSchema) GetClonePermissions() bool {
	if o == nil || IsNil(o.ClonePermissions) {
		var ret bool
		return ret
	}
	return *o.ClonePermissions
}

// GetClonePermissionsOk returns a tuple with the ClonePermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneEnvironmentSchema) GetClonePermissionsOk() (*bool, bool) {
	if o == nil || IsNil(o.ClonePermissions) {
		return nil, false
	}
	return o.ClonePermissions, true
}

// HasClonePermissions returns a boolean if a field has been set.
func (o *CloneEnvironmentSchema) HasClonePermissions() bool {
	if o != nil && !IsNil(o.ClonePermissions) {
		return true
	}

	return false
}

// SetClonePermissions gets a reference to the given bool and assigns it to the ClonePermissions field.
func (o *CloneEnvironmentSchema) SetClonePermissions(v bool) {
	o.ClonePermissions = &v
}

func (o CloneEnvironmentSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloneEnvironmentSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	if !IsNil(o.Projects) {
		toSerialize["projects"] = o.Projects
	}
	if !IsNil(o.ClonePermissions) {
		toSerialize["clonePermissions"] = o.ClonePermissions
	}
	return toSerialize, nil
}

type NullableCloneEnvironmentSchema struct {
	value *CloneEnvironmentSchema
	isSet bool
}

func (v NullableCloneEnvironmentSchema) Get() *CloneEnvironmentSchema {
	return v.value
}

func (v *NullableCloneEnvironmentSchema) Set(val *CloneEnvironmentSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableCloneEnvironmentSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableCloneEnvironmentSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloneEnvironmentSchema(val *CloneEnvironmentSchema) *NullableCloneEnvironmentSchema {
	return &NullableCloneEnvironmentSchema{value: val, isSet: true}
}

func (v NullableCloneEnvironmentSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloneEnvironmentSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
