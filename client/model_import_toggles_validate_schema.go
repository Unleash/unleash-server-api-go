/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ImportTogglesValidateSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportTogglesValidateSchema{}

// ImportTogglesValidateSchema struct for ImportTogglesValidateSchema
type ImportTogglesValidateSchema struct {
	Errors      []ImportTogglesValidateItemSchema `json:"errors"`
	Warnings    []ImportTogglesValidateItemSchema `json:"warnings"`
	Permissions []ImportTogglesValidateItemSchema `json:"permissions,omitempty"`
}

// NewImportTogglesValidateSchema instantiates a new ImportTogglesValidateSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportTogglesValidateSchema(errors []ImportTogglesValidateItemSchema, warnings []ImportTogglesValidateItemSchema) *ImportTogglesValidateSchema {
	this := ImportTogglesValidateSchema{}
	this.Errors = errors
	this.Warnings = warnings
	return &this
}

// NewImportTogglesValidateSchemaWithDefaults instantiates a new ImportTogglesValidateSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportTogglesValidateSchemaWithDefaults() *ImportTogglesValidateSchema {
	this := ImportTogglesValidateSchema{}
	return &this
}

// GetErrors returns the Errors field value
func (o *ImportTogglesValidateSchema) GetErrors() []ImportTogglesValidateItemSchema {
	if o == nil {
		var ret []ImportTogglesValidateItemSchema
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *ImportTogglesValidateSchema) GetErrorsOk() ([]ImportTogglesValidateItemSchema, bool) {
	if o == nil {
		return nil, false
	}
	return o.Errors, true
}

// SetErrors sets field value
func (o *ImportTogglesValidateSchema) SetErrors(v []ImportTogglesValidateItemSchema) {
	o.Errors = v
}

// GetWarnings returns the Warnings field value
func (o *ImportTogglesValidateSchema) GetWarnings() []ImportTogglesValidateItemSchema {
	if o == nil {
		var ret []ImportTogglesValidateItemSchema
		return ret
	}

	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value
// and a boolean to check if the value has been set.
func (o *ImportTogglesValidateSchema) GetWarningsOk() ([]ImportTogglesValidateItemSchema, bool) {
	if o == nil {
		return nil, false
	}
	return o.Warnings, true
}

// SetWarnings sets field value
func (o *ImportTogglesValidateSchema) SetWarnings(v []ImportTogglesValidateItemSchema) {
	o.Warnings = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *ImportTogglesValidateSchema) GetPermissions() []ImportTogglesValidateItemSchema {
	if o == nil || IsNil(o.Permissions) {
		var ret []ImportTogglesValidateItemSchema
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportTogglesValidateSchema) GetPermissionsOk() ([]ImportTogglesValidateItemSchema, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *ImportTogglesValidateSchema) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []ImportTogglesValidateItemSchema and assigns it to the Permissions field.
func (o *ImportTogglesValidateSchema) SetPermissions(v []ImportTogglesValidateItemSchema) {
	o.Permissions = v
}

func (o ImportTogglesValidateSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportTogglesValidateSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["errors"] = o.Errors
	toSerialize["warnings"] = o.Warnings
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableImportTogglesValidateSchema struct {
	value *ImportTogglesValidateSchema
	isSet bool
}

func (v NullableImportTogglesValidateSchema) Get() *ImportTogglesValidateSchema {
	return v.value
}

func (v *NullableImportTogglesValidateSchema) Set(val *ImportTogglesValidateSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableImportTogglesValidateSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableImportTogglesValidateSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportTogglesValidateSchema(val *ImportTogglesValidateSchema) *NullableImportTogglesValidateSchema {
	return &NullableImportTogglesValidateSchema{value: val, isSet: true}
}

func (v NullableImportTogglesValidateSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportTogglesValidateSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
