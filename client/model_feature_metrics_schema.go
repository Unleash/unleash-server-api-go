/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the FeatureMetricsSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeatureMetricsSchema{}

// FeatureMetricsSchema A batch of feature metrics
type FeatureMetricsSchema struct {
	// The version of this schema
	Version int32 `json:"version"`
	// The maturity level of this API (alpha, beta, stable, deprecated)
	Maturity string `json:"maturity"`
	// Metrics gathered per environment
	Data []FeatureEnvironmentMetricsSchema `json:"data"`
}

// NewFeatureMetricsSchema instantiates a new FeatureMetricsSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeatureMetricsSchema(version int32, maturity string, data []FeatureEnvironmentMetricsSchema) *FeatureMetricsSchema {
	this := FeatureMetricsSchema{}
	this.Version = version
	this.Maturity = maturity
	this.Data = data
	return &this
}

// NewFeatureMetricsSchemaWithDefaults instantiates a new FeatureMetricsSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeatureMetricsSchemaWithDefaults() *FeatureMetricsSchema {
	this := FeatureMetricsSchema{}
	return &this
}

// GetVersion returns the Version field value
func (o *FeatureMetricsSchema) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *FeatureMetricsSchema) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *FeatureMetricsSchema) SetVersion(v int32) {
	o.Version = v
}

// GetMaturity returns the Maturity field value
func (o *FeatureMetricsSchema) GetMaturity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Maturity
}

// GetMaturityOk returns a tuple with the Maturity field value
// and a boolean to check if the value has been set.
func (o *FeatureMetricsSchema) GetMaturityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Maturity, true
}

// SetMaturity sets field value
func (o *FeatureMetricsSchema) SetMaturity(v string) {
	o.Maturity = v
}

// GetData returns the Data field value
func (o *FeatureMetricsSchema) GetData() []FeatureEnvironmentMetricsSchema {
	if o == nil {
		var ret []FeatureEnvironmentMetricsSchema
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *FeatureMetricsSchema) GetDataOk() ([]FeatureEnvironmentMetricsSchema, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *FeatureMetricsSchema) SetData(v []FeatureEnvironmentMetricsSchema) {
	o.Data = v
}

func (o FeatureMetricsSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeatureMetricsSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	toSerialize["maturity"] = o.Maturity
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableFeatureMetricsSchema struct {
	value *FeatureMetricsSchema
	isSet bool
}

func (v NullableFeatureMetricsSchema) Get() *FeatureMetricsSchema {
	return v.value
}

func (v *NullableFeatureMetricsSchema) Set(val *FeatureMetricsSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableFeatureMetricsSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableFeatureMetricsSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeatureMetricsSchema(val *FeatureMetricsSchema) *NullableFeatureMetricsSchema {
	return &NullableFeatureMetricsSchema{value: val, isSet: true}
}

func (v NullableFeatureMetricsSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeatureMetricsSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
