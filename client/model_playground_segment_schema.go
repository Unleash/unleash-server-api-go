/*
Unleash API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PlaygroundSegmentSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlaygroundSegmentSchema{}

// PlaygroundSegmentSchema struct for PlaygroundSegmentSchema
type PlaygroundSegmentSchema struct {
	// The segment's id.
	Id int32 `json:"id"`
	// The name of the segment.
	Name string `json:"name"`
	// Whether this was evaluated as true or false.
	Result bool `json:"result"`
	// The list of constraints in this segment.
	Constraints []PlaygroundConstraintSchema `json:"constraints"`
}

// NewPlaygroundSegmentSchema instantiates a new PlaygroundSegmentSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaygroundSegmentSchema(id int32, name string, result bool, constraints []PlaygroundConstraintSchema) *PlaygroundSegmentSchema {
	this := PlaygroundSegmentSchema{}
	this.Id = id
	this.Name = name
	this.Result = result
	this.Constraints = constraints
	return &this
}

// NewPlaygroundSegmentSchemaWithDefaults instantiates a new PlaygroundSegmentSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaygroundSegmentSchemaWithDefaults() *PlaygroundSegmentSchema {
	this := PlaygroundSegmentSchema{}
	return &this
}

// GetId returns the Id field value
func (o *PlaygroundSegmentSchema) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PlaygroundSegmentSchema) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PlaygroundSegmentSchema) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *PlaygroundSegmentSchema) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PlaygroundSegmentSchema) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PlaygroundSegmentSchema) SetName(v string) {
	o.Name = v
}

// GetResult returns the Result field value
func (o *PlaygroundSegmentSchema) GetResult() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *PlaygroundSegmentSchema) GetResultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *PlaygroundSegmentSchema) SetResult(v bool) {
	o.Result = v
}

// GetConstraints returns the Constraints field value
func (o *PlaygroundSegmentSchema) GetConstraints() []PlaygroundConstraintSchema {
	if o == nil {
		var ret []PlaygroundConstraintSchema
		return ret
	}

	return o.Constraints
}

// GetConstraintsOk returns a tuple with the Constraints field value
// and a boolean to check if the value has been set.
func (o *PlaygroundSegmentSchema) GetConstraintsOk() ([]PlaygroundConstraintSchema, bool) {
	if o == nil {
		return nil, false
	}
	return o.Constraints, true
}

// SetConstraints sets field value
func (o *PlaygroundSegmentSchema) SetConstraints(v []PlaygroundConstraintSchema) {
	o.Constraints = v
}

func (o PlaygroundSegmentSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlaygroundSegmentSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["result"] = o.Result
	toSerialize["constraints"] = o.Constraints
	return toSerialize, nil
}

type NullablePlaygroundSegmentSchema struct {
	value *PlaygroundSegmentSchema
	isSet bool
}

func (v NullablePlaygroundSegmentSchema) Get() *PlaygroundSegmentSchema {
	return v.value
}

func (v *NullablePlaygroundSegmentSchema) Set(val *PlaygroundSegmentSchema) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaygroundSegmentSchema) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaygroundSegmentSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaygroundSegmentSchema(val *PlaygroundSegmentSchema) *NullablePlaygroundSegmentSchema {
	return &NullablePlaygroundSegmentSchema{value: val, isSet: true}
}

func (v NullablePlaygroundSegmentSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaygroundSegmentSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
